{
	"appsUsed":[
		
	],
	"createdTime":1752761113709,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1752761996071,
		"deployedBy":39713,
		"deployedDefinitionId":"6879068b62d7239e6111cfe3",
		"status":"DEPLOYED",
		"version":1,
		"workflowVersion":5
	},
	"edges":[
		{
			"fromNodeId":"n_gP2eI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_dcFpM",
			"type":"next"
		},
		{
			"fromNodeId":"n_dcFpM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_SWWyy",
			"type":"next"
		},
		{
			"fromNodeId":"n_SWWyy",
			"priority":0,
			"skip":false,
			"toNodeId":"n_o0TSV",
			"type":"next"
		},
		{
			"fromNodeId":"n_o0TSV",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vITM5",
			"type":"next"
		}
	],
	"id":"6879031962d7239e6111a800",
	"lastModifiedBy":39713,
	"lcName":"[virtu-support-checkin-bot-fn]createadaptivecarttableendpoint",
	"modifiedTime":1759555712249,
	"name":"[virtu-support-checkin-bot-fn]CreateAdaptiveCartTableEndpoint",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":865,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_iDBfH-1",
			"id":"n_gP2eI",
			"index":1,
			"inputs":{
				"request":{
					"queryParams":{
						"type":"object",
						"additionalProperties":false,
						"required":[],
						"properties":{
							"columnSeparator":{
								"type":"string",
								"title":"Column Separator"
							},
							"columnSetSeparator":{
								"type":"string",
								"title":"Column Set Separator"
							}
						}
					},
					"contentType":"application/json"
				},
				"endpointType":"REST",
				"response":[
					{
						"name":"200",
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"body":{
							"type":"object",
							"properties":{
								"body":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Body"
								}
							},
							"additionalProperties":false,
							"required":[
								"body"
							]
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":812,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_iDBfH-1",
			"id":"n_dcFpM",
			"index":2,
			"inputs":{
				"automationId":"687904fc62d7239e6111c2d4",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"tableData":"",
					"columnSetSeparator":"{{ n_gP2eI.outputs.queryParams.columnSetSeparator }}",
					"columnSeparator":"{{ n_gP2eI.outputs.queryParams.columnSeparator }}"
				}
			},
			"skip":true,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_iDBfH-1",
			"id":"n_SWWyy",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"body"
					],
					"properties":{
						"body":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Body"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"data",
						"columnSetSeparator",
						"columnSeparator"
					],
					"properties":{
						"data":{
							"type":"string",
							"title":"Data"
						},
						"columnSetSeparator":{
							"type":"string",
							"title":"Column Set Separator"
						},
						"columnSeparator":{
							"type":"string",
							"title":"Column Separator"
						}
					}
				},
				"code":" def rowStrings = data.split(columnSetSeparator)\n    \n    // Determine the number of columns from the first row (the header)\n    // This ensures subsequent rows do not exceed the header's column count.\n    int headerColumnCount = rowStrings.first().split(columnSeparator).size()\n\n    // Use 'collect' to transform each row string into a map\n    def bodyList = rowStrings.collect { rowStr ->\n        // Split the row into columns and truncate the list to the header's column count\n        def columns = rowStr.split(columnSeparator).take(headerColumnCount)\n\n        // For each column string, create the nested \"Column\" map structure\n        def columnList = columns.collect { colText ->\n            [\n                type: 'Column',\n                width: 'stretch',\n                items: [\n                    [\n                        type: 'TextBlock',\n                        text: colText,\n                        wrap: true\n                    ]\n                ]\n            ]\n        }\n\n        // Return the map for the current row (\"ColumnSet\")\n        [\n            type: 'ColumnSet',\n            columns: columnList\n        ]\n    }\n\n    // Construct and return the final table object\n    return [\"body\": bodyList]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"columnSetSeparator":"{{ n_3Llvd.outputs.columnSetSeparator }}",
					"columnSeparator":"{{ n_3Llvd.outputs.columnSeparator }}"
				}
			},
			"skip":true,
			"subTitle":"Code",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":156,
				"resourceName":"code_by_unifyapps_csharp",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_iDBfH-1",
			"id":"n_o0TSV",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"tableObject":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Table Object"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"columnSetSeparator":{
							"type":"string",
							"title":"Column Set Separator"
						},
						"columnSeparator":{
							"type":"string",
							"title":"Column Separator"
						},
						"data":{
							"type":"string",
							"title":"Data"
						}
					}
				},
				"code":" using System.Collections.Generic;\n \n \n \n public class Table\n    {\n        public List<Body> body { get; set; }\n    }\n \n \n \nstring[] columnSetListStrArray = data.Split(columnSetSeparator);\nTable tableObject = new Table();\n\nList<Body> BodyList = new List<Body>();\nbool isFirstRow = true;\n// for prevent add more columns thant header keep header size\n            int headerColumnCount=0;\n        foreach (var columnSetStr in columnSetListStrArray)\n        {\n            Body tableBody = new Body();\n            // extract columns string \n            string[] columnStrArray = columnSetStr.Split(columnSeparator);\n            List<Column> columnList = new List<Column>();\n            \n            if(isFirstRow){\n                  headerColumnCount=  columnStrArray.Length;\n                isFirstRow = false;\n            }\n            int count = 0;\n            foreach (var column in columnStrArray)\n            {   \n               \n                Column columnObj = new Column();\n                \n                List<Item> itemList = new List<Item>();\n               Item item = new Item();\n               item.text = column;\n               item.type = \"TextBlock\";\n               item.wrap=true;\n               itemList.Add(item);\n               columnObj.items=itemList;\n               columnObj.type=\"Column\";\n               columnObj.width=\"stretch\";\n               columnList.Add(columnObj);\n               count ++;\n                if(count>=headerColumnCount){\n                        break;\n                }\n    }\n    tableBody.columns = columnList;\n    tableBody.type = \"ColumnSet\";\n    BodyList.Add(tableBody);\n}\ntableObject.body = BodyList;\nvar result = new Dictionary<string, object>\n{\n    { \"tableObject\", tableObject }\n};",
				"isAsync":false,
				"parameters":{
					"columnSetSeparator":"{{ n_gP2eI.outputs.queryParams.columnSetSeparator }}",
					"columnSeparator":"{{ n_gP2eI.outputs.queryParams.columnSeparator }}",
					"data":"{{ n_gP2eI.outputs.body }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute CSharp script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":818,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_iDBfH-1",
			"id":"n_vITM5",
			"index":5,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_200",
				"body":{
					"body":"{{ n_dcFpM.outputs.body }}"
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":39713,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":11
}