{
	"appsUsed":[
		
	],
	"createdTime":1754587539984,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1754642258365,
		"deployedBy":39715,
		"deployedDefinitionId":"6895b7520a417bcb86f845f3",
		"status":"DEPLOYED",
		"version":3,
		"workflowVersion":6
	},
	"edges":[
		{
			"fromNodeId":"n_wscMO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_H8apU",
			"type":"next"
		},
		{
			"fromNodeId":"n_H8apU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2WTma",
			"type":"next"
		},
		{
			"fromNodeId":"n_2WTma",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_SaS7V",
			"type":"if"
		},
		{
			"fromNodeId":"n_2WTma",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Hl8Uh",
			"type":"next"
		},
		{
			"fromNodeId":"n_SaS7V",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2romm",
			"type":"next"
		},
		{
			"fromNodeId":"n_Hl8Uh",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2romm",
			"type":"next"
		}
	],
	"id":"6894e1936e05041158506bfd",
	"lastModifiedBy":103171,
	"lcName":"[virtu-genocijwtfn]getjwtfromemail",
	"modifiedTime":1759005476455,
	"name":"[virtu-GenOciJwtFN]GetJWTFromEmail",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":868,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_3dGyu-1",
			"id":"n_wscMO",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json",
					"headers":{
						"type":"object",
						"properties":{
							"email":{
								"type":"string",
								"title":"Email"
							}
						},
						"additionalProperties":false,
						"required":[]
					}
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"name":"ok",
						"body":{
							"type":"object",
							"properties":{
								"result":{
									"type":"string",
									"title":"Result"
								}
							},
							"additionalProperties":false,
							"required":[
								"result"
							]
						},
						"headers":{
							"type":"object",
							"properties":{
								"Content-Type":{
									"type":"string",
									"title":"Content Type"
								},
								"charset":{
									"type":"string",
									"title":"Charset"
								}
							},
							"additionalProperties":false,
							"required":[]
						}
					},
					{
						"status":400,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"body":{
							"type":"object",
							"properties":{
								"error":{
									"type":"string",
									"title":"Error"
								}
							},
							"additionalProperties":false,
							"required":[
								"error"
							]
						},
						"name":"Bad-Request"
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":768,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_3dGyu-1",
			"id":"n_H8apU",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"token":{
							"type":"string",
							"title":"token"
						},
						"error":{
							"type":"string",
							"title":"Error"
						}
					},
					"additionalProperties":false,
					"required":[
						"token",
						"error"
					]
				},
				"configurationMode":"MANUAL",
				"input":{
					"type":"object",
					"properties":{
						"email":{
							"type":"string",
							"title":"Email"
						},
						"certificate_alias":{
							"type":"string",
							"title":"Certificate Alias"
						},
						"V5ClientID":{
							"type":"string",
							"title":"V5 Client ID"
						},
						"V5ClientSecret":{
							"type":"string",
							"title":"V5 Client Secret"
						}
					},
					"additionalProperties":false,
					"required":[
						"email",
						"certificate_alias",
						"V5ClientID",
						"V5ClientSecret"
					]
				},
				"imports":[
					"requests",
					"pyjwt ",
					"cryptography"
				],
				"code":"import os\nimport re\nimport requests\nimport jwt\nimport base64\nimport uuid\nimport time\nfrom cryptography.hazmat.primitives import serialization\n\n# Initialize clients\ntoken_client = requests.Session()\nemployee_client = requests.Session()\nbs_client = requests.Session()\n\ndef get_person_number_from_email(email: str) -> str:\n    person_number_string = \"\"\n\n    # Email validation\n    if not re.match(r\"^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$\", email, re.IGNORECASE):\n        logger.info(\"Please provide valid email\")\n        return person_number_string\n\n    # Token request\n    token_url = \"<YOUR_TOKEN_URL_HERE>\"  # Fill in actual token URL\n    token_payload = {\n        \"client_id\": V5ClientID,\n        \"client_secret\": V5ClientSecret,\n        \"grant_type\": \"client_credentials\"\n    }\n\n    try:\n        token_response = token_client.post(token_url, data=token_payload)\n        token_response.raise_for_status()\n        token_data = token_response.json()\n\n        # Set bearer token in employee client\n        access_token = token_data[\"access_token\"]\n        token_type = token_data[\"token_type\"]\n        employee_client.headers.update({\n            \"Authorization\": f\"{token_type} {access_token}\"\n        })\n\n        # Send employee lookup request\n        query = f\"?onlyData=true&q=upper(emails.EmailAddress)='{email.upper()}'\"\n        person_url = \"<YOUR_PERSON_LOOKUP_URL_HERE>\" + query  # Fill in actual person lookup base URL\n\n        person_response = employee_client.get(person_url)\n        person_response.raise_for_status()\n        person_data = person_response.json()\n\n        if \"items\" in person_data and len(person_data[\"items\"]) == 1:\n            person_number_string = person_data[\"items\"][0][\"PersonNumber\"]\n\n    except Exception as ex:\n        logger.error(f\"Error fetching person number: {ex}\", exc_info=True)\n        raise\n\n    return person_number_string\n\n\ndef generate_jwt_token(person_number: str) -> str:\n    jwt_string = \"\"\n\n    if person_number:\n        # Load private key from environment (base64-encoded)\n        private_key_b64 = os.getenv(\"private-key\")\n        if not private_key_b64:\n            raise ValueError(\"Missing private-key in environment variables\")\n\n        private_key_bytes = base64.b64decode(private_key_b64)\n\n        # Load the private key in PKCS8 format\n        private_key = serialization.load_der_private_key(\n            private_key_bytes,\n            password=None,\n        )\n\n        now = int(time.time())\n        payload = {\n            \"exp\": now + 3600,  # 1 hour later\n            \"iat\": now,\n            \"sub\": person_number,\n            \"jti\": str(uuid.uuid4()),\n            \"aud\": os.getenv(\"audience\")\n        }\n\n        headers = {\n            \"kid\": os.getenv(\"certificate-alias\")\n        }\n\n        jwt_string = jwt.encode(\n            payload,\n            private_key,\n            algorithm=\"RS256\",\n            headers=headers\n        )\n\n    return jwt_string\n\ndef get_jwt_for_oci(jwt: str) -> str:\n    jwt_string = \"\"\n\n    if not jwt:\n        logger.info(\"JWT is empty\")\n        return jwt_string\n\n    try:\n        url = \"token\"  # Replace with full token endpoint URL if needed\n\n        payload = {\n            \"grant_type\": \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n            \"assertion\": jwt,\n            \"scope\": os.getenv(\"app-scope\")\n        }\n\n        headers = {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n\n        response = bs_client.post(url, data=payload, headers=headers)\n        response.raise_for_status()\n\n        token_response = response.json()\n        jwt_string = token_response.get(\"access_token\", \"\")\n\n    except Exception as ex:\n        return ex\n\n    return jwt_string\n\ntry:\n    person_number = get_person_number_from_email(email)\n    jwt_token = generate_jwt_token(person_number)\n    result[\"token\"] = get_jwt_for_oci(jwt_token)\nexcept Exception as ex:\n    result = {}\n    result[\"error\"] = \"error while getting token\"\n\n",
				"isAsync":false,
				"python_version":"3.12",
				"parameters":{
					"email":"{{ n_wscMO.outputs.headers.email }}",
					"certificate_alias":"{{ __ENV__.outputs.JWTTokenFromEmail-endpoint-certificate_alias }}",
					"V5ClientID":"{{ __ENV__.outputs.JWTTokenFromEmail-endpoint-V5ClientID }}",
					"V5ClientSecret":"{{ __ENV__.outputs.JWTTokenFromEmail-endpoint-V5ClientSecret }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":760,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_3dGyu-1",
			"id":"n_2WTma",
			"index":3,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_H8apU.outputs.result }}",
						"filter":{
							"operator":"EQUAL",
							"value":"token"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":821,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2WTma@_3dGyu-1@y",
			"id":"n_SaS7V",
			"index":4,
			"inputs":{
				"headers":{
					"Content-Type":"text/plain",
					"charset":"utf-8"
				},
				"streamingCompleted":true,
				"responseName":"200_ok",
				"body":{
					"result":"{{ n_H8apU.outputs.result.token }}"
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":806,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2WTma@_3dGyu-1@n",
			"id":"n_Hl8Uh",
			"index":5,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"error":{
							"type":"string",
							"title":"Error"
						}
					},
					"additionalProperties":false,
					"required":[
						"error"
					]
				},
				"compile_static":false,
				"code":"return [\"error\": \"request (body/header) is not valid\"]",
				"parameters":{
					"error":"{{ n_H8apU.outputs.result.error }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":821,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_3dGyu-1",
			"id":"n_2romm",
			"index":6,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"400_Bad-Request",
				"body":{
					"error":"{{ n_Hl8Uh.outputs.result.error }}"
				},
				"status":400
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":39715,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":7
}