{
	"appsUsed":[
		
	],
	"createdTime":1754642295964,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_EM2FA",
			"priority":0,
			"skip":false,
			"toNodeId":"n_eK7hX",
			"type":"next"
		},
		{
			"fromNodeId":"n_eK7hX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_AZoMv",
			"type":"next"
		},
		{
			"fromNodeId":"n_AZoMv",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2WTma",
			"type":"next"
		},
		{
			"fromNodeId":"n_2WTma",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_SaS7V",
			"type":"if"
		},
		{
			"fromNodeId":"n_2WTma",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_0rTBj",
			"type":"next"
		},
		{
			"fromNodeId":"n_SaS7V",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GIebe",
			"type":"next"
		},
		{
			"fromNodeId":"n_0rTBj",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GIebe",
			"type":"next"
		}
	],
	"id":"6895b7770a417bcb86f84734",
	"lastModifiedBy":103171,
	"lcName":"[virtu-genocijwtfn]getjwtfromtoken",
	"modifiedTime":1759005538146,
	"name":"[virtu-GenOciJwtFN]GetJWTFromToken",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{
						"response":[
							null,
							{}
						]
					}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":868,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_hmRre-1",
			"id":"n_EM2FA",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json",
					"headers":{
						"type":"object",
						"properties":{
							"Authorization":{
								"type":"string",
								"title":"Authorization"
							}
						},
						"additionalProperties":false,
						"required":[]
					}
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"name":"Ok",
						"body":{
							"type":"object",
							"properties":{
								"token":{
									"type":"string",
									"title":"Token"
								}
							},
							"additionalProperties":false,
							"required":[
								"token"
							]
						}
					},
					{
						"status":400,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"name":"Bad-Request",
						"body":{
							"type":"object",
							"properties":{
								"error":{
									"type":"string",
									"title":"Error"
								}
							},
							"additionalProperties":false,
							"required":[
								"error"
							]
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":806,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_hmRre-1",
			"id":"n_eK7hX",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"jwt":{
							"type":"string",
							"title":"Jwt"
						}
					},
					"additionalProperties":false,
					"required":[
						"jwt"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"Authorization":{
							"type":"string",
							"title":"Authorization"
						}
					},
					"additionalProperties":false,
					"required":[
						"Authorization"
					]
				},
				"compile_static":false,
				"code":"def authValue = Authorization\ndef jwtToken = \"\"\n\nif (authValue && authValue.toLowerCase().startsWith(\"bearer \")) {\n    jwtToken = authValue.split(\" \")[1]\n}\n\nreturn [\"jwt\": jwtToken]",
				"parameters":{
					"Authorization":"{{ n_EM2FA.outputs.headers.Authorization }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":768,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_hmRre-1",
			"id":"n_AZoMv",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"token":{
							"type":"string",
							"title":"Token"
						},
						"error":{
							"type":"string",
							"title":"Error"
						}
					},
					"additionalProperties":false,
					"required":[
						"token",
						"error"
					]
				},
				"configurationMode":"MANUAL",
				"input":{
					"type":"object",
					"properties":{
						"token":{
							"type":"string",
							"title":"Token"
						},
						"PRIVATE_KEY_B64":{
							"type":"string",
							"title":"PRIVATE KEY B 64"
						},
						"CLIENT_ID":{
							"type":"string",
							"title":"CLIENT ID"
						},
						"AUDIENCE":{
							"type":"string",
							"title":"AUDIENCE"
						},
						"CERTIFICATE_ALIAS":{
							"type":"string",
							"title":"CERTIFICATE ALIAS"
						},
						"V5_CLIENT_ID":{
							"type":"string",
							"title":"V 5 CLIENT ID"
						},
						"V5_CLIENT_SECRET":{
							"type":"string",
							"title":"V 5 CLIENT SECRET"
						},
						"APP_SCOPE":{
							"type":"string",
							"title":"APP SCOPE"
						},
						"ACCESS_TOKEN_URL":{
							"type":"string",
							"title":"ACCESS TOKEN URL"
						},
						"EMPLOYEE_URL":{
							"type":"string",
							"title":"EMPLOYEE URL"
						},
						"BS_GET_URL":{
							"type":"string",
							"title":"BS GET URL"
						}
					},
					"additionalProperties":false,
					"required":[
						"token",
						"PRIVATE_KEY_B64",
						"CLIENT_ID",
						"AUDIENCE",
						"CERTIFICATE_ALIAS",
						"V5_CLIENT_ID",
						"V5_CLIENT_SECRET",
						"APP_SCOPE",
						"ACCESS_TOKEN_URL",
						"EMPLOYEE_URL",
						"BS_GET_URL"
					]
				},
				"imports":[
					"requests",
					"jwt",
					"cryptography"
				],
				"code":"import base64\nimport re\nimport uuid\nfrom datetime import datetime, timedelta\n\nimport jwt\nimport requests\nfrom cryptography.hazmat.primitives import serialization\n\n# ==== Hardcoded values ====\nPRIVATE_KEY_B64 = \"<base64-private-key>\"\nCLIENT_ID = \"<client-id>\"\nAUDIENCE = \"<audience>\"\nCERTIFICATE_ALIAS = \"<certificate-alias>\"\nV5_CLIENT_ID = \"<V5ClientID>\"\nV5_CLIENT_SECRET = \"<V5ClientSecret>\"\nAPP_SCOPE = \"<app-scope>\"\nACCESS_TOKEN_URL = \"<AccessToken URL>\"\nEMPLOYEE_URL = \"<EmployeeURL>\"\nBS_GET_URL = \"<BSGet URL>\"\n\n# Create reusable HTTP sessions\ntoken_client = requests.Session()\nemployee_client = requests.Session()\nbs_client = requests.Session()\n\n\ndef generate_jwt_token(person_number: str) -> str:\n    if not person_number:\n        return \"\"\n\n    private_key_bytes = base64.b64decode(PRIVATE_KEY_B64)\n\n    private_key = serialization.load_der_private_key(\n        private_key_bytes,\n        password=None\n    )\n\n    now = datetime.utcnow()\n    payload = {\n        \"exp\": int((now + timedelta(hours=1)).timestamp()),\n        \"iat\": int(now.timestamp()),\n        \"sub\": person_number,\n        \"jti\": str(uuid.uuid4()),\n        \"aud\": AUDIENCE\n    }\n\n    headers = {\n        \"kid\": CERTIFICATE_ALIAS\n    }\n\n    jwt_token = jwt.encode(\n        payload,\n        private_key,\n        algorithm=\"RS256\",\n        headers=headers\n    )\n\n    return jwt_token\n\n\ndef get_email_from_token(token: str) -> str:\n    decoded_token = jwt.decode(token, options={\"verify_signature\": False})\n    email = decoded_token.get(\"upn\", \"\")\n\n    if not email:\n        print(\"UPN is not available in the JWT token\")\n\n    return email\n\n\ndef get_person_number_from_email(email: str) -> str:\n    person_number_string = \"\"\n\n    if not re.match(r\"^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$\", email, re.IGNORECASE):\n        print(\"Please provide valid email\")\n        return \"\"\n\n    get_token_request_data = {\n        \"client_id\": V5_CLIENT_ID,\n        \"grant_type\": \"client_credentials\",\n        \"client_secret\": V5_CLIENT_SECRET\n    }\n\n    token_resp = token_client.post(\n        ACCESS_TOKEN_URL,\n        data=get_token_request_data\n    )\n    token_resp.raise_for_status()\n    token_data = token_resp.json()\n\n    employee_client.headers.update({\n        \"Authorization\": f\"{token_data['token_type']} {token_data['access_token']}\"\n    })\n\n    query_url = f\"{EMPLOYEE_URL}?onlyData=true&q=upper(emails.EmailAddress)='{email.upper()}'\"\n    person_resp = employee_client.get(query_url)\n    person_resp.raise_for_status()\n    person_data = person_resp.json()\n\n    if \"items\" in person_data and len(person_data[\"items\"]) == 1:\n        person_number_string = person_data[\"items\"][0][\"PersonNumber\"]\n\n    return person_number_string\n\n\ndef get_jwt_for_oci(jwt_assertion: str) -> str:\n    if not jwt_assertion:\n        print(\"JWT is empty\")\n        return \"\"\n\n    token_data = {\n        \"grant_type\": \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n        \"assertion\": jwt_assertion,\n        \"scope\": APP_SCOPE\n    }\n\n    resp = bs_client.post(f\"{BS_GET_URL}/token\", data=token_data)\n    resp.raise_for_status()\n    data = resp.json()\n\n    return data.get(\"access_token\", \"\")\n\n\ndef get_jwt_from_token(token: str) -> str:\n    email = get_email_from_token(token)\n    person_number = get_person_number_from_email(email)\n    assertion_jwt = generate_jwt_token(person_number)\n    return get_jwt_for_oci(assertion_jwt)\n\n\ndef get_jwt_from_email(email: str) -> str:\n    person_number = get_person_number_from_email(email)\n    assertion_jwt = generate_jwt_token(person_number)\n    return get_jwt_for_oci(assertion_jwt)\n\ntry:\n    new_jwt = get_jwt_from_token(token)\n    result = {}\n    result[\"token\"] = new_jwt\nexcept Exception as ex:\n    result = {}\n    result[\"error\"] = \"error while generating token\"\n",
				"isAsync":false,
				"python_version":"3.12",
				"parameters":{
					"token":"{{ n_eK7hX.outputs.result.jwt }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":760,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_hmRre-1",
			"id":"n_2WTma",
			"index":4,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_AZoMv.outputs.result }}",
						"filter":{
							"operator":"CONTAINS",
							"value":"token"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":821,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2WTma@_hmRre-1@y",
			"id":"n_SaS7V",
			"index":5,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_Ok",
				"body":{
					"token":"{{ n_AZoMv.outputs.result.token }}"
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":806,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2WTma@_hmRre-1@n",
			"id":"n_0rTBj",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"error":{
							"type":"string",
							"title":"Error"
						}
					},
					"additionalProperties":false,
					"required":[
						"error"
					]
				},
				"compile_static":false,
				"code":"return [\"error\": \"request (body/header) is not valid\"]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":821,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_hmRre-1",
			"id":"n_GIebe",
			"index":7,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"400_Bad-Request",
				"body":{
					"error":"{{ n_0rTBj.outputs.result.error }}"
				},
				"status":400
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":39715,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":17
}