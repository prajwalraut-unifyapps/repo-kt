{
	"appsUsed":[
		
	],
	"createdTime":1752818422100,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1753508000835,
		"deployedBy":39713,
		"deployedDefinitionId":"688468a097cc242e33044eb9",
		"status":"DEPLOYED",
		"version":7,
		"workflowVersion":32
	},
	"edges":[
		{
			"fromNodeId":"n_8rFF6",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9RbS9",
			"type":"next"
		},
		{
			"fromNodeId":"n_9RbS9",
			"priority":0,
			"skip":false,
			"toNodeId":"n_d9tyG",
			"type":"next"
		},
		{
			"fromNodeId":"n_d9tyG",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_d9tyG@1",
			"type":"branch"
		},
		{
			"fromNodeId":"n_d9tyG@1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_sIcjO",
			"type":"next"
		},
		{
			"fromNodeId":"n_d9tyG",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_d9tyG@2",
			"type":"branch"
		},
		{
			"fromNodeId":"n_d9tyG@2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ASOJd",
			"type":"next"
		},
		{
			"fromNodeId":"n_sIcjO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aZLOt",
			"type":"next"
		},
		{
			"fromNodeId":"n_ASOJd",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aZLOt",
			"type":"next"
		},
		{
			"fromNodeId":"n_d9tyG",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aZLOt",
			"type":"branch"
		}
	],
	"id":"6879e2f6c50a4674d83a3124",
	"lastModifiedBy":103171,
	"lcName":"[virtu-support-checkin-bot-fn]employeeactivestatusendpoint",
	"modifiedTime":1759004255239,
	"name":"[virtu-support-checkin-bot-fn]EmployeeActiveStatusEndpoint",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":865,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_zzxCZ-1",
			"id":"n_8rFF6",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json",
					"queryParams":{
						"type":"object",
						"properties":{
							"email":{
								"type":"string",
								"title":"Email"
							}
						},
						"additionalProperties":false,
						"required":[]
					},
					"headers":{
						"type":"object",
						"properties":{
							"Authorization":{
								"type":"string",
								"title":"Authorization"
							}
						},
						"additionalProperties":false,
						"required":[]
					}
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"name":"200",
						"body":{
							"type":"object",
							"properties":{
								"result":{
									"type":"string",
									"title":"Result"
								}
							},
							"additionalProperties":false,
							"required":[
								"result"
							]
						}
					},
					{
						"status":401,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"name":"401",
						"body":{
							"type":"object",
							"properties":{
								"errorResponse":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Error Response"
								}
							},
							"additionalProperties":false,
							"required":[]
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":747,
				"resourceName":"code_by_unifyapps_java",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_zzxCZ-1",
			"id":"n_9RbS9",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"result":{
							"type":"object",
							"properties":{
								"errorMessage":{
									"type":"string",
									"title":"Error Message"
								}
							},
							"additionalProperties":false,
							"title":"Result",
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"email":{
							"type":"string",
							"title":"Email"
						},
						"APIMServerUrl":{
							"type":"string",
							"title":"APIM Server Url"
						},
						"ADSearchAPIPath":{
							"type":"string",
							"title":"AD Search API Path"
						},
						"ADServiceAccountSnowSecuriyPrinciple":{
							"type":"string",
							"title":"AD Service Account Snow Securiy Principle"
						},
						"ADServiceAccountSnowsecurityCredencials":{
							"type":"string",
							"title":"AD Service Account Snowsecurity Credencials"
						},
						"virtusaBusinessInternalSubkey":{
							"type":"string",
							"title":"Virtusa Business Internal Subkey"
						},
						"bearerToken":{
							"type":"string",
							"title":"Bearer Token"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":" import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.net.URLEncoder;\nimport java.nio.charset.StandardCharsets;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n public String getADAttribute(String filterVal, String attributeName) {\n            HttpURLConnection conn = null;\n            try {\n                // URL encode parameters to ensure they are safe for the query string\n                String encodedFilter = URLEncoder.encode(filterVal, StandardCharsets.UTF_8.name());\n                String encodedValue = URLEncoder.encode(attributeName, StandardCharsets.UTF_8.name());\n                String encodedPrinciple = URLEncoder.encode(ADServiceAccountSnowSecuriyPrinciple, StandardCharsets.UTF_8.name());\n                String encodedCreds = URLEncoder.encode(ADServiceAccountSnowsecurityCredencials, StandardCharsets.UTF_8.name());\n\n                String apiUrlString = String.format(\"%s%s?filter=%s&value=%s&securityPrinciple=%s&securityCredencials=%s\",\n                        APIMServerUrl, ADSearchAPIPath, encodedFilter, encodedValue, encodedPrinciple, encodedCreds);\n\n                URL url = new URL(apiUrlString);\n                conn = (HttpURLConnection) url.openConnection();\n                conn.setRequestMethod(\"GET\");\n                // The \"Bearer \" prefix is correctly added here.\n                conn.setRequestProperty(\"Authorization\", \"Bearer \" + bearerToken);\n                // Assuming the key is \"Ocp-Apim-Subscription-Key\" based on the Groovy script.\n                conn.setRequestProperty(\"Ocp-Apim-Subscription-Key\", virtusaBusinessInternalSubkey);\n\n\n                int responseCode = conn.getResponseCode();\n                System.out.println(\"API Call to \" + apiUrlString + \" - Response Code: \" + responseCode);\n\n                if (responseCode >= 200 && responseCode < 300) {\n                    try (BufferedReader reader = new BufferedReader(\n                            new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8))) {\n                        return reader.lines().collect(Collectors.joining());\n                    }\n                } else {\n                    // **MODIFICATION**: Throw an exception for non-successful (non-2xx) status codes\n                    String errorDetails;\n                    // It's good practice to check if the error stream exists\n                    if (conn.getErrorStream() != null) {\n                        try (BufferedReader errorReader = new BufferedReader(\n                            new InputStreamReader(conn.getErrorStream(), StandardCharsets.UTF_8))) {\n                            errorDetails = errorReader.lines().collect(Collectors.joining(\"\\n\"));\n                        }\n                    } else {\n                        errorDetails = \"No additional error details were provided by the server.\";\n                    }\n                    throw new RuntimeException(\"API request failed with HTTP status code: \" + responseCode + \". Error: \" + errorDetails);\n                }\n            } catch (Exception e) {\n                // **MODIFICATION**: Re-throw exceptions to ensure failures are not hidden.\n                // If we created the exception for the bad status code, rethrow it directly.\n                if (e instanceof RuntimeException) {\n                    throw (RuntimeException) e;\n                }\n                // Wrap other exceptions (like IOException) in a new RuntimeException.\n                throw new RuntimeException(\"An exception occurred during the API request to get attribute '\" + attributeName + \"'.\", e);\n            } finally {\n                if (conn != null) {\n                    conn.disconnect();\n                }\n            }\n        }\n   Map<String, Object> resultMap = new HashMap<>();\n     try {\n\n        String filterVal = \"mail=\" + email;\n\n            // 1. Get the raw attribute values from the API\n            String lockoutTimeValue = getADAttribute(filterVal, \"lockoutTime\");\n            String userAccountControlValue = getADAttribute(filterVal, \"userAccountControl\");\n\n            // Corrected the print statement to be compatible with older Java versions.\n            System.out.printf(\"API Response -> lockoutTimeValue: %s, userAccountControlValue: %s%n\", lockoutTimeValue, userAccountControlValue);\n\n            // 2. Determine if the account is locked\n            String isAccountLocked = \"No\";\n            if (lockoutTimeValue != null && !lockoutTimeValue.isEmpty()) {\n                try {\n                    // Check if lockoutTimeValue is a number and is greater than 0\n                    if (Long.parseLong(lockoutTimeValue) > 0) {\n                        isAccountLocked = \"Yes\";\n                    }\n                } catch (NumberFormatException e) {\n                    // The value is not a valid long, so we treat it as not locked.\n                }\n            }\n\n            // 3. Determine if the account is disabled\n            String isAccountDisabled = \"No\";\n            if (\"514\".equals(userAccountControlValue)) {\n                isAccountDisabled = \"Yes\";\n            }\n\n            // 4. Return the status as a Map\n            Map<String, String> statusMap = new HashMap<>();\n            statusMap.put(\"isAccountLocked\", isAccountLocked);\n            statusMap.put(\"isAccountDisabled\", isAccountDisabled);\n\n         \n            resultMap.put(\"result\", statusMap);\n            \n         } catch (RuntimeException e) {\n              Map<String, Object> errorResponse = new HashMap<>();\n            // This 'catch' block executes if getADAttribute throws an exception\n            System.err.println(\"An error occurred while fetching AD attributes: \" + e.getMessage());\n            \n            // 5. Create the error response map\n            Map<String, String> errorMap = new HashMap<>();\n            errorMap.put(\"error\", \"Failed to retrieve account details from API.\");\n            // Including the exception message gives more context for debugging\n            errorMap.put(\"errorMessage\", e.getMessage());\n            \n            resultMap.put(\"result\", errorMap);\n        }\n            return resultMap;\n           \n    ",
				"parameters":{
					"bearerToken":"{{ n_8rFF6.outputs.headers.Authorization }}",
					"virtusaBusinessInternalSubkey":"{{ __ENV__.outputs.virtusaBusinessInternalSubkey }}",
					"ADServiceAccountSnowsecurityCredencials":"{{ __ENV__.outputs.ADServiceAccountSnowsecurityCredencials }}",
					"ADServiceAccountSnowSecuriyPrinciple":"{{ __ENV__.outputs.ADServiceAccountSnowSecuriyPrinciple }}",
					"ADSearchAPIPath":"{{ __ENV__.outputs.ADSearchAPIPath }}",
					"APIMServerUrl":"{{ __ENV__.outputs.APIMServerUrl }}",
					"email":"{{ n_8rFF6.outputs.queryParams.email }}"
				}
			},
			"skip":false,
			"subTitle":"Code",
			"title":"Execute Java code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_zzxCZ-1",
			"id":"n_d9tyG",
			"index":3,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"Branch 1",
							"conditions":{
								"filters":[
									{
										"property":"{{ n_9RbS9.outputs.result.result.errorMessage }}",
										"filter":{
											"operator":"EXISTS"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"Branch 2",
							"conditions":{
								"filters":[
									{
										"property":"{{ n_9RbS9.outputs.result.result.errorMessage }}",
										"filter":{
											"operator":"MISSING"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_d9tyG@_zzxCZ-1@1",
			"id":"n_d9tyG@1",
			"index":4,
			"inputs":{
				"name":"Branch 1",
				"conditions":{
					"filters":[
						{
							"property":"{{ n_9RbS9.outputs.result.result.errorMessage }}",
							"filter":{
								"operator":"EXISTS"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":818,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_d9tyG@_zzxCZ-1@1",
			"id":"n_sIcjO",
			"index":5,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"401_401",
				"body":{
					"errorResponse":"{{ n_9RbS9.outputs.result.result }}"
				},
				"status":401
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_d9tyG@_zzxCZ-1@2",
			"id":"n_d9tyG@2",
			"index":6,
			"inputs":{
				"name":"Branch 2",
				"conditions":{
					"filters":[
						{
							"property":"{{ n_9RbS9.outputs.result.result.errorMessage }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":818,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_d9tyG@_zzxCZ-1@2",
			"id":"n_ASOJd",
			"index":7,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_200",
				"body":{
					"result":"{{ n_9RbS9.outputs.result.result }}"
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":818,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_zzxCZ-1",
			"id":"n_aZLOt",
			"index":8,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_200",
				"body":{
					"result":"{{ n_9RbS9.outputs.result.result }}"
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":39713,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":33
}