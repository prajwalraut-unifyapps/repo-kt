{
	"appsUsed":[
		
	],
	"createdTime":1737456005569,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243663253,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed8f5e003e08cdeb3133",
		"status":"DEPLOYED",
		"version":68,
		"workflowVersion":129
	},
	"edges":[
		{
			"fromNodeId":"odyoT",
			"priority":0,
			"skip":false,
			"toNodeId":"UsvM6",
			"type":"next"
		},
		{
			"fromNodeId":"UsvM6",
			"priority":0,
			"skip":false,
			"toNodeId":"J0B5W",
			"type":"next"
		},
		{
			"fromNodeId":"J0B5W",
			"priority":0,
			"skip":false,
			"toNodeId":"itTlm",
			"type":"next"
		},
		{
			"fromNodeId":"itTlm",
			"priority":0,
			"skip":false,
			"toNodeId":"g774F",
			"type":"next"
		},
		{
			"fromNodeId":"g774F",
			"priority":0,
			"skip":false,
			"toNodeId":"eHuHh",
			"type":"loop"
		},
		{
			"fromNodeId":"eHuHh",
			"priority":0,
			"skip":false,
			"toNodeId":"3eogR",
			"type":"next"
		},
		{
			"fromNodeId":"3eogR",
			"priority":0,
			"skip":false,
			"toNodeId":"ppHHg",
			"type":"next"
		},
		{
			"fromNodeId":"ppHHg",
			"priority":0,
			"skip":false,
			"toNodeId":"wTbn2",
			"type":"next"
		},
		{
			"fromNodeId":"wTbn2",
			"priority":0,
			"skip":false,
			"toNodeId":"O8Yup",
			"type":"loop"
		},
		{
			"fromNodeId":"O8Yup",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"wTbn2",
			"type":"next"
		},
		{
			"fromNodeId":"wTbn2",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"g774F",
			"type":"next"
		},
		{
			"fromNodeId":"g774F",
			"priority":0,
			"skip":false,
			"toNodeId":"9YnYj",
			"type":"next"
		},
		{
			"fromNodeId":"9YnYj",
			"priority":0,
			"skip":false,
			"toNodeId":"qxbEI",
			"type":"loop"
		},
		{
			"fromNodeId":"qxbEI",
			"priority":0,
			"skip":false,
			"toNodeId":"P6xk1",
			"type":"next"
		},
		{
			"fromNodeId":"P6xk1",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"9YnYj",
			"type":"next"
		},
		{
			"fromNodeId":"9YnYj",
			"priority":0,
			"skip":false,
			"toNodeId":"ZoCs1",
			"type":"next"
		},
		{
			"fromNodeId":"ZoCs1",
			"priority":0,
			"skip":false,
			"toNodeId":"ZkKfp",
			"type":"next"
		},
		{
			"fromNodeId":"ZkKfp",
			"priority":0,
			"skip":false,
			"toNodeId":"zM9z1",
			"type":"next"
		},
		{
			"fromNodeId":"zM9z1",
			"priority":0,
			"skip":false,
			"toNodeId":"DOeoQ",
			"type":"next"
		},
		{
			"fromNodeId":"DOeoQ",
			"priority":0,
			"skip":false,
			"toNodeId":"QVKLx",
			"type":"next"
		},
		{
			"fromNodeId":"QVKLx",
			"priority":0,
			"skip":false,
			"toNodeId":"mAT5H",
			"type":"next"
		},
		{
			"fromNodeId":"mAT5H",
			"priority":0,
			"skip":false,
			"toNodeId":"nDRsQ",
			"type":"next"
		},
		{
			"fromNodeId":"nDRsQ",
			"priority":0,
			"skip":false,
			"toNodeId":"S5RXF",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"678f7985ea6abd513c727a08",
	"lastModifiedBy":-1,
	"lcName":"personalized page rank | graphrag",
	"modifiedTime":1759371980731,
	"name":"Personalized Page Rank | GraphRAG",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":195,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"odyoT",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"rankedNodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"rankedNodes"
						},
						"rankedRelationships":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"rankedRelationships"
						}
					},
					"additionalProperties":false,
					"required":[
						"rankedNodes",
						"rankedRelationships"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"seedNodes":{
							"type":"array",
							"items":{
								"type":"integer"
							},
							"title":"seedNodes"
						},
						"limitNodes":{
							"type":"integer",
							"title":"limitNodes",
							"default":"10"
						},
						"graphId":{
							"type":"string",
							"title":"graphId"
						},
						"simScores":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"simScores"
						},
						"nodeSpecificities":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"nodeSpecificities"
						}
					},
					"additionalProperties":false,
					"required":[
						"seedNodes",
						"simScores",
						"nodeSpecificities"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":158,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"UsvM6",
			"index":2,
			"inputs":{
				"code":"# TODO: Ranking of relationships based on some metric\n\n# TODO: Decide the scope of this automation. It could just return the top K relevant nodes, or it could also return nodes, relationships and chunks using Neo4j",
				"isAsync":false
			},
			"skip":true,
			"subTitle":"TODO",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":343,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"J0B5W",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"rankVectors"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"rankVectors",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Rank Vectors (for each seed node)",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"itTlm",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"nodes":{
											"type":"array",
											"items":{
												"type":"object"
											},
											"title":"nodes"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"unscaledDbOutput",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"unscaledDbOutput",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"nodes":{
										"type":"array",
										"items":{
											"type":"object"
										},
										"title":"nodes"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":315,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"g774F",
			"index":5,
			"inputs":{
				"repeatMode":"BATCH",
				"listSource":"{{ odyoT.outputs.seedNodes }}",
				"captureIterations":false,
				"batchSize":10
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"eHuHh",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"batchInputs":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Batch Inputs"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"return [:]"
			},
			"skip":true,
			"subTitle":"Prepare input batch",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":2,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"3eogR",
			"index":7,
			"inputs":{
				"automationId":"68402dafabecdd70cf50a5d2",
				"runtimeConnections":{},
				"synchronous":true,
				"parametersList":{
					"items":{
						"limitNodes":"{{ odyoT.outputs.limitNodes }}",
						"graphId":"{{ odyoT.outputs.graphId }}",
						"seedNodeId":"{{ g774F.outputs.item[0] }}"
					},
					"ua:type":"mappedArray",
					"source":"{{ g774F.outputs.item }}"
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"PPR from single seed",
			"title":"Call automation (batch)",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":246,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"ppHHg",
			"index":8,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"finalResults"
						}
					},
					"additionalProperties":false,
					"required":[
						"finalResults"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"index":{
							"type":"integer",
							"title":"index"
						},
						"dbOutput":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"dbOutput"
						},
						"nodeSpecificities":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"nodeSpecificities"
						},
						"simScores":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"simScores"
						}
					},
					"additionalProperties":false,
					"required":[
						"index",
						"dbOutput",
						"nodeSpecificities",
						"simScores"
					]
				},
				"code":"init_relevance = simScores[index]\nspecificity = nodeSpecificities[index]\nscaling_factor = init_relevance * specificity\n\nfor op in dbOutput:\n  op['score'] *= scaling_factor\n\nresult = {\n  'finalResults': dbOutput\n}",
				"isAsync":false
			},
			"skip":true,
			"subTitle":"Scale Results",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":2,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"wTbn2",
			"index":9,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ 3eogR.outputs.result }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.nodes.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"wTbn2@g774F@jmJNU-1@l@l",
			"id":"O8Yup",
			"index":10,
			"inputs":{
				"itemToAdd":{
					"nodes":{
						"source":"{{ wTbn2.outputs.item.dbOutput }}",
						"ua:type":"mappedArray",
						"items":"{{ wTbn2.outputs.item.dbOutput[0] }}"
					}
				},
				"insertLocation":"END",
				"listName":"{{ itTlm.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":2,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"9YnYj",
			"index":11,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ itTlm.outputs.items }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.dbOutput.items",
					"root.parameters.nodeSpecificities.items",
					"root.parameters.simScores.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":393,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9YnYj@jmJNU-1@l",
			"id":"qxbEI",
			"index":12,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Final Results"
						}
					},
					"additionalProperties":false,
					"required":[
						"finalResults"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"index":{
							"type":"integer",
							"title":"index"
						},
						"dbOutput":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"dbOutput"
						},
						"nodeSpecificities":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"nodeSpecificities"
						},
						"simScores":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"simScores"
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"def initRelevance = simScores[index]\ndef specificity = nodeSpecificities[index]\ndef scalingFactor = initRelevance * specificity\n\ndbOutput.each { op ->\n    op.score *= scalingFactor\n}\n\ndef result = [\n    finalResults: dbOutput\n]",
				"parameters":{
					"simScores":{
						"source":"{{ odyoT.outputs.simScores }}",
						"ua:type":"mappedArray",
						"items":"{{ odyoT.outputs.simScores[0] }}"
					},
					"nodeSpecificities":{
						"source":"{{ odyoT.outputs.nodeSpecificities }}",
						"ua:type":"mappedArray",
						"items":"{{ odyoT.outputs.nodeSpecificities[0] }}"
					},
					"dbOutput":{
						"source":"{{ 9YnYj.outputs.item.nodes }}",
						"ua:type":"mappedArray",
						"items":"{{ 9YnYj.outputs.item.nodes[0] }}"
					},
					"index":"{{ 9YnYj.outputs.index }}"
				}
			},
			"skip":false,
			"subTitle":"Scale Results",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9YnYj@jmJNU-1@l",
			"id":"P6xk1",
			"index":13,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ qxbEI.outputs.result.finalResults }}",
					"items":"{{ qxbEI.outputs.result.finalResults[0] }}"
				},
				"listName":"{{ J0B5W.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":246,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"ZoCs1",
			"index":14,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalRankedNodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"finalRankedNodes"
						}
					},
					"additionalProperties":false,
					"required":[
						"finalRankedNodes"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"individualNodeResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"individualNodeResults"
						},
						"limitNodes":{
							"type":"integer",
							"title":"limitNodes"
						}
					},
					"additionalProperties":false,
					"required":[
						"individualNodeResults",
						"limitNodes"
					]
				},
				"code":"node_results = {}\nfinal_result_list = []\n\nfor result in individualNodeResults:\n    node_id = result['nodeID']\n    node_score = result['score']\n    node_name = result['nodeName']\n    node_desc = result['nodeDesc']\n    node_chunks = result['chunkID']  # This is a list of source chunks\n\n    if node_id not in node_results:\n        node_results[node_id] = {'nodeName': node_name, 'nodeDesc': node_desc, 'chunkID': node_chunks, 'score': 0}\n\n    node_results[node_id]['score'] += node_score\n\nfor node_id, node_data in node_results.items():\n    final_result_list.append({\n        'nodeID': node_id,\n        'nodeName': node_data['nodeName'],\n        'nodeDesc': node_data['nodeDesc'],\n        'chunkID': node_data['chunkID'],\n        'score': node_data['score']\n    })\n\nfinal_result_list.sort(key=lambda x: x['score'], reverse=True)\nfinal_result_list = final_result_list[:limitNodes]\n\nresult = {\n    'finalRankedNodes': final_result_list\n}",
				"isAsync":false,
				"parameters":{
					"individualNodeResults":{
						"source":"{{ J0B5W.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ J0B5W.outputs.items[0] }}"
					},
					"limitNodes":"{{ odyoT.outputs.limitNodes }}"
				}
			},
			"skip":true,
			"subTitle":"Combine Results",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.individualNodeResults.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":393,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"ZkKfp",
			"index":15,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalRankedNodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Final Ranked Nodes"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"individualNodeResults":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"individualNodeResults"
						},
						"limitNodes":{
							"type":"integer",
							"title":"limitNodes"
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"def nodeResults = [:]\ndef finalResultList = []\n\nindividualNodeResults.each { result ->\n    def nodeId = result['nodeID']\n    def nodeScore = result['score']\n    def nodeName = result['nodeName']\n    def nodeDesc = result['nodeDesc']\n    def nodeChunks = result['chunkID']  // This is a list of source chunks\n\n    if (!nodeResults.containsKey(nodeId)) {\n        nodeResults[nodeId] = [nodeName: nodeName, nodeDesc: nodeDesc, chunkID: nodeChunks, score: 0]\n    }\n    nodeResults[nodeId].score += nodeScore\n}\n\nnodeResults.each { nodeId, nodeData ->\n    finalResultList << [\n        nodeID: nodeId,\n        nodeName: nodeData.nodeName,\n        nodeDesc: nodeData.nodeDesc,\n        chunkID: nodeData.chunkID,\n        score: nodeData.score\n    ]\n}\n\n// Sort by score in descending order\nfinalResultList.sort { -it.score }\n\n// Limit the number of nodes to limitNodes\nfinalResultList = finalResultList.take(limitNodes)\n\ndef result = [\n    finalRankedNodes: finalResultList\n]",
				"parameters":{
					"individualNodeResults":{
						"source":"{{ J0B5W.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ J0B5W.outputs.items[0] }}"
					},
					"limitNodes":"{{ odyoT.outputs.limitNodes }}"
				}
			},
			"skip":false,
			"subTitle":"Combine Results",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":158,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"zM9z1",
			"index":16,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"relationshipCypherQuery":{
							"type":"string",
							"title":"relationshipCypherQuery"
						},
						"nodeIDs":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"nodeIDs"
						}
					},
					"additionalProperties":false,
					"required":[
						"relationshipCypherQuery",
						"nodeIDs"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"nodeInfo":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"nodeInfo"
						}
					},
					"additionalProperties":false,
					"required":[
						"nodeInfo"
					]
				},
				"code":"def get_relationship_query(node_info):\n    node_ids = [node['nodeID'] for node in node_info]\n    node_ids_str = ', '.join(map(str, node_ids))\n     \n    cypher_query = (\n        \"MATCH (n)-[r]-(m) \"\n        \"WHERE id(n) IN [\" + node_ids_str + \"] AND r.description <> 'is'\"\n        \"RETURN n.name AS sourceNodeName, m.name AS targetNodeName, r.description AS  relDesc LIMIT 100\"\n    )\n    \n    return cypher_query, node_ids\n\ncypher_query, node_ids = get_relationship_query(nodeInfo)\n\nresult = {\n  'relationshipCypherQuery': cypher_query,\n  'nodeIDs': node_ids\n}",
				"isAsync":false,
				"parameters":{
					"nodeInfo":{
						"ua:type":"mappedArray",
						"items":"{{ ZoCs1.outputs.result.finalRankedNodes[0] }}",
						"source":"{{ ZoCs1.outputs.result.finalRankedNodes }}"
					}
				}
			},
			"skip":true,
			"subTitle":"Relationships Query",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.nodeInfo.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":393,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"DOeoQ",
			"index":17,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"relationshipCypherQuery":{
							"type":"string",
							"title":"relationshipCypherQuery"
						},
						"nodeIDs":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"nodeIDs"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"nodeInfo":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Node Info"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def getRelationshipQuery(nodeInfo) {\n    def nodeIds = nodeInfo.collect { it['nodeID'] }\n    def nodeIdsStr = nodeIds.collect { it.toString() }.join(', ')\n    \n    def cypherQuery = \n        \"MATCH (n)-[r]->(m) \" +\n        \"WHERE id(n) IN [${nodeIdsStr}]  AND  id(m) IN [${nodeIdsStr}]\" +\n        \"AND id(n) <> id(m) \" +\n        \"AND r.description <> 'is' \" +\n        \"AND r.description <> 'has_chunk' \" +\n        \"RETURN n.name AS sourceNodeName, m.name AS targetNodeName, r.description AS relDesc, r.sourceChunkID as sourceChunk, id(n) as sourceId, id(m) as targetId LIMIT 1000\"\n    \n    return [cypherQuery, nodeIds]\n}\n\ndef (cypherQuery, nodeIds) = getRelationshipQuery(nodeInfo)\n\ndef result = [\n    relationshipCypherQuery: cypherQuery,\n    nodeIDs: nodeIds\n]",
				"parameters":{
					"nodeInfo":{
						"source":"{{ ZkKfp.outputs.result.finalRankedNodes }}",
						"ua:type":"mappedArray",
						"items":"{{ ZkKfp.outputs.result.finalRankedNodes[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Relationships Query",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":278,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"QVKLx",
			"index":18,
			"inputs":{
				"automationId":"67a9e903bdf95a2dab1df8cb",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"cypherQuery":"{{ DOeoQ.outputs.result.relationshipCypherQuery }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":2.0,
					"captureRetries":false,
					"count":3,
					"enabled":true,
					"initialDelay":3000,
					"maxDelay":10000
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Neo4j: Rel",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":225,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"mAT5H",
			"index":19,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"relationshipsPruned":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"relationshipsPruned"
						}
					},
					"additionalProperties":false,
					"required":[
						"relationshipsPruned"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"relationships":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"relationships"
						}
					},
					"additionalProperties":false,
					"required":[
						"relationships"
					]
				},
				"code":"# TODO: Rank the relationships\n# TODO: Filter out \"is\" relationships\n\npruned_relationships = []\n\nfor relationship in relationships:\n  if relationship['relDesc'] == 'is':\n    continue\n  else:\n    pruned_relationships.append(relationship)\n\npruned_relationships = pruned_relationships[:100]\n\nresult = {\n  'relationshipsPruned': pruned_relationships\n}",
				"isAsync":false,
				"parameters":{
					"relationships":{
						"source":"{{ QVKLx.outputs.blocks }}",
						"ua:type":"mappedArray",
						"items":"{{ QVKLx.outputs.blocks[0] }}"
					}
				}
			},
			"skip":true,
			"subTitle":"relationshipsPruned",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.relationships.items",
					"root.parameters.nodeInfo.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":393,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"nDRsQ",
			"index":20,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"relationshipsPruned":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Relationships Pruned"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"relationships":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Relationships"
						},
						"nodeInfo":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Node Info"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def getRankedRelationshipsSimple(relationships, nodeInfo, maxResults = 100) {\n    def nodeScoreMap = [:]\n    nodeInfo.each { node ->\n        if (node.nodeID && node.score != null) {\n            nodeScoreMap[node.nodeID] = node.score\n        }\n    }\n    \n    return relationships.collect { rel ->\n        def sourceScore = nodeScoreMap[rel.sourceId] ?: 0.0\n        def targetScore = nodeScoreMap[rel.targetId] ?: 0.0\n        def combinedScore = (sourceScore + targetScore) / 2.0\n        \n        [\n            source: rel.sourceNodeName,\n            target: rel.targetNodeName,\n            description: rel.relDesc,\n            sourceChunk: rel.sourceChunk,\n            score: combinedScore\n        ]\n    }.sort { -it.score }.take(maxResults)\n}\n\nrelationshipsPruned = getRankedRelationshipsSimple(relationships, nodeInfo)\nresult = [\n    relationshipsPruned: relationshipsPruned\n]",
				"parameters":{
					"relationships":{
						"source":"{{ QVKLx.outputs.blocks }}",
						"ua:type":"mappedArray",
						"items":"{{ QVKLx.outputs.blocks[0] }}"
					},
					"nodeInfo":{
						"source":"{{ ZkKfp.outputs.result.finalRankedNodes }}",
						"ua:type":"mappedArray",
						"items":"{{ ZkKfp.outputs.result.finalRankedNodes[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"relationshipsPruned",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":183,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jmJNU-1",
			"id":"S5RXF",
			"index":21,
			"inputs":{
				"result":{
					"rankedNodes":{
						"ua:type":"mappedArray",
						"source":"{{ ZkKfp.outputs.result.finalRankedNodes }}",
						"items":"{{ ZkKfp.outputs.result.finalRankedNodes[0] }}"
					},
					"rankedRelationships":{
						"source":"{{ nDRsQ.outputs.result.relationshipsPruned }}",
						"ua:type":"mappedArray",
						"items":"{{ nDRsQ.outputs.result.relationshipsPruned[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":2620,
	"projectId":135,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"GraphRAG"
	],
	"version":130
}