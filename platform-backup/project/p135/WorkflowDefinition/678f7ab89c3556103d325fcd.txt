{
	"appsUsed":[
		
	],
	"createdTime":1737456312326,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243565166,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed2d23e6682b9a51eb94",
		"status":"DEPLOYED",
		"version":63,
		"workflowVersion":92
	},
	"edges":[
		{
			"fromNodeId":"hJGct",
			"priority":0,
			"skip":false,
			"toNodeId":"l47w6",
			"type":"next"
		},
		{
			"fromNodeId":"l47w6",
			"priority":0,
			"skip":false,
			"toNodeId":"3duWZ",
			"type":"next"
		},
		{
			"fromNodeId":"3duWZ",
			"priority":0,
			"skip":false,
			"toNodeId":"lPA6g",
			"type":"next"
		},
		{
			"fromNodeId":"lPA6g",
			"priority":0,
			"skip":false,
			"toNodeId":"twamC",
			"type":"next"
		},
		{
			"fromNodeId":"twamC",
			"priority":0,
			"skip":false,
			"toNodeId":"JQHim",
			"type":"next"
		},
		{
			"fromNodeId":"JQHim",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"6C9PI",
			"type":"if"
		},
		{
			"fromNodeId":"6C9PI",
			"priority":0,
			"skip":false,
			"toNodeId":"XKKMX",
			"type":"next"
		},
		{
			"fromNodeId":"JQHim",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"XKKMX",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"678f7ab89c3556103d325fcd",
	"lastModifiedBy":-1,
	"lcName":"entity resolution | graphrag",
	"modifiedTime":1759371886777,
	"name":"Entity Resolution | GraphRAG",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":195,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rqfKk-1",
			"id":"hJGct",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"status":{
							"type":"string",
							"title":"status"
						}
					},
					"additionalProperties":false,
					"required":[
						"status"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"graphId":{
							"type":"string",
							"title":"graphId"
						},
						"simThreshold":{
							"type":"number",
							"title":"simThreshold",
							"default":"0.975"
						}
					},
					"additionalProperties":false,
					"required":[
						"graphId"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":221,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rqfKk-1",
			"id":"l47w6",
			"index":0,
			"inputs":{
				"code":"# TODO (RND): Can optimize this process later by maybe doing this 1 query (Done using subquery transactions with concurrency - 06/02/25)\n\n# TODO (RND): Think of more accurate entity resolution strategies. Tuning threshold is one thing that needs to be done\n\n# TODO (HPLE): Try to use rules based on exact name + type match at least, maybe some clever regex in the mix ==> Try using GPT",
				"isAsync":false
			},
			"skip":false,
			"subTitle":"TODO",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":221,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rqfKk-1",
			"id":"3duWZ",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"dedupQuery":{
							"type":"string",
							"title":"dedupQuery"
						}
					},
					"additionalProperties":false,
					"required":[
						"dedupQuery"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"graphID":{
							"type":"string",
							"title":"graphID"
						},
						"threshold":{
							"type":"number",
							"title":"threshold"
						}
					},
					"additionalProperties":false,
					"required":[
						"graphID",
						"threshold"
					]
				},
				"code":"def generate_entity_resolution_query(graph_id: str, threshold: float, topK: int = 200) -> str:\n\n    query =(\n        f\"MATCH (n:{graph_id}_NODE) \"\n        \"CALL { \"\n        \"WITH n \"\n        f\"CALL db.index.vector.queryNodes('vindex_{graph_id}', 200, n.embedding) \"\n        \"YIELD node AS neighbor, score \"\n        f\"WHERE neighbor <> n AND score >= {threshold} \"\n        f\"MERGE (n)-[r:{graph_id}_REL \" \n        \"{description:'is'}]->(neighbor) \"\n        \"RETURN count(r) AS mergesInBatch \"\n        \"} \"\n        # \"IN 10 CONCURRENT TRANSACTIONS \" This doesn't work sometimes due to issues with exclusive lock\n        \"IN TRANSACTIONS \"\n        \"RETURN sum(mergesInBatch) AS totalMerges \"\n    )\n\n    return query\n\n\ncypher_query = generate_entity_resolution_query(graph_id=graphID, threshold=threshold)\nresult = {\n    'dedupQuery': cypher_query\n}",
				"isAsync":false,
				"parameters":{
					"graphID":"{{ hJGct.outputs.graphId }}",
					"threshold":"{{ hJGct.outputs.simThreshold }}"
				}
			},
			"skip":false,
			"subTitle":"Cypher Query",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root.responseSchema":{},
					"root.bodySchema":{}
				}
			},
			"context":{
				"appName":"custom_http_endpoint",
				"resourceVersion":0,
				"resourceName":"custom_http_endpoint_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"rqfKk-1",
			"id":"lPA6g",
			"index":0,
			"inputs":{
				"isAsync":false,
				"requestTimeoutInSecs":-1,
				"httpMethod":"POST",
				"body":{
					"payloads":{
						"items":{
							"payloadId":"123",
							"url":"neo4j+s://a7d3b7d6.databases.neo4j.io",
							"password":"F5J1aqgbVUjASgQFDV-fOmw06h-00qJ3LbCyb5NJnek",
							"username":"neo4j",
							"cypherQuery":"{{ 3duWZ.outputs.result.dedupQuery }}"
						},
						"ua:type":"mappedArray"
					}
				},
				"sslVerify":true,
				"path":"/api/v1/neo4j/query",
				"responseSchema":{
					"type":"object",
					"properties":{
						"status":{
							"type":"string",
							"title":"status"
						},
						"results":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"payloadId":{
										"type":"string",
										"title":"payloadId"
									},
									"data":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"required":[]
										},
										"title":"data"
									}
								},
								"additionalProperties":false
							},
							"title":"results"
						}
					},
					"additionalProperties":false
				},
				"baseUrl":"https://ai-neo4j-handler-global.int-alb.qa.unifyapps.com",
				"bodySchema":{
					"type":"object",
					"properties":{
						"payloads":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"payloadId":{
										"type":"string",
										"title":"payloadId",
										"default":"1234"
									},
									"cypherQuery":{
										"type":"string",
										"title":"cypherQuery"
									},
									"username":{
										"type":"string",
										"title":"username"
									},
									"password":{
										"type":"string",
										"title":"password"
									},
									"url":{
										"type":"string",
										"title":"url"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"payloads"
						}
					},
					"additionalProperties":false
				},
				"responseContentType":"application/json",
				"authType":"CUSTOM",
				"requestContentType":"application/json",
				"ignoreTrailingSlashes":false
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":2.0,
					"captureRetries":false,
					"count":3,
					"enabled":true,
					"initialDelay":3000,
					"maxDelay":10000
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Neo4j: De-Dup",
			"title":"Execute REST request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":223,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rqfKk-1",
			"id":"twamC",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"errorFlag":{
							"type":"string",
							"title":"errorFlag"
						}
					},
					"additionalProperties":false,
					"required":[
						"errorFlag"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"output":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"output"
						}
					},
					"additionalProperties":false,
					"required":[
						"output"
					]
				},
				"code":"error_flag = \"1\"\nif isinstance(output, dict):\n  error_flag = \"0\"\nresult = {\n  'errorFlag': error_flag\n}",
				"isAsync":false,
				"parameters":{
					"output":"{{ lPA6g.outputs.result.results[0].data[0] }}"
				}
			},
			"skip":false,
			"subTitle":"Extract output",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":242,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rqfKk-1",
			"id":"JQHim",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ twamC.outputs.result.errorFlag }}",
						"filter":{
							"operator":"EQUAL",
							"value":"1"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root.responseSchema":{},
					"root.bodySchema":{}
				}
			},
			"context":{
				"appName":"custom_http_endpoint",
				"resourceVersion":0,
				"resourceName":"custom_http_endpoint_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"JQHim@rqfKk-1@y",
			"id":"6C9PI",
			"index":0,
			"inputs":{
				"isAsync":false,
				"requestTimeoutInSecs":-1,
				"httpMethod":"POST",
				"body":{
					"payloads":{
						"items":{
							"payloadId":"123",
							"url":"neo4j+s://a7d3b7d6.databases.neo4j.io",
							"password":"F5J1aqgbVUjASgQFDV-fOmw06h-00qJ3LbCyb5NJnek",
							"username":"neo4j",
							"cypherQuery":"{{ 3duWZ.outputs.result.dedupQuery }}"
						},
						"ua:type":"mappedArray"
					}
				},
				"sslVerify":true,
				"path":"/api/v1/neo4j/query",
				"responseSchema":{
					"type":"object",
					"properties":{
						"status":{
							"type":"string",
							"title":"status"
						},
						"results":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"payloadId":{
										"type":"string",
										"title":"payloadId"
									},
									"data":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"required":[]
										},
										"title":"data"
									}
								},
								"additionalProperties":false
							},
							"title":"results"
						}
					},
					"additionalProperties":false
				},
				"baseUrl":"https://ai-neo4j-handler-global.int-alb.qa.unifyapps.com",
				"bodySchema":{
					"type":"object",
					"properties":{
						"payloads":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"payloadId":{
										"type":"string",
										"title":"payloadId",
										"default":"1234"
									},
									"cypherQuery":{
										"type":"string",
										"title":"cypherQuery"
									},
									"username":{
										"type":"string",
										"title":"username"
									},
									"password":{
										"type":"string",
										"title":"password"
									},
									"url":{
										"type":"string",
										"title":"url"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"payloads"
						}
					},
					"additionalProperties":false
				},
				"responseContentType":"application/json",
				"authType":"CUSTOM",
				"requestContentType":"application/json",
				"ignoreTrailingSlashes":false
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":2.0,
					"captureRetries":false,
					"count":3,
					"enabled":true,
					"initialDelay":3000,
					"maxDelay":10000
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Neo4j: De-Dup",
			"title":"Execute REST request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":183,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rqfKk-1",
			"id":"XKKMX",
			"index":0,
			"inputs":{
				"result":{
					"status":"ok"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":2620,
	"projectId":135,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":93
}