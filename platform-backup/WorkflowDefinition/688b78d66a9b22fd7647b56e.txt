{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1756473896489,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243537670,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed115e003e08cdeb2e8d",
		"status":"DEPLOYED",
		"version":17,
		"workflowVersion":57
	},
	"edges":[
		{
			"fromNodeId":"n_zGvga",
			"priority":0,
			"skip":false,
			"toNodeId":"n_j64yz",
			"type":"next"
		},
		{
			"fromNodeId":"n_j64yz",
			"priority":0,
			"skip":false,
			"toNodeId":"_oO1lO",
			"type":"next"
		},
		{
			"fromNodeId":"_oO1lO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_4tlhQ",
			"type":"next"
		},
		{
			"fromNodeId":"n_4tlhQ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_a4To7",
			"type":"if"
		},
		{
			"fromNodeId":"n_a4To7",
			"priority":0,
			"skip":false,
			"toNodeId":"_EGzw4",
			"type":"next"
		},
		{
			"fromNodeId":"n_4tlhQ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_EGzw4",
			"type":"next"
		},
		{
			"fromNodeId":"_EGzw4",
			"priority":0,
			"skip":false,
			"toNodeId":"_6Ucfv",
			"type":"next"
		},
		{
			"fromNodeId":"_6Ucfv",
			"priority":0,
			"skip":false,
			"toNodeId":"_Q4wrI",
			"type":"next"
		},
		{
			"fromNodeId":"_Q4wrI",
			"priority":0,
			"skip":false,
			"toNodeId":"_z7Adt",
			"type":"next"
		},
		{
			"fromNodeId":"_z7Adt",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Q06xa",
			"type":"next"
		},
		{
			"fromNodeId":"n_Q06xa",
			"priority":0,
			"skip":false,
			"toNodeId":"n_yIvy6",
			"type":"next"
		},
		{
			"fromNodeId":"n_yIvy6",
			"priority":0,
			"skip":false,
			"toNodeId":"n_QNN4L",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"688b78d66a9b22fd7647b56e",
	"lastModifiedBy":-1,
	"lcName":"extract triples and filter from vector store | graphrag",
	"modifiedTime":1759243571902,
	"name":"Extract Triples and Filter From Vector Store | GraphRAG",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":101,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"n_zGvga",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"triples":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"relationshipID":{
										"type":"string",
										"title":"relationshipID"
									},
									"score":{
										"type":"number",
										"title":"Score"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Triples"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						},
						"GraphID":{
							"type":"string",
							"title":"Graph ID"
						},
						"numMaxRelationships":{
							"type":"integer",
							"title":"numMaxRelationships",
							"default":"10"
						}
					},
					"additionalProperties":false,
					"required":[
						"GraphID"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":105,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"n_j64yz",
			"index":2,
			"inputs":{
				"automationId":"6784b9216fb83f0972c5625d",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"modelId":"e_ai_agent_openai_emebedding_3_large",
					"userQuery":"{{ n_zGvga.outputs.query }}"
				}
			},
			"skip":false,
			"subTitle":"Fetch Embeddings",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"storage_by_unifyapps_semantic_query_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"_oO1lO",
			"index":3,
			"inputs":{
				"hybridSearch":false,
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_GraphID",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_zGvga.outputs.GraphID }}"
							}
						}
					],
					"operator":"AND"
				},
				"searchField":{
					"op":"KNN",
					"values":"{{ n_j64yz.outputs.embeddings }}",
					"field":"properties.embeddings"
				},
				"object_type":"graph_rag_relationship_vector_store1",
				"numberOfRecordsToFetch":"{{ n_zGvga.outputs.numMaxRelationships }}"
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Semantic search records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"n_4tlhQ",
			"index":4,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ _oO1lO.outputs.objects }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_4tlhQ@_Nv1V3-1@y",
			"id":"n_a4To7",
			"index":5,
			"inputs":{
				"result":{
					"triples":{
						"source":"{{ _oO1lO.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":{
							"embeddings":{
								"source":"{{ _oO1lO.outputs.objects[0].document.properties.embeddings }}",
								"ua:type":"mappedArray",
								"items":"{{ _oO1lO.outputs.objects[0].document.properties.embeddings[0] }}"
							},
							"id":"{{ _oO1lO.outputs.objects[0].document.properties.Id }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.relationships.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"_EGzw4",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"triplesList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Triples List"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"relationships":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Relationships"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"// Accepts either a Map with .objects or a raw List of relationship items\ndef formatRelationships(def input) {\n    def items = (input instanceof Map) ? (input.objects ?: []) : (input as List)\n\n    return items.collect { obj ->\n        def doc   = obj?.document ?: [:]\n        def props = doc?.properties ?: obj?.properties ?: [:]\n\n        [\n            toNodeID       : (props.toNodeID ?: props.toNodeId ?: props.toNode)?.toString(),\n            fromNodeID     : (props.fromNodeID ?: props.fromNodeId ?: props.fromNode ?: props.FromNodeID)?.toString(),\n            description    : (props.description ?: '').toString(),\n            relationshipID : (doc.id ?: obj.id)?.toString()\n        ]\n    }\n}\n\n// relationships is a List (per your note)\nreturn [triplesList: formatRelationships(relationships)]",
				"parameters":{
					"relationships":{
						"source":"{{ _oO1lO.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ _oO1lO.outputs.objects[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Format Triples",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.input_schema.unfilteredTriples.items"
				]
			},
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"_6Ucfv",
			"index":7,
			"inputs":{
				"input_schema":{
					"query":"{{ n_zGvga.outputs.query }}",
					"unfilteredTriples":{
						"source":"{{ _EGzw4.outputs.result.triplesList }}",
						"ua:type":"mappedArray",
						"items":"{{ _EGzw4.outputs.result.triplesList[0] }}"
					}
				},
				"template_id":"e_688b66894400a725e468ae48"
			},
			"skip":false,
			"subTitle":"Template by UnifyApps",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":105,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"_Q4wrI",
			"index":8,
			"inputs":{
				"automationId":"66dfd76eb70dad256986b784",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"type":"text",
					"response_format":"json_object",
					"modelId":"e_ai_agent_openai_gpt_4.1_mini",
					"content":"{{ _6Ucfv.outputs.output }}"
				}
			},
			"skip":false,
			"subTitle":"LLM Filter",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"_z7Adt",
			"index":9,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"reasoning":{
							"type":"string",
							"title":"reasoning"
						},
						"relationshipIds":{
							"type":"array",
							"items":{
								"type":"integer"
							},
							"title":"relationshipIds"
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{{ _Q4wrI.outputs.llmResponse }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.relationships.items",
					"root.parameters.relationshipIds.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"n_Q06xa",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"realIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"realIds"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"relationships":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"relationships"
						},
						"relationshipIds":{
							"type":"array",
							"items":{
								"type":"integer"
							},
							"title":"relationshipIds"
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"if (!binding.hasVariable('relationships') || !binding.hasVariable('relationshipIds')) {\n    return []\n}\n\ndef relationships = binding.getVariable('relationships')\ndef relationshipIds = binding.getVariable('relationshipIds')\n\nif (!relationships || !relationshipIds || !(relationships instanceof List) || !(relationshipIds instanceof List)) {\n    return []\n}\n\ndef realIds = []\n\nrelationshipIds.each { index ->\n    try {\n        def idx = (index instanceof String) ? Integer.parseInt(index) : index\n        if (idx >= 1 && idx <= relationships.size()) {\n            def relationship = relationships[idx - 1]\n            def relationshipID = relationship?.relationshipID ?: relationship?.getAt('relationshipID')\n            if (relationshipID) {\n                realIds.add(relationshipID)\n            }\n        }\n    } catch (Exception e) {\n        // Skip invalid entries\n    }\n}\n\nreturn [\n    realIds: realIds\n]",
				"parameters":{
					"relationships":{
						"source":"{{ _EGzw4.outputs.result.triplesList }}",
						"ua:type":"mappedArray",
						"items":"{{ _EGzw4.outputs.result.triplesList[0] }}"
					},
					"relationshipIds":{
						"source":"{{ _z7Adt.outputs.result.relationshipIds }}",
						"ua:type":"mappedArray",
						"items":"{{ _z7Adt.outputs.result.relationshipIds[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Map to real Rel ID",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.realIds.items",
					"root.parameters.objects.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"n_yIvy6",
			"index":11,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"triples":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"Id"
									},
									"score":{
										"type":"string",
										"title":"Score"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Triples"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"realIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Real Ids"
						},
						"objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Objects"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def result = objects.findAll { obj ->\n    realIds.contains(obj.document.id)\n}.collect { obj ->\n    [\n        id: obj.document.id,\n        score: obj.score\n    ]\n}\n\nreturn [triples : result]",
				"parameters":{
					"realIds":{
						"source":"{{ n_Q06xa.outputs.result.realIds }}",
						"ua:type":"mappedArray",
						"items":"{{ n_Q06xa.outputs.result.realIds[0] }}"
					},
					"objects":{
						"source":"{{ _oO1lO.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ _oO1lO.outputs.objects[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":102,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Nv1V3-1",
			"id":"n_QNN4L",
			"index":12,
			"inputs":{
				"result":{
					"triples":{
						"source":"{{ n_yIvy6.outputs.result.triples }}",
						"ua:type":"mappedArray",
						"items":{
							"relationshipID":"{{ n_yIvy6.outputs.result.triples[0].id }}",
							"score":"{{ n_yIvy6.outputs.result.triples[0].score }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":-1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":58
}