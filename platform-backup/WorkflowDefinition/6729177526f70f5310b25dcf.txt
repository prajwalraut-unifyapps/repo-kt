{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1730746229875,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243646753,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed7e9213d707c2d2754c",
		"status":"DEPLOYED",
		"version":112,
		"workflowVersion":169
	},
	"edges":[
		{
			"fromNodeId":"_GK8TT",
			"priority":0,
			"skip":false,
			"toNodeId":"_iEQ3V",
			"type":"next"
		},
		{
			"fromNodeId":"_iEQ3V",
			"priority":0,
			"skip":false,
			"toNodeId":"_WZkyD",
			"type":"next"
		},
		{
			"fromNodeId":"_WZkyD",
			"priority":0,
			"skip":false,
			"toNodeId":"n_N2l1X",
			"type":"next"
		},
		{
			"fromNodeId":"n_N2l1X",
			"priority":0,
			"skip":false,
			"toNodeId":"_1YPMl",
			"type":"next"
		},
		{
			"fromNodeId":"_1YPMl",
			"priority":0,
			"skip":false,
			"toNodeId":"_SpQjZ",
			"type":"next"
		},
		{
			"fromNodeId":"_SpQjZ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_gmPzv",
			"type":"if"
		},
		{
			"fromNodeId":"_SpQjZ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_Yjkyo",
			"type":"next"
		},
		{
			"fromNodeId":"_Yjkyo",
			"priority":0,
			"skip":false,
			"toNodeId":"_l44At",
			"type":"next"
		},
		{
			"fromNodeId":"_l44At",
			"priority":0,
			"skip":false,
			"toNodeId":"_JMhih",
			"type":"next"
		},
		{
			"fromNodeId":"_gmPzv",
			"priority":0,
			"skip":false,
			"toNodeId":"FkiBn",
			"type":"next"
		},
		{
			"fromNodeId":"_JMhih",
			"priority":0,
			"skip":false,
			"toNodeId":"FkiBn",
			"type":"next"
		},
		{
			"fromNodeId":"FkiBn",
			"priority":0,
			"skip":false,
			"toNodeId":"rYTim",
			"type":"next"
		},
		{
			"fromNodeId":"rYTim",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"0nm31",
			"type":"next"
		},
		{
			"fromNodeId":"rYTim",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_4935D",
			"type":"if"
		},
		{
			"fromNodeId":"0nm31",
			"priority":0,
			"skip":false,
			"toNodeId":"_4935D",
			"type":"next"
		},
		{
			"fromNodeId":"_4935D",
			"priority":0,
			"skip":false,
			"toNodeId":"RWnC9",
			"type":"next"
		},
		{
			"fromNodeId":"RWnC9",
			"priority":0,
			"skip":false,
			"toNodeId":"whN5E",
			"type":"next"
		},
		{
			"fromNodeId":"whN5E",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_QwUd3",
			"type":"if"
		},
		{
			"fromNodeId":"n_QwUd3",
			"priority":0,
			"skip":false,
			"toNodeId":"2lXzN",
			"type":"next"
		},
		{
			"fromNodeId":"2lXzN",
			"priority":0,
			"skip":false,
			"toNodeId":"twUCz",
			"type":"next"
		},
		{
			"fromNodeId":"twUCz",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"HMxsE",
			"type":"next"
		},
		{
			"fromNodeId":"twUCz",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"90Uhf",
			"type":"if"
		},
		{
			"fromNodeId":"HMxsE",
			"priority":0,
			"skip":false,
			"toNodeId":"90Uhf",
			"type":"next"
		},
		{
			"fromNodeId":"90Uhf",
			"priority":0,
			"skip":false,
			"toNodeId":"6flq0",
			"type":"next"
		},
		{
			"fromNodeId":"6flq0",
			"priority":0,
			"skip":false,
			"toNodeId":"hykN1",
			"type":"loop"
		},
		{
			"fromNodeId":"hykN1",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"P2g17",
			"type":"if"
		},
		{
			"fromNodeId":"P2g17",
			"priority":0,
			"skip":false,
			"toNodeId":"qsKbn",
			"type":"next"
		},
		{
			"fromNodeId":"qsKbn",
			"priority":0,
			"skip":false,
			"toNodeId":"_xSxIK",
			"type":"next"
		},
		{
			"fromNodeId":"_xSxIK",
			"priority":0,
			"skip":false,
			"toNodeId":"_o75Tn",
			"type":"next"
		},
		{
			"fromNodeId":"_o75Tn",
			"priority":0,
			"skip":false,
			"toNodeId":"8ObaF",
			"type":"next"
		},
		{
			"fromNodeId":"8ObaF",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"up1xJ",
			"type":"next"
		},
		{
			"fromNodeId":"up1xJ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_y2bfP",
			"type":"if"
		},
		{
			"fromNodeId":"_y2bfP",
			"priority":0,
			"skip":false,
			"toNodeId":"_owPbZ",
			"type":"loop"
		},
		{
			"fromNodeId":"_owPbZ",
			"priority":0,
			"skip":false,
			"toNodeId":"_pfPBE",
			"type":"next"
		},
		{
			"fromNodeId":"_pfPBE",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_y2bfP",
			"type":"next"
		},
		{
			"fromNodeId":"up1xJ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"ng67T",
			"type":"next"
		},
		{
			"fromNodeId":"ng67T",
			"priority":0,
			"skip":false,
			"toNodeId":"5kCeU",
			"type":"next"
		},
		{
			"fromNodeId":"8ObaF",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"L3a9m",
			"type":"if"
		},
		{
			"fromNodeId":"_y2bfP",
			"priority":0,
			"skip":false,
			"toNodeId":"L3a9m",
			"type":"next"
		},
		{
			"fromNodeId":"5kCeU",
			"priority":0,
			"skip":false,
			"toNodeId":"L3a9m",
			"type":"next"
		},
		{
			"fromNodeId":"L3a9m",
			"priority":0,
			"skip":false,
			"toNodeId":"W4WYX",
			"type":"next"
		},
		{
			"fromNodeId":"W4WYX",
			"priority":0,
			"skip":false,
			"toNodeId":"lK1Sw",
			"type":"next"
		},
		{
			"fromNodeId":"lK1Sw",
			"priority":0,
			"skip":false,
			"toNodeId":"Fh2wZ",
			"type":"next"
		},
		{
			"fromNodeId":"Fh2wZ",
			"priority":0,
			"skip":false,
			"toNodeId":"Z8lmQ",
			"type":"next"
		},
		{
			"fromNodeId":"hykN1",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Z8lmQ",
			"type":"next"
		},
		{
			"fromNodeId":"Z8lmQ",
			"priority":0,
			"skip":false,
			"toNodeId":"uCs1H",
			"type":"next"
		},
		{
			"fromNodeId":"uCs1H",
			"priority":0,
			"skip":false,
			"toNodeId":"n_afhpI",
			"type":"next"
		},
		{
			"fromNodeId":"n_afhpI",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"6flq0",
			"type":"next"
		},
		{
			"fromNodeId":"6flq0",
			"priority":0,
			"skip":false,
			"toNodeId":"_5rQFc",
			"type":"next"
		},
		{
			"fromNodeId":"_5rQFc",
			"priority":0,
			"skip":false,
			"toNodeId":"_IzmND",
			"type":"next"
		},
		{
			"fromNodeId":"_IzmND",
			"priority":0,
			"skip":false,
			"toNodeId":"_PTund",
			"type":"loop"
		},
		{
			"fromNodeId":"_PTund",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_IzmND",
			"type":"next"
		},
		{
			"fromNodeId":"whN5E",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"b1HA6",
			"type":"next"
		},
		{
			"fromNodeId":"b1HA6",
			"priority":0,
			"skip":false,
			"toNodeId":"b4O7O",
			"type":"next"
		},
		{
			"fromNodeId":"b4O7O",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"EpmrL",
			"type":"if"
		},
		{
			"fromNodeId":"EpmrL",
			"priority":0,
			"skip":false,
			"toNodeId":"JvugK",
			"type":"next"
		},
		{
			"fromNodeId":"b4O7O",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"JvugK",
			"type":"next"
		},
		{
			"fromNodeId":"JvugK",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"JvugK@1",
			"type":"branch"
		},
		{
			"fromNodeId":"JvugK@1",
			"priority":0,
			"skip":false,
			"toNodeId":"sAi0U",
			"type":"next"
		},
		{
			"fromNodeId":"sAi0U",
			"priority":0,
			"skip":false,
			"toNodeId":"7abtV",
			"type":"loop"
		},
		{
			"fromNodeId":"7abtV",
			"priority":0,
			"skip":false,
			"toNodeId":"GuhnN",
			"type":"next"
		},
		{
			"fromNodeId":"GuhnN",
			"priority":0,
			"skip":false,
			"toNodeId":"FRDHE",
			"type":"next"
		},
		{
			"fromNodeId":"FRDHE",
			"priority":0,
			"skip":false,
			"toNodeId":"RsHcU",
			"type":"next"
		},
		{
			"fromNodeId":"RsHcU",
			"priority":0,
			"skip":false,
			"toNodeId":"6StEu",
			"type":"next"
		},
		{
			"fromNodeId":"6StEu",
			"priority":0,
			"skip":false,
			"toNodeId":"LPHQe",
			"type":"next"
		},
		{
			"fromNodeId":"LPHQe",
			"priority":0,
			"skip":false,
			"toNodeId":"FN7wb",
			"type":"loop"
		},
		{
			"fromNodeId":"FN7wb",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"3BtDG",
			"type":"if"
		},
		{
			"fromNodeId":"3BtDG",
			"priority":0,
			"skip":false,
			"toNodeId":"FgqRr",
			"type":"next"
		},
		{
			"fromNodeId":"FgqRr",
			"priority":0,
			"skip":false,
			"toNodeId":"_pj04O",
			"type":"next"
		},
		{
			"fromNodeId":"_pj04O",
			"priority":0,
			"skip":false,
			"toNodeId":"_NPtyo",
			"type":"next"
		},
		{
			"fromNodeId":"_NPtyo",
			"priority":0,
			"skip":false,
			"toNodeId":"C3nwK",
			"type":"next"
		},
		{
			"fromNodeId":"C3nwK",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"rY3Yp",
			"type":"next"
		},
		{
			"fromNodeId":"rY3Yp",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_PIdMA",
			"type":"if"
		},
		{
			"fromNodeId":"_PIdMA",
			"priority":0,
			"skip":false,
			"toNodeId":"_DUa0J",
			"type":"loop"
		},
		{
			"fromNodeId":"_DUa0J",
			"priority":0,
			"skip":false,
			"toNodeId":"_wnlWi",
			"type":"next"
		},
		{
			"fromNodeId":"_wnlWi",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_PIdMA",
			"type":"next"
		},
		{
			"fromNodeId":"rY3Yp",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"sKB0q",
			"type":"next"
		},
		{
			"fromNodeId":"sKB0q",
			"priority":0,
			"skip":false,
			"toNodeId":"VFYYb",
			"type":"next"
		},
		{
			"fromNodeId":"C3nwK",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"kpAod",
			"type":"if"
		},
		{
			"fromNodeId":"_PIdMA",
			"priority":0,
			"skip":false,
			"toNodeId":"kpAod",
			"type":"next"
		},
		{
			"fromNodeId":"VFYYb",
			"priority":0,
			"skip":false,
			"toNodeId":"kpAod",
			"type":"next"
		},
		{
			"fromNodeId":"kpAod",
			"priority":0,
			"skip":false,
			"toNodeId":"EBVI8",
			"type":"next"
		},
		{
			"fromNodeId":"EBVI8",
			"priority":0,
			"skip":false,
			"toNodeId":"XMRT9",
			"type":"next"
		},
		{
			"fromNodeId":"XMRT9",
			"priority":0,
			"skip":false,
			"toNodeId":"xS2ce",
			"type":"next"
		},
		{
			"fromNodeId":"xS2ce",
			"priority":0,
			"skip":false,
			"toNodeId":"LyLBS",
			"type":"next"
		},
		{
			"fromNodeId":"FN7wb",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"LyLBS",
			"type":"next"
		},
		{
			"fromNodeId":"LyLBS",
			"priority":0,
			"skip":false,
			"toNodeId":"nz4t8",
			"type":"next"
		},
		{
			"fromNodeId":"nz4t8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_IVHak",
			"type":"next"
		},
		{
			"fromNodeId":"n_IVHak",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"LPHQe",
			"type":"next"
		},
		{
			"fromNodeId":"LPHQe",
			"priority":0,
			"skip":false,
			"toNodeId":"_5YIb2",
			"type":"next"
		},
		{
			"fromNodeId":"_5YIb2",
			"priority":0,
			"skip":false,
			"toNodeId":"_AB6XG",
			"type":"next"
		},
		{
			"fromNodeId":"_AB6XG",
			"priority":0,
			"skip":false,
			"toNodeId":"_PSQLf",
			"type":"loop"
		},
		{
			"fromNodeId":"_PSQLf",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_AB6XG",
			"type":"next"
		},
		{
			"fromNodeId":"_AB6XG",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"sAi0U",
			"type":"next"
		},
		{
			"fromNodeId":"JvugK",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"JvugK@2",
			"type":"branch"
		},
		{
			"fromNodeId":"JvugK@2",
			"priority":0,
			"skip":false,
			"toNodeId":"3S7qD",
			"type":"next"
		},
		{
			"fromNodeId":"3S7qD",
			"priority":0,
			"skip":false,
			"toNodeId":"TjNOI",
			"type":"loop"
		},
		{
			"fromNodeId":"TjNOI",
			"priority":0,
			"skip":false,
			"toNodeId":"72Wls",
			"type":"next"
		},
		{
			"fromNodeId":"72Wls",
			"priority":0,
			"skip":false,
			"toNodeId":"AiPir",
			"type":"next"
		},
		{
			"fromNodeId":"AiPir",
			"priority":0,
			"skip":false,
			"toNodeId":"BHgaM",
			"type":"next"
		},
		{
			"fromNodeId":"BHgaM",
			"priority":0,
			"skip":false,
			"toNodeId":"vdr3R",
			"type":"next"
		},
		{
			"fromNodeId":"vdr3R",
			"priority":0,
			"skip":false,
			"toNodeId":"sqf1x",
			"type":"next"
		},
		{
			"fromNodeId":"sqf1x",
			"priority":0,
			"skip":false,
			"toNodeId":"JT58N",
			"type":"loop"
		},
		{
			"fromNodeId":"JT58N",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"PJqvw",
			"type":"if"
		},
		{
			"fromNodeId":"PJqvw",
			"priority":0,
			"skip":false,
			"toNodeId":"MICnx",
			"type":"next"
		},
		{
			"fromNodeId":"MICnx",
			"priority":0,
			"skip":false,
			"toNodeId":"CbCxM",
			"type":"next"
		},
		{
			"fromNodeId":"CbCxM",
			"priority":0,
			"skip":false,
			"toNodeId":"Ancr8",
			"type":"next"
		},
		{
			"fromNodeId":"Ancr8",
			"priority":0,
			"skip":false,
			"toNodeId":"CCvpS",
			"type":"next"
		},
		{
			"fromNodeId":"CCvpS",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"fR7WY",
			"type":"next"
		},
		{
			"fromNodeId":"fR7WY",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ALrbb",
			"type":"if"
		},
		{
			"fromNodeId":"n_ALrbb",
			"priority":0,
			"skip":false,
			"toNodeId":"n_gYcvi",
			"type":"loop"
		},
		{
			"fromNodeId":"n_gYcvi",
			"priority":0,
			"skip":false,
			"toNodeId":"n_DTS6V",
			"type":"next"
		},
		{
			"fromNodeId":"n_DTS6V",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ALrbb",
			"type":"next"
		},
		{
			"fromNodeId":"fR7WY",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"eTwFq",
			"type":"next"
		},
		{
			"fromNodeId":"eTwFq",
			"priority":0,
			"skip":false,
			"toNodeId":"SQmcl",
			"type":"next"
		},
		{
			"fromNodeId":"CCvpS",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"wdQvU",
			"type":"if"
		},
		{
			"fromNodeId":"n_ALrbb",
			"priority":0,
			"skip":false,
			"toNodeId":"wdQvU",
			"type":"next"
		},
		{
			"fromNodeId":"SQmcl",
			"priority":0,
			"skip":false,
			"toNodeId":"wdQvU",
			"type":"next"
		},
		{
			"fromNodeId":"wdQvU",
			"priority":0,
			"skip":false,
			"toNodeId":"4FbFN",
			"type":"next"
		},
		{
			"fromNodeId":"4FbFN",
			"priority":0,
			"skip":false,
			"toNodeId":"yFsUS",
			"type":"next"
		},
		{
			"fromNodeId":"yFsUS",
			"priority":0,
			"skip":false,
			"toNodeId":"MyKhr",
			"type":"next"
		},
		{
			"fromNodeId":"MyKhr",
			"priority":0,
			"skip":false,
			"toNodeId":"CgB7q",
			"type":"next"
		},
		{
			"fromNodeId":"JT58N",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"CgB7q",
			"type":"next"
		},
		{
			"fromNodeId":"CgB7q",
			"priority":0,
			"skip":false,
			"toNodeId":"NDbPI",
			"type":"next"
		},
		{
			"fromNodeId":"NDbPI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OZ21a",
			"type":"next"
		},
		{
			"fromNodeId":"n_OZ21a",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"sqf1x",
			"type":"next"
		},
		{
			"fromNodeId":"sqf1x",
			"priority":0,
			"skip":false,
			"toNodeId":"n_BKFIa",
			"type":"next"
		},
		{
			"fromNodeId":"n_BKFIa",
			"priority":0,
			"skip":false,
			"toNodeId":"_PEgle",
			"type":"next"
		},
		{
			"fromNodeId":"_PEgle",
			"priority":0,
			"skip":false,
			"toNodeId":"_Yh4kH",
			"type":"loop"
		},
		{
			"fromNodeId":"_Yh4kH",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_PEgle",
			"type":"next"
		},
		{
			"fromNodeId":"_PEgle",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"3S7qD",
			"type":"next"
		},
		{
			"fromNodeId":"JvugK",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"JvugK@3",
			"type":"branch"
		},
		{
			"fromNodeId":"JvugK@3",
			"priority":0,
			"skip":false,
			"toNodeId":"R3zQh",
			"type":"next"
		},
		{
			"fromNodeId":"R3zQh",
			"priority":0,
			"skip":false,
			"toNodeId":"jIz4V",
			"type":"loop"
		},
		{
			"fromNodeId":"jIz4V",
			"priority":0,
			"skip":false,
			"toNodeId":"AaFsu",
			"type":"next"
		},
		{
			"fromNodeId":"AaFsu",
			"priority":0,
			"skip":false,
			"toNodeId":"PoOdD",
			"type":"next"
		},
		{
			"fromNodeId":"PoOdD",
			"priority":0,
			"skip":false,
			"toNodeId":"GoVkI",
			"type":"next"
		},
		{
			"fromNodeId":"GoVkI",
			"priority":0,
			"skip":false,
			"toNodeId":"DXsQ2",
			"type":"next"
		},
		{
			"fromNodeId":"DXsQ2",
			"priority":0,
			"skip":false,
			"toNodeId":"PEqLt",
			"type":"next"
		},
		{
			"fromNodeId":"PEqLt",
			"priority":0,
			"skip":false,
			"toNodeId":"KihYi",
			"type":"loop"
		},
		{
			"fromNodeId":"KihYi",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"BaekE",
			"type":"if"
		},
		{
			"fromNodeId":"BaekE",
			"priority":0,
			"skip":false,
			"toNodeId":"aRTsH",
			"type":"next"
		},
		{
			"fromNodeId":"aRTsH",
			"priority":0,
			"skip":false,
			"toNodeId":"_GhrFj",
			"type":"next"
		},
		{
			"fromNodeId":"_GhrFj",
			"priority":0,
			"skip":false,
			"toNodeId":"_0MSEz",
			"type":"next"
		},
		{
			"fromNodeId":"_0MSEz",
			"priority":0,
			"skip":false,
			"toNodeId":"sn0Tt",
			"type":"next"
		},
		{
			"fromNodeId":"sn0Tt",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"fTn1s",
			"type":"next"
		},
		{
			"fromNodeId":"fTn1s",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_ISwXX",
			"type":"if"
		},
		{
			"fromNodeId":"_ISwXX",
			"priority":0,
			"skip":false,
			"toNodeId":"_lrpjz",
			"type":"loop"
		},
		{
			"fromNodeId":"_lrpjz",
			"priority":0,
			"skip":false,
			"toNodeId":"_gYSvX",
			"type":"next"
		},
		{
			"fromNodeId":"_gYSvX",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_ISwXX",
			"type":"next"
		},
		{
			"fromNodeId":"fTn1s",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"iU3kG",
			"type":"next"
		},
		{
			"fromNodeId":"iU3kG",
			"priority":0,
			"skip":false,
			"toNodeId":"FKe6i",
			"type":"next"
		},
		{
			"fromNodeId":"sn0Tt",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"aThMX",
			"type":"if"
		},
		{
			"fromNodeId":"_ISwXX",
			"priority":0,
			"skip":false,
			"toNodeId":"aThMX",
			"type":"next"
		},
		{
			"fromNodeId":"FKe6i",
			"priority":0,
			"skip":false,
			"toNodeId":"aThMX",
			"type":"next"
		},
		{
			"fromNodeId":"aThMX",
			"priority":0,
			"skip":false,
			"toNodeId":"71RxD",
			"type":"next"
		},
		{
			"fromNodeId":"71RxD",
			"priority":0,
			"skip":false,
			"toNodeId":"7e0iQ",
			"type":"next"
		},
		{
			"fromNodeId":"7e0iQ",
			"priority":0,
			"skip":false,
			"toNodeId":"z18tj",
			"type":"next"
		},
		{
			"fromNodeId":"z18tj",
			"priority":0,
			"skip":false,
			"toNodeId":"Bsdze",
			"type":"next"
		},
		{
			"fromNodeId":"KihYi",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Bsdze",
			"type":"next"
		},
		{
			"fromNodeId":"Bsdze",
			"priority":0,
			"skip":false,
			"toNodeId":"sFiJY",
			"type":"next"
		},
		{
			"fromNodeId":"sFiJY",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1ssj5",
			"type":"next"
		},
		{
			"fromNodeId":"n_1ssj5",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"PEqLt",
			"type":"next"
		},
		{
			"fromNodeId":"PEqLt",
			"priority":0,
			"skip":false,
			"toNodeId":"_FSEKu",
			"type":"next"
		},
		{
			"fromNodeId":"_FSEKu",
			"priority":0,
			"skip":false,
			"toNodeId":"_8MnmF",
			"type":"next"
		},
		{
			"fromNodeId":"_8MnmF",
			"priority":0,
			"skip":false,
			"toNodeId":"_SS9Cs",
			"type":"loop"
		},
		{
			"fromNodeId":"_SS9Cs",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_8MnmF",
			"type":"next"
		},
		{
			"fromNodeId":"_8MnmF",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"R3zQh",
			"type":"next"
		},
		{
			"fromNodeId":"JvugK",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"n_yZeaL",
			"type":"branch"
		},
		{
			"fromNodeId":"_IzmND",
			"priority":0,
			"skip":false,
			"toNodeId":"_JijkW",
			"type":"next"
		},
		{
			"fromNodeId":"sAi0U",
			"priority":0,
			"skip":false,
			"toNodeId":"_JijkW",
			"type":"next"
		},
		{
			"fromNodeId":"3S7qD",
			"priority":0,
			"skip":false,
			"toNodeId":"_JijkW",
			"type":"next"
		},
		{
			"fromNodeId":"R3zQh",
			"priority":0,
			"skip":false,
			"toNodeId":"_JijkW",
			"type":"next"
		},
		{
			"fromNodeId":"n_yZeaL",
			"priority":0,
			"skip":false,
			"toNodeId":"_JijkW",
			"type":"next"
		},
		{
			"fromNodeId":"_JijkW",
			"priority":0,
			"skip":false,
			"toNodeId":"_c0LUs",
			"type":"next"
		},
		{
			"fromNodeId":"_c0LUs",
			"priority":0,
			"skip":false,
			"toNodeId":"_R83tM",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6729177526f70f5310b25dcf",
	"lastModifiedBy":-1,
	"lcName":"excel file indexing for sql",
	"modifiedTime":1759371963816,
	"name":"Excel File Indexing For SQL",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":73,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_GK8TT",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"response":{
							"type":"boolean",
							"title":"Response"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"file":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File"
						},
						"knowledgeId":{
							"type":"string",
							"title":"Knowledge Id"
						},
						"mimeType":{
							"type":"string",
							"title":"Mime Type"
						},
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":134,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_iEQ3V",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"isHeader":{
							"type":"boolean",
							"title":"Is Header"
						},
						"entityId":{
							"type":"string",
							"title":"Entity Id"
						},
						"uemId":{
							"type":"string",
							"title":"Uem Id"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"isHeader":true
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"isHeader":{
							"type":"boolean",
							"title":"Is Header"
						},
						"entityId":{
							"type":"string",
							"title":"Entity Id"
						},
						"uemId":{
							"type":"string",
							"title":"Uem Id"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":135,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_WZkyD",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object"
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"fieldTypeMap",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"fieldTypeMap",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":450,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"n_N2l1X",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"context":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Context"
										},
										"input":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Input"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"Storage insert",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"Storage insert",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"context":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Context"
									},
									"input":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Input"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2059,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_1YPMl",
			"index":5,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ _GK8TT.outputs.knowledgeId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"knowledge",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"knowledge",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_SpQjZ",
			"index":6,
			"inputs":{
				"filters":[
					{
						"property":"{{ _1YPMl.outputs.properties.additionalDetails.unifiedEntityModelId }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"uem created ?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_SpQjZ@_DFiQo-1@y",
			"id":"_gmPzv",
			"index":7,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.uemId }}",
						"value":"{{ _1YPMl.outputs.properties.additionalDetails.unifiedEntityModelId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"unified_entity_by_unifyapps",
				"resourceVersion":7,
				"resourceName":"unified_entity_by_unifyapps_create_unified_entity_model",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_SpQjZ@_DFiQo-1@n",
			"id":"_Yjkyo",
			"index":8,
			"inputs":{
				"name":"{{ _1YPMl.outputs.properties.name }}_AutoGeneratedModel"
			},
			"skip":false,
			"subTitle":"Unified Entity by UnifyApps",
			"title":"Create unified entity model",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2055,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_SpQjZ@_DFiQo-1@n",
			"id":"_l44At",
			"index":9,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ _GK8TT.outputs.knowledgeId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"knowledge",
				"updateFields":[
					{
						"fieldName":"properties.additionalDetails.unifiedEntityModelId",
						"actionType":"SET",
						"setValue":"{{ _Yjkyo.outputs.result.id }}"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_SpQjZ@_DFiQo-1@n",
			"id":"_JMhih",
			"index":10,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.uemId }}",
						"value":"{{ _Yjkyo.outputs.result.id }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":316,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"FkiBn",
			"index":11,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"mimeType1":{
							"type":"string",
							"title":"Mime Type"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"mimeType1":{
							"type":"string",
							"title":"Mime Type"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def mimeToExtension = [\n    \"application/vnd.ms-excel\"                                         : \"xls\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": \"xlsx\",\n    \"application/vnd.ms-excel.sheet.binary.macroenabled.12\"            : \"xlsb\", // XLSB support\n    \"text/csv\"                                                         : \"csv\",\n    \"csv\"                                                              : \"csv\"\n]\n\nreturn [\n   'mimeType1' : mimeToExtension.get(mimeType1)\n]",
				"parameters":{
					"mimeType1":"{{ _GK8TT.outputs.mimeType }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":285,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"rYTim",
			"index":12,
			"inputs":{
				"filters":[
					{
						"property":"{{ FkiBn.outputs.result.mimeType1 }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":304,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rYTim@_DFiQo-1@n",
			"id":"0nm31",
			"index":13,
			"inputs":{
				"result":{
					"response":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":30,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_4935D",
			"index":14,
			"inputs":{
				"file":"{{ _GK8TT.outputs.file }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":276,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"RWnC9",
			"index":15,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"iscsv":{
							"type":"boolean",
							"title":"Iscsv"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"import os\nimport requests\nimport magic\n\ndef is_likely_csv_content(content_sample):\n    \"\"\"Check if content looks like CSV by examining structure\"\"\"\n    try:\n        lines = content_sample.decode('utf-8', errors='ignore').split('\\n')[:5]\n        if len(lines) < 2:\n            return False\n        \n        # Look for CSV patterns\n        first_line = lines[0].strip()\n        if not first_line:\n            return False\n            \n        # Check for common CSV delimiters\n        delimiters = [',', ';', '\\t', '|']\n        for delimiter in delimiters:\n            if delimiter in first_line:\n                # Check if multiple lines have similar delimiter count\n                delimiter_counts = [line.count(delimiter) for line in lines[:3] if line.strip()]\n                if len(set(delimiter_counts)) <= 2 and max(delimiter_counts, default=0) > 0:\n                    return True\n        return False\n    except:\n        return False\n\nmimetype = None\nis_csv = os.path.basename(url).lower().endswith('.csv')\n\n# Step 1: Check file extension\nif is_csv:\n    mimetype = \"text/csv\"\nelse:\n    # Step 2: Check HEAD request\n    try:\n        response = requests.head(url, verify=False, timeout=10)\n        content_type = response.headers.get('Content-Type', '')\n        if 'text/csv' in content_type.lower() or 'csv' in content_type.lower():\n            is_csv = True\n            mimetype = content_type.split(\";\")[0].strip()\n    except:\n        pass\n\n    # Step 3: Get actual content and check\n    if not is_csv:\n        try:\n            response = requests.get(url, verify=False, timeout=30)\n            \n            # Try magic first\n            mime = magic.Magic(mime=True)\n            detected_mime = mime.from_buffer(response.content)\n            mimetype = detected_mime\n            \n            # Check if magic detected CSV-like types\n            if detected_mime in (\"text/csv\", \"text/plain\"):\n                # Do content inspection for text/plain\n                if detected_mime == \"text/plain\" or detected_mime == \"application/octet-stream\":\n                    is_csv = is_likely_csv_content(response.content[:1024])  # Check first 1KB\n                else:\n                    is_csv = True\n            \n            # Fallback: if magic says octet-stream, still check content\n            elif detected_mime == \"application/octet-stream\":\n                is_csv = is_likely_csv_content(response.content[:1024])\n                \n        except Exception as e:\n            print(f\"Error during detection: {e}\")\n\nresult = {\n    \"iscsv\": is_csv,\n    \"mimeType\": mimetype or \"Unknown\"\n}",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"url":"{{ _4935D.outputs.url }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":149,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"whN5E",
			"index":16,
			"inputs":{
				"filters":[
					{
						"property":"{{ RWnC9.outputs.result.iscsv }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@y",
			"id":"n_QwUd3",
			"index":17,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"imports":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Imports"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"return[\n  'imports' : [\n    'chardet',\n    'requests'\n  ]\n]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@y",
			"id":"2lXzN",
			"index":18,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"delimiter":{
							"type":"string",
							"title":"Delimiter"
						},
						"columns":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Columns"
						},
						"quotechar":{
							"type":"string",
							"title":"Quotechar"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					}
				},
				"configurationMode":"TEMPLATE",
				"code":"import requests\nimport csv\nimport chardet\n\nresponse = requests.get(url,verify=False, stream=True)\n\ndetected_encoding = None\ncsv_reader = None\ncolumns = None\ndialect = None\n\nfor raw_line in response.iter_lines():  \n    if not raw_line.strip():  # Skip empty lines\n        continue\n    \n    if detected_encoding is None:\n        detected_encoding = chardet.detect(raw_line)['encoding'] or 'utf-8' \n    \n    line = raw_line.decode(detected_encoding, errors='ignore') \n\n    sniffer = csv.Sniffer()\n    dialect = sniffer.sniff(line)  \n    csv_reader = csv.reader([line], delimiter=dialect.delimiter, quotechar=dialect.quotechar)\n    columns = next(csv_reader)\n    break\n\nresult = {\n    \"columns\": columns if columns else [],\n    \"delimiter\": dialect.delimiter if dialect else None,\n    \"quotechar\": dialect.quotechar if dialect else None\n}\n\n",
				"isAsync":false,
				"python_version":"3.12",
				"entityId":"e_68bc37d3856d0977af926d26",
				"parameters":{
					"url":"{{ _4935D.outputs.url }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":353,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@y",
			"id":"twUCz",
			"index":19,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2lXzN.outputs.result.columns[0] }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":379,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"twUCz@whN5E@_DFiQo-1@y@n",
			"id":"HMxsE",
			"index":20,
			"inputs":{
				"result":{
					"response":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":153,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@y",
			"id":"90Uhf",
			"index":21,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"file":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def fileName = file?.name\ndef baseName = fileName?.lastIndexOf('.') ? fileName[0..fileName.lastIndexOf('.') - 1] : fileName\n\nreturn[\n  'tableName' : baseName\n]",
				"parameters":{
					"file":"{{ _GK8TT.outputs.file }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"csv_by_unifyapps",
				"resourceVersion":336,
				"resourceName":"csv_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@y",
			"id":"6flq0",
			"index":22,
			"inputs":{
				"startFromRow":1,
				"file":"{{ _GK8TT.outputs.file }}",
				"quote":"{{ 2lXzN.outputs.result.quotechar }}",
				"headerRow":true,
				"delimiter":"{{ 2lXzN.outputs.result.delimiter }}",
				"columns":{
					"source":"{{ 2lXzN.outputs.result.columns }}",
					"ua:type":"mappedArray",
					"items":"{{ 2lXzN.outputs.result.columns[0] }}"
				},
				"batch":false,
				"encoding":"UTF-8",
				"batchSize":100
			},
			"skip":false,
			"subTitle":"CSV by UnifyApps",
			"title":"Consume data from CSV file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6flq0@whN5E@_DFiQo-1@y@l",
			"id":"hykN1",
			"index":23,
			"inputs":{
				"filters":[
					{
						"property":"{{ _iEQ3V.outputs.isHeader }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"header = true",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"P2g17",
			"index":24,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"fieldMappings":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"fieldName":{
										"type":"string",
										"title":"Field Name"
									},
									"fieldType":{
										"type":"string",
										"title":"Field Type"
									},
									"label":{
										"type":"string",
										"title":"Label"
									}
								},
								"additionalProperties":false
							},
							"title":"Field Mappings",
							"required":[]
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nif (!binding.hasVariable(\"row\")){\n    return null\n}\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def isAsciiLetter(char c){\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')   \n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetter(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n        Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n\n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n\n}\n\n// detect the fieldType from value\ndef getFieldType(String value){\n    // Check for Boolean\n    if (value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\")) {\n        return \"BOOLEAN\"\n    }\n\n    // Check for Double\n    try {\n        Double.parseDouble(value.trim().replace(\",\", \"\"))\n        return \"DOUBLE\"\n    } catch (NumberFormatException e) {\n        // Not a Double\n    }\n\n    // Check for Date\n    def dateFormats = [\n            \"yyyy-MM-dd\", // ISO format\n            \"MM/dd/yyyy\", // US format\n            \"dd/MM/yyyy\"  // European format\n    ]\n\n    for (String format : dateFormats) {\n        try {\n            new SimpleDateFormat(format).parse(value)\n            //return \"DATE\"\n        } catch (ParseException e) {\n            // Not a Date in this format\n        }\n    }\n\n    // If none of the above, return as String\n    return \"STRING\"\n}\n\ndef fieldTypeMap = [:]\ndef fieldMappings = []\n\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n    def field = [:]\n    field[\"fieldName\"] = generator.getSanitizedName(key)\n    field[\"fieldType\"] = getFieldType(value)\n    field[\"label\"] = key\n    fieldMappings << field\n    fieldTypeMap[key] = getFieldType(value)\n}\n\ndef getSanitizedName(String header) {\n\n    if (header == null || header.isEmpty() || !header?.trim()) {\n        return \"Table_1\"\n    }\n\n    def sb = new StringBuilder()\n    def chars = header.toCharArray()\n\n    chars.eachWithIndex { c, idx ->\n        def k = c.toLowerCase()\n        if (idx == 0) {\n            if (Character.isLetter(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        } else {\n            if (Character.isLetterOrDigit(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        }\n    }\n\n    return sb.toString()\n}\n\n\nreturn [\n        \"fieldMappings\": fieldMappings,\n        \"fieldTypeMap\": fieldTypeMap,\n        \"tableName\": getSanitizedName(tableName)\n]\n\n\n\n",
				"isAsync":false,
				"parameters":{
					"row":"{{ 6flq0.outputs.item }}",
					"tableName":"{{ 90Uhf.outputs.result.tableName }}"
				}
			},
			"skip":false,
			"subTitle":"Construct field mappings",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"qsKbn",
			"index":25,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ P2g17.outputs.result.tableName }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":87,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"_xSxIK",
			"index":26,
			"inputs":{
				"keys":[
					"{{ P2g17.outputs.result.tableName }}"
				],
				"lookupType":"ENTITY_TYPE",
				"type":"ByKeys"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"_o75Tn",
			"index":27,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"unifiedEntityModelId":{
							"type":"string",
							"title":"Unified Entity Model Id"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"response":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response"
						},
						"entityType":{
							"type":"string",
							"title":"Entity Type"
						}
					}
				},
				"code":"return[\"unifiedEntityModelId\":response?.objects?.get(entityType)?.unifiedEntityModelId]",
				"compile_static":false,
				"parameters":{
					"response":"{{ _xSxIK.outputs.response }}",
					"entityType":"{{ P2g17.outputs.result.tableName }}"
				}
			},
			"skip":false,
			"subTitle":"Get Existing UEM ID",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"8ObaF",
			"index":28,
			"inputs":{
				"filters":[
					{
						"property":"{{ _o75Tn.outputs.result.unifiedEntityModelId }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"8ObaF@hykN1@6flq0@whN5E@_DFiQo-1@y@l@y@n",
			"id":"up1xJ",
			"index":29,
			"inputs":{
				"filters":[
					{
						"property":"{{ _o75Tn.outputs.result.unifiedEntityModelId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ _iEQ3V.outputs.uemId }}"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":456,
				"resourceName":"loop_while",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"up1xJ@8ObaF@hykN1@6flq0@whN5E@_DFiQo-1@y@l@y@n@y",
			"id":"_y2bfP",
			"index":30,
			"inputs":{
				"condition":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				},
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"While loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":613,
				"resourceName":"storage_by_unifyapps_delete_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_y2bfP@up1xJ@8ObaF@hykN1@6flq0@whN5E@_DFiQo-1@y@l@y@n@y@l",
			"id":"_owPbZ",
			"index":31,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"{{ P2g17.outputs.result.tableName }}",
				"numberOfRecordsToDelete":"MULTIPLE",
				"page":{
					"limit":10000,
					"offset":0
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Delete records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_y2bfP@up1xJ@8ObaF@hykN1@6flq0@whN5E@_DFiQo-1@y@l@y@n@y@l",
			"id":"_pfPBE",
			"index":32,
			"inputs":{
				"loop":"_y2bfP",
				"conditions":{
					"filters":[
						{
							"property":"{{ _owPbZ.outputs.count }}",
							"filter":{
								"operator":"LT",
								"value":"10000"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"up1xJ@8ObaF@hykN1@6flq0@whN5E@_DFiQo-1@y@l@y@n@n",
			"id":"ng67T",
			"index":33,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"randomString":{
							"type":"string",
							"title":"Random String"
						}
					},
					"additionalProperties":false,
					"required":[
						"randomString"
					]
				},
				"compile_static":false,
				"code":"def generateRandomString() {\n    def chars = ('a'..'z') + ('A'..'Z')\n    def random = new Random()\n    def randomString = (1..5).collect {\n        chars[random.nextInt(chars.size())]\n    }.join()\n    return randomString\n}\n\nreturn [\"randomString\" : generateRandomString()]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"up1xJ@8ObaF@hykN1@6flq0@whN5E@_DFiQo-1@y@l@y@n@n",
			"id":"5kCeU",
			"index":34,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ _iEQ3V.outputs.entityId }}_{{ ng67T.outputs.result.randomString }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"unified_entity_by_unifyapps",
				"resourceVersion":4,
				"resourceName":"unified_entity_by_unifyapps_create_unified_entity",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"L3a9m",
			"index":35,
			"inputs":{
				"timeSeries":true,
				"storeType":"ANALYTICS_BY_UNIFY_APPS",
				"modelId":"{{ _iEQ3V.outputs.uemId }}",
				"tagIds":[
					"internal"
				],
				"name":"{{ _iEQ3V.outputs.entityId }}",
				"entityId":"{{ _iEQ3V.outputs.entityId }}",
				"fieldMappings":{
					"source":"{{ P2g17.outputs.result.fieldMappings }}",
					"ua:type":"mappedArray",
					"items":{
						"fieldName":"{{ P2g17.outputs.result.fieldMappings[0].fieldName }}",
						"fieldType":"{{ P2g17.outputs.result.fieldMappings[0].fieldType }}",
						"label":"{{ P2g17.outputs.result.fieldMappings[0].label }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Unified Entity by UnifyApps",
			"title":"Create unified entity",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"delay",
				"resourceVersion":11,
				"resourceName":"delay_for",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"W4WYX",
			"index":36,
			"inputs":{
				"duration":10,
				"unit":"SECONDS"
			},
			"skip":false,
			"subTitle":"Delay",
			"title":"Set delay duration",
			"type":"DELAY"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"lK1Sw",
			"index":37,
			"inputs":{
				"itemToAdd":"{{ P2g17.outputs.result.fieldTypeMap }}",
				"insertLocation":"END",
				"listName":"{{ _WZkyD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hykN1@6flq0@whN5E@_DFiQo-1@y@l@y",
			"id":"Fh2wZ",
			"index":38,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.isHeader }}",
						"value":false
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"6flq0@whN5E@_DFiQo-1@y@l",
			"id":"Z8lmQ",
			"index":39,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"entityId":{
							"type":"string",
							"title":"Entity Id"
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n        Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n        \n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n}\n\n// Method to parse the value based on its type\ndef getParsedValue(String key, String value) {\n    String type = fieldTypeMap[key]\n    if (type == null) {\n        return value\n    }\n    switch (type) {\n        case \"INTEGER\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Integer.parseInt(value)\n        case \"DOUBLE\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Double.parseDouble(value.trim().replace(\",\", \"\"))\n        case \"BOOLEAN\":\n            return value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\") ? Boolean.parseBoolean(value) : null\n        case \"DATE\":\n        case \"STRING\":\n        default:\n            return value\n    }\n}\n\ndef record = [:]\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n  record.put(generator.getSanitizedName(key), getParsedValue(key, value))\n}\ndef input = [\n  \"object_type\": entityId,\n  \"record\": com.unifyapps.infra.utils.JsonUtils.toJSON(record)\n]\n\ndef context = [\n  \"appName\": \"storage_by_unifyapps\",\n  \"resourceName\": \"storage_by_unifyapps_create_record\",\n  \"type\": \"APPLICATION\"\n]\n\nreturn [\n  \"context\" : com.unifyapps.infra.utils.JsonUtils.toJSON(context),\n  \"input\":com.unifyapps.infra.utils.JsonUtils.toJSON(input)\n]\n\n",
				"isAsync":false,
				"parameters":{
					"entityId":"{{ _iEQ3V.outputs.entityId }}",
					"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}",
					"row":"{{ 6flq0.outputs.item }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Construct row entity",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_application",
				"resourceVersion":14,
				"resourceName":"custom_application_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"6flq0@whN5E@_DFiQo-1@y@l",
			"id":"uCs1H",
			"index":40,
			"inputs":{
				"input":"{{ Z8lmQ.outputs.result.input }}",
				"context":"{{ Z8lmQ.outputs.result.context }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Insert new Record",
			"title":"Execute Custom Application Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6flq0@whN5E@_DFiQo-1@y@l",
			"id":"n_afhpI",
			"index":41,
			"inputs":{
				"loop":"6flq0",
				"conditions":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@y",
			"id":"_5rQFc",
			"index":42,
			"inputs":{
				"code":"return [:]",
				"compile_static":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"csv_by_unifyapps",
				"resourceVersion":336,
				"resourceName":"csv_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@y",
			"id":"_IzmND",
			"index":43,
			"inputs":{
				"startFromRow":2,
				"file":"{{ _GK8TT.outputs.file }}",
				"quote":"{{ 2lXzN.outputs.result.quotechar }}",
				"headerRow":false,
				"delimiter":"{{ 2lXzN.outputs.result.delimiter }}",
				"columns":{
					"source":"{{ 2lXzN.outputs.result.columns }}",
					"ua:type":"mappedArray",
					"items":"{{ 2lXzN.outputs.result.columns[0] }}"
				},
				"batch":true,
				"encoding":"UTF-8",
				"batchSize":100
			},
			"skip":false,
			"subTitle":"CSV by UnifyApps",
			"title":"Consume data from CSV file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_IzmND@whN5E@_DFiQo-1@y@l",
			"id":"_PTund",
			"index":44,
			"inputs":{
				"automationId":"68bc3aec00a55f66efe33ed8",
				"runtimeConnections":{},
				"synchronous":true,
				"distributeWorkflowLoad":false,
				"parametersList":{
					"ua:type":"mappedArray",
					"items":{
						"entityId":"{{ _iEQ3V.outputs.entityId }}",
						"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}",
						"row":"{{ _IzmND.outputs.item[0] }}"
					},
					"source":"{{ _IzmND.outputs.item }}"
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":37,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@n",
			"id":"b1HA6",
			"index":45,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sheetNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Sheet Names"
						},
						"chunkList":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chunk List"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"fileUrl":{
							"type":"string",
							"title":"File Url"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"import pandas as pd\nimport requests\nfrom io import BytesIO\n\n# Load the Excel file\nresponse = requests.get(fileUrl, verify=False)\nresponse.raise_for_status()\n\nexcel_data = pd.ExcelFile(BytesIO(response.content))\n\n# Get sheet names\nall_sheet_names = excel_data.sheet_names\n\nvalid_sheet_names = []\nchunk_list = [] \n\nfor sheetName in all_sheet_names:\n  valid = 0\n  df = pd.read_excel(\n          excel_data,\n          sheet_name=sheetName,\n          header=None,\n          skiprows=0,\n          nrows=100\n      )\n\n  for idx, row in df.iterrows():\n\n    if not row.notna().any():\n       continue\n      \n    valid += 1\n\n    if valid == 10:\n      valid_sheet_names.append(sheetName)\n      break\n  \n  if valid < 10:\n    chunk_text = f\"Sheet Name: {sheetName}\\n Data:\\n{df.to_string(index=False)}\"\n    chunk_list.append(chunk_text)\n\n\nresult = {\"sheetNames\" : valid_sheet_names,\n          \"chunkList\" : chunk_list }\n",
				"isAsync":false,
				"parameters":{
					"fileUrl":"{{ _4935D.outputs.url }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":340,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@n",
			"id":"b4O7O",
			"index":46,
			"inputs":{
				"filters":[
					{
						"property":"{{ b1HA6.outputs.result.chunkList[0] }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":4,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"b4O7O@whN5E@_DFiQo-1@n@y",
			"id":"EpmrL",
			"index":47,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"chunks":{
						"items":{
							"sharedWithIds":{
								"items":"GLOBAL",
								"ua:type":"mappedArray"
							},
							"data":"{{ b1HA6.outputs.result.chunkList[0] }}"
						},
						"ua:type":"mappedArray",
						"source":"{{ b1HA6.outputs.result.chunkList }}"
					},
					"knowledgeId":"{{ _GK8TT.outputs.knowledgeId }}",
					"uniqueEntityId":"{{ _GK8TT.outputs.uniqueEntityId }}"
				}
			},
			"skip":false,
			"subTitle":"Index sheet as a chunk",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"whN5E@_DFiQo-1@n",
			"id":"JvugK",
			"index":48,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"conditions":{
								"filters":[
									{
										"property":"{{ FkiBn.outputs.result.mimeType1 }}",
										"filter":{
											"operator":"EQUAL",
											"value":"xls"
										}
									}
								],
								"operator":"AND"
							},
							"name":"XLS"
						}
					},
					{
						"id":"2",
						"inputs":{
							"conditions":{
								"filters":[
									{
										"property":"{{ FkiBn.outputs.result.mimeType1 }}",
										"filter":{
											"operator":"EQUAL",
											"value":"xlsx"
										}
									}
								],
								"operator":"AND"
							},
							"name":"XLSX"
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"XLSB",
							"conditions":{
								"filters":[
									{
										"property":"{{ FkiBn.outputs.result.mimeType1 }}",
										"filter":{
											"operator":"EQUAL",
											"value":"xlsb"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":159,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JvugK@whN5E@_DFiQo-1@n@1",
			"id":"JvugK@1",
			"index":49,
			"inputs":{
				"name":"XLS",
				"conditions":{
					"filters":[
						{
							"property":"{{ FkiBn.outputs.result.mimeType1 }}",
							"filter":{
								"operator":"EQUAL",
								"value":"xls"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":341,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JvugK@whN5E@_DFiQo-1@n@1",
			"id":"sAi0U",
			"index":50,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ b1HA6.outputs.result.sheetNames }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":259,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"7abtV",
			"index":51,
			"inputs":{
				"file":"{{ _GK8TT.outputs.file }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"GuhnN",
			"index":52,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						},
						"sheetName":{
							"type":"string",
							"title":"Sheet Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"import requests\nimport pandas as pd\nfrom io import BytesIO\n\nresponse = requests.get(url, verify=False)\nresponse.raise_for_status()\nexcel_content = BytesIO(response.content)\n\n\n\nresult = {\"columnNames\": []}\ni = 0\nmax_rows_to_check = 100\nfound = False\n\nwhile i < max_rows_to_check:\n    df = pd.read_excel(\n        excel_content,\n        sheet_name=sheetName,\n        header=None,\n        skiprows=i,\n        nrows=1\n    )\n\n    if not df.notna().any().any():\n        i += 1\n        continue \n\n    header = df.iloc[0].astype(str).replace('nan', 'Unnamed Column').tolist()\n\n    seen = {}\n    final_headers = []\n    for col in header:\n        if col in seen:\n            seen[col] += 1\n            final_headers.append(f\"{col}_{seen[col]}\")\n        else:\n            seen[col] = 0\n            final_headers.append(col)\n\n    result = {\"columnNames\": final_headers}\n    found = True\n    break\n\nif not found: \n    result = {\"columnNames\": []}\n\n",
				"isAsync":false,
				"parameters":{
					"url":"{{ 7abtV.outputs.url }}",
					"sheetName":"{{ sAi0U.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":352,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"FRDHE",
			"index":53,
			"inputs":{
				"loop":"sAi0U",
				"conditions":{
					"filters":[
						{
							"property":"{{ GuhnN.outputs.result.columnNames[0] }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"RsHcU",
			"index":54,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.isHeader }}",
						"value":true
					},
					{
						"source":"{{ _iEQ3V.outputs.entityId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":103,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"6StEu",
			"index":55,
			"inputs":{
				"listName":"{{ _WZkyD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"LPHQe",
			"index":56,
			"inputs":{
				"startFromRow":1,
				"consumptionBehaviour":"string",
				"file":"{{ _GK8TT.outputs.file }}",
				"headerRow":true,
				"sheetName":"{{ sAi0U.outputs.item }}",
				"columns":{
					"source":"{{ GuhnN.outputs.result.columnNames }}",
					"ua:type":"mappedArray",
					"items":"{{ GuhnN.outputs.result.columnNames[0] }}"
				},
				"batch":false,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xls",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l",
			"id":"FN7wb",
			"index":57,
			"inputs":{
				"filters":[
					{
						"property":"{{ _iEQ3V.outputs.isHeader }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"header = true",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"3BtDG",
			"index":58,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"fieldMappings":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"fieldName":{
										"type":"string",
										"title":"Field Name"
									},
									"fieldType":{
										"type":"string",
										"title":"Field Type"
									},
									"label":{
										"type":"string",
										"title":"Label"
									}
								},
								"additionalProperties":false
							},
							"title":"Field Mappings",
							"required":[]
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nif (!binding.hasVariable(\"row\")){\n    return null\n}\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def isAsciiLetter(char c){\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')   \n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetter(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n       Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n        \n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n\n}\n\n// detect the fieldType from value\ndef getFieldType(String value){\n    // Check for Boolean\n    if (value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\")) {\n        return \"BOOLEAN\"\n    }\n\n    // Check for Double\n    try {\n        Double.parseDouble(value.trim().replace(\",\", \"\"))\n        return \"DOUBLE\"\n    } catch (NumberFormatException e) {\n        // Not a Double\n    }\n\n    // Check for Date\n    def dateFormats = [\n            \"yyyy-MM-dd\", // ISO format\n            \"MM/dd/yyyy\", // US format\n            \"dd/MM/yyyy\"  // European format\n    ]\n\n    for (String format : dateFormats) {\n        try {\n            new SimpleDateFormat(format).parse(value)\n            //return \"DATE\"\n        } catch (ParseException e) {\n            // Not a Date in this format\n        }\n    }\n\n    // If none of the above, return as String\n    return \"STRING\"\n}\n\ndef fieldTypeMap = [:]\ndef fieldMappings = []\n\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n    def field = [:]\n    field[\"fieldName\"] = generator.getSanitizedName(key)\n    field[\"fieldType\"] = getFieldType(value)\n    field[\"label\"] = key\n    fieldMappings << field\n    fieldTypeMap[key] = getFieldType(value)\n}\n\ndef getSanitizedName(String header) {\n\n    if (header == null || header.isEmpty() || !header?.trim()) {\n        return \"Table_1\"\n    }\n\n    def sb = new StringBuilder()\n    def chars = header.toCharArray()\n\n    chars.eachWithIndex { c, idx ->\n        def k = c.toLowerCase()\n        if (idx == 0) {\n            if (Character.isLetter(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        } else {\n            if (Character.isLetterOrDigit(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        }\n    }\n\n    return sb.toString()\n}\n\n\nreturn [\n        \"fieldMappings\": fieldMappings,\n        \"fieldTypeMap\": fieldTypeMap,\n        \"tableName\": getSanitizedName(tableName)\n]\n\n\n\n",
				"isAsync":false,
				"parameters":{
					"row":"{{ LPHQe.outputs.item }}",
					"tableName":"{{ sAi0U.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Construct field mappings",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"FgqRr",
			"index":59,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ 3BtDG.outputs.result.tableName }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":87,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"_pj04O",
			"index":60,
			"inputs":{
				"keys":[
					"{{ 3BtDG.outputs.result.tableName }}"
				],
				"lookupType":"ENTITY_TYPE",
				"type":"ByKeys"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"_NPtyo",
			"index":61,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"unifiedEntityModelId":{
							"type":"string",
							"title":"Unified Entity Model Id"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"response":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response"
						},
						"entityType":{
							"type":"string",
							"title":"Entity Type"
						}
					}
				},
				"code":"return[\"unifiedEntityModelId\":response?.objects?.get(entityType)?.unifiedEntityModelId]",
				"compile_static":false,
				"parameters":{
					"response":"{{ _pj04O.outputs.response }}",
					"entityType":"{{ 3BtDG.outputs.result.tableName }}"
				}
			},
			"skip":false,
			"subTitle":"Get Existing UEM ID",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"C3nwK",
			"index":62,
			"inputs":{
				"filters":[
					{
						"property":"{{ _NPtyo.outputs.result.unifiedEntityModelId }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"C3nwK@FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y@n",
			"id":"rY3Yp",
			"index":63,
			"inputs":{
				"filters":[
					{
						"property":"{{ _NPtyo.outputs.result.unifiedEntityModelId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ _iEQ3V.outputs.uemId }}"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":456,
				"resourceName":"loop_while",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rY3Yp@C3nwK@FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y@n@y",
			"id":"_PIdMA",
			"index":64,
			"inputs":{
				"condition":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				},
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"While loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":613,
				"resourceName":"storage_by_unifyapps_delete_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PIdMA@rY3Yp@C3nwK@FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y@n@y@l",
			"id":"_DUa0J",
			"index":65,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"{{ 3BtDG.outputs.result.tableName }}",
				"numberOfRecordsToDelete":"MULTIPLE",
				"page":{
					"limit":10000,
					"offset":0
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Delete records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PIdMA@rY3Yp@C3nwK@FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y@n@y@l",
			"id":"_wnlWi",
			"index":66,
			"inputs":{
				"loop":"_PIdMA",
				"conditions":{
					"filters":[
						{
							"property":"{{ _DUa0J.outputs.count }}",
							"filter":{
								"operator":"LT",
								"value":"10000"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rY3Yp@C3nwK@FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y@n@n",
			"id":"sKB0q",
			"index":67,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"randomString":{
							"type":"string",
							"title":"Random String"
						}
					},
					"additionalProperties":false,
					"required":[
						"randomString"
					]
				},
				"compile_static":false,
				"code":"def generateRandomString() {\n    def chars = ('a'..'z') + ('A'..'Z')\n    def random = new Random()\n    def randomString = (1..5).collect {\n        chars[random.nextInt(chars.size())]\n    }.join()\n    return randomString\n}\n\nreturn [\"randomString\" : generateRandomString()]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rY3Yp@C3nwK@FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y@n@n",
			"id":"VFYYb",
			"index":68,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ _iEQ3V.outputs.entityId }}_{{ sKB0q.outputs.result.randomString }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"unified_entity_by_unifyapps",
				"resourceVersion":4,
				"resourceName":"unified_entity_by_unifyapps_create_unified_entity",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"kpAod",
			"index":69,
			"inputs":{
				"timeSeries":true,
				"modelId":"{{ _iEQ3V.outputs.uemId }}",
				"tagIds":[
					"internal"
				],
				"name":"{{ _iEQ3V.outputs.entityId }}",
				"entityId":"{{ _iEQ3V.outputs.entityId }}",
				"fieldMappings":{
					"source":"{{ 3BtDG.outputs.result.fieldMappings }}",
					"ua:type":"mappedArray",
					"items":{
						"fieldName":"{{ 3BtDG.outputs.result.fieldMappings[0].fieldName }}",
						"fieldType":"{{ 3BtDG.outputs.result.fieldMappings[0].fieldType }}",
						"label":"{{ 3BtDG.outputs.result.fieldMappings[0].label }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Unified Entity by UnifyApps",
			"title":"Create unified entity",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"delay",
				"resourceVersion":11,
				"resourceName":"delay_for",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"EBVI8",
			"index":70,
			"inputs":{
				"duration":10,
				"unit":"SECONDS"
			},
			"skip":false,
			"subTitle":"Delay",
			"title":"Set delay duration",
			"type":"DELAY"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"XMRT9",
			"index":71,
			"inputs":{
				"itemToAdd":"{{ 3BtDG.outputs.result.fieldTypeMap }}",
				"insertLocation":"END",
				"listName":"{{ _WZkyD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"FN7wb@LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l@y",
			"id":"xS2ce",
			"index":72,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.isHeader }}",
						"value":false
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l",
			"id":"LyLBS",
			"index":73,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"entityId":{
							"type":"string",
							"title":"Entity Id"
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n        Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n        \n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n}\n\n// Method to parse the value based on its type\ndef getParsedValue(String key, String value) {\n    String type = fieldTypeMap[key]\n    if (type == null) {\n        return value\n    }\n    switch (type) {\n        case \"INTEGER\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Integer.parseInt(value)\n        case \"DOUBLE\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Double.parseDouble(value.trim().replace(\",\", \"\"))\n        case \"BOOLEAN\":\n            return value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\") ? Boolean.parseBoolean(value) : null\n        case \"DATE\":\n        case \"STRING\":\n        default:\n            return value\n    }\n}\n\ndef record = [:]\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n  record.put(generator.getSanitizedName(key), getParsedValue(key, value))\n}\ndef input = [\n  \"object_type\": entityId,\n  \"record\": com.unifyapps.infra.utils.JsonUtils.toJSON(record)\n]\n\ndef context = [\n  \"appName\": \"storage_by_unifyapps\",\n  \"resourceName\": \"storage_by_unifyapps_create_record\",\n  \"type\": \"APPLICATION\"\n]\n\nreturn [\n  \"context\" : com.unifyapps.infra.utils.JsonUtils.toJSON(context),\n  \"input\":com.unifyapps.infra.utils.JsonUtils.toJSON(input)\n]\n\n",
				"isAsync":false,
				"parameters":{
					"row":"{{ LPHQe.outputs.item }}",
					"entityId":"{{ _iEQ3V.outputs.entityId }}",
					"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Construct row entity",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_application",
				"resourceVersion":14,
				"resourceName":"custom_application_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l",
			"id":"nz4t8",
			"index":74,
			"inputs":{
				"input":"{{ LyLBS.outputs.result.input }}",
				"context":"{{ LyLBS.outputs.result.context }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Insert new Record",
			"title":"Execute Custom Application Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"LPHQe@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l",
			"id":"n_IVHak",
			"index":75,
			"inputs":{
				"loop":"LPHQe",
				"conditions":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"_5YIb2",
			"index":76,
			"inputs":{
				"code":"return [:]",
				"compile_static":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l",
			"id":"_AB6XG",
			"index":77,
			"inputs":{
				"startFromRow":2,
				"consumptionBehaviour":"string",
				"file":"{{ _GK8TT.outputs.file }}",
				"headerRow":false,
				"sheetName":"{{ sAi0U.outputs.item }}",
				"columns":{
					"ua:type":"mappedArray",
					"source":"{{ GuhnN.outputs.result.columnNames }}",
					"items":"{{ GuhnN.outputs.result.columnNames[0] }}"
				},
				"batch":true,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xls",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_AB6XG@sAi0U@JvugK@whN5E@_DFiQo-1@n@1@l@l",
			"id":"_PSQLf",
			"index":78,
			"inputs":{
				"automationId":"68bc3aec00a55f66efe33ed8",
				"runtimeConnections":{},
				"synchronous":true,
				"distributeWorkflowLoad":false,
				"parametersList":{
					"source":"{{ _AB6XG.outputs.item }}",
					"ua:type":"mappedArray",
					"items":{
						"row":"{{ _AB6XG.outputs.item[0] }}",
						"entityId":"{{ _iEQ3V.outputs.entityId }}",
						"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}"
					}
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":159,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JvugK@whN5E@_DFiQo-1@n@2",
			"id":"JvugK@2",
			"index":79,
			"inputs":{
				"name":"XLSX",
				"conditions":{
					"filters":[
						{
							"property":"{{ FkiBn.outputs.result.mimeType1 }}",
							"filter":{
								"operator":"EQUAL",
								"value":"xlsx"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":341,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JvugK@whN5E@_DFiQo-1@n@2",
			"id":"3S7qD",
			"index":80,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ b1HA6.outputs.result.sheetNames }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":259,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"TjNOI",
			"index":81,
			"inputs":{
				"file":"{{ _GK8TT.outputs.file }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"72Wls",
			"index":82,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						},
						"sheetName":{
							"type":"string",
							"title":"Sheet Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"import requests\nimport pandas as pd\nfrom io import BytesIO\n\nresponse = requests.get(url, verify=False)\nresponse.raise_for_status()\nexcel_content = BytesIO(response.content)\n\n\nresult = {\"columnNames\": []}\ni = 0\nmax_rows_to_check = 100\nfound = False\n\nwhile i < max_rows_to_check:\n    df = pd.read_excel(\n        excel_content,\n        sheet_name=sheetName,\n        header=None,\n        skiprows=i,\n        nrows=1\n    )\n\n    if not df.notna().any().any():\n        i += 1\n        continue \n\n    header = df.iloc[0].astype(str).replace('nan', 'Unnamed Column').tolist()\n\n    seen = {}\n    final_headers = []\n    for col in header:\n        if col in seen:\n            seen[col] += 1\n            final_headers.append(f\"{col}_{seen[col]}\")\n        else:\n            seen[col] = 0\n            final_headers.append(col)\n\n    result = {\"columnNames\": final_headers}\n    found = True\n    break\n\nif not found: \n    result = {\"columnNames\": []}\n\n",
				"isAsync":false,
				"parameters":{
					"url":"{{ TjNOI.outputs.url }}",
					"sheetName":"{{ 3S7qD.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":352,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"AiPir",
			"index":83,
			"inputs":{
				"loop":"3S7qD",
				"conditions":{
					"filters":[
						{
							"property":"{{ 72Wls.outputs.result.columnNames[0] }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"BHgaM",
			"index":84,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.isHeader }}",
						"value":true
					},
					{
						"source":"{{ _iEQ3V.outputs.entityId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":103,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"vdr3R",
			"index":85,
			"inputs":{
				"listName":"{{ _WZkyD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"sqf1x",
			"index":86,
			"inputs":{
				"startFromRow":1,
				"consumptionBehaviour":"string",
				"file":"{{ _GK8TT.outputs.file }}",
				"headerRow":true,
				"sheetName":"{{ 3S7qD.outputs.item }}",
				"columns":{
					"source":"{{ 72Wls.outputs.result.columnNames }}",
					"ua:type":"mappedArray",
					"items":"{{ 72Wls.outputs.result.columnNames[0] }}"
				},
				"batch":false,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xlsx",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l",
			"id":"JT58N",
			"index":87,
			"inputs":{
				"filters":[
					{
						"property":"{{ _iEQ3V.outputs.isHeader }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"header = true",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"PJqvw",
			"index":88,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"fieldMappings":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"fieldName":{
										"type":"string",
										"title":"Field Name"
									},
									"fieldType":{
										"type":"string",
										"title":"Field Type"
									},
									"label":{
										"type":"string",
										"title":"Label"
									}
								},
								"additionalProperties":false
							},
							"title":"Field Mappings",
							"required":[]
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nif (!binding.hasVariable(\"row\")){\n    return null\n}\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def isAsciiLetter(char c){\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')   \n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetter(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n        Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n        \n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n\n}\n\n// detect the fieldType from value\ndef getFieldType(String value){\n    // Check for Boolean\n    if (value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\")) {\n        return \"BOOLEAN\"\n    }\n\n    // Check for Double\n    try {\n        Double.parseDouble(value.trim().replace(\",\", \"\"))\n        return \"DOUBLE\"\n    } catch (NumberFormatException e) {\n        // Not a Double\n    }\n\n    // Check for Date\n    def dateFormats = [\n            \"yyyy-MM-dd\", // ISO format\n            \"MM/dd/yyyy\", // US format\n            \"dd/MM/yyyy\"  // European format\n    ]\n\n    for (String format : dateFormats) {\n        try {\n            new SimpleDateFormat(format).parse(value)\n            //return \"DATE\"\n        } catch (ParseException e) {\n            // Not a Date in this format\n        }\n    }\n\n    // If none of the above, return as String\n    return \"STRING\"\n}\n\ndef fieldTypeMap = [:]\ndef fieldMappings = []\n\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n    def field = [:]\n    field[\"fieldName\"] = generator.getSanitizedName(key)\n    field[\"fieldType\"] = getFieldType(value.toString())\n    field[\"label\"] = key\n    fieldMappings << field\n    fieldTypeMap[key] = getFieldType(value.toString())\n}\n\ndef getSanitizedName(String header) {\n\n    if (header == null || header.isEmpty() || !header?.trim()) {\n        return \"Table_1\"\n    }\n\n    def sb = new StringBuilder()\n    def chars = header.toCharArray()\n\n    chars.eachWithIndex { c, idx ->\n        def k = c.toLowerCase()\n        if (idx == 0) {\n            if (Character.isLetter(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        } else {\n            if (Character.isLetterOrDigit(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        }\n    }\n\n    return sb.toString()\n}\n\n\nreturn [\n        \"fieldMappings\": fieldMappings,\n        \"fieldTypeMap\": fieldTypeMap,\n        \"tableName\": getSanitizedName(tableName)\n]\n\n\n\n",
				"isAsync":false,
				"parameters":{
					"row":"{{ sqf1x.outputs.item }}",
					"tableName":"{{ 3S7qD.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Construct field mappings",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"MICnx",
			"index":89,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ PJqvw.outputs.result.tableName }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":87,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"CbCxM",
			"index":90,
			"inputs":{
				"keys":[
					"{{ PJqvw.outputs.result.tableName }}"
				],
				"lookupType":"ENTITY_TYPE",
				"type":"ByKeys"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"Ancr8",
			"index":91,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"unifiedEntityModelId":{
							"type":"string",
							"title":"Unified Entity Model Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"response":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response"
						},
						"entityType":{
							"type":"string",
							"title":"Entity Type"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"return[\"unifiedEntityModelId\":response?.objects?.get(entityType)?.unifiedEntityModelId]",
				"parameters":{
					"entityType":"{{ PJqvw.outputs.result.tableName }}",
					"response":"{{ CbCxM.outputs.response }}"
				}
			},
			"skip":false,
			"subTitle":"Get Existing UEM ID",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"CCvpS",
			"index":92,
			"inputs":{
				"filters":[
					{
						"property":"{{ Ancr8.outputs.result.unifiedEntityModelId }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"CCvpS@JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y@n",
			"id":"fR7WY",
			"index":93,
			"inputs":{
				"filters":[
					{
						"property":"{{ Ancr8.outputs.result.unifiedEntityModelId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ _iEQ3V.outputs.uemId }}"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":456,
				"resourceName":"loop_while",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fR7WY@CCvpS@JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y@n@y",
			"id":"n_ALrbb",
			"index":94,
			"inputs":{
				"condition":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				},
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"While loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":613,
				"resourceName":"storage_by_unifyapps_delete_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ALrbb@fR7WY@CCvpS@JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y@n@y@l",
			"id":"n_gYcvi",
			"index":95,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"{{ PJqvw.outputs.result.tableName }}",
				"numberOfRecordsToDelete":"MULTIPLE",
				"page":{
					"limit":10000,
					"offset":0
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Delete records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ALrbb@fR7WY@CCvpS@JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y@n@y@l",
			"id":"n_DTS6V",
			"index":96,
			"inputs":{
				"loop":"n_ALrbb",
				"conditions":{
					"filters":[
						{
							"property":"{{ n_gYcvi.outputs.count }}",
							"filter":{
								"operator":"LT",
								"value":"10000"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fR7WY@CCvpS@JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y@n@n",
			"id":"eTwFq",
			"index":97,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"randomString":{
							"type":"string",
							"title":"Random String"
						}
					},
					"additionalProperties":false,
					"required":[
						"randomString"
					]
				},
				"compile_static":false,
				"code":"def generateRandomString() {\n    def chars = ('a'..'z') + ('A'..'Z')\n    def random = new Random()\n    def randomString = (1..5).collect {\n        chars[random.nextInt(chars.size())]\n    }.join()\n    return randomString\n}\n\nreturn [\"randomString\" : generateRandomString()]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fR7WY@CCvpS@JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y@n@n",
			"id":"SQmcl",
			"index":98,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ _iEQ3V.outputs.entityId }}_{{ eTwFq.outputs.result.randomString }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"unified_entity_by_unifyapps",
				"resourceVersion":4,
				"resourceName":"unified_entity_by_unifyapps_create_unified_entity",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"wdQvU",
			"index":99,
			"inputs":{
				"timeSeries":true,
				"storeType":"ANALYTICS_BY_UNIFY_APPS",
				"modelId":"{{ _iEQ3V.outputs.uemId }}",
				"tagIds":[
					"internal"
				],
				"name":"{{ _iEQ3V.outputs.entityId }}",
				"entityId":"{{ _iEQ3V.outputs.entityId }}",
				"fieldMappings":{
					"source":"{{ PJqvw.outputs.result.fieldMappings }}",
					"ua:type":"mappedArray",
					"items":{
						"fieldName":"{{ PJqvw.outputs.result.fieldMappings[0].fieldName }}",
						"fieldType":"{{ PJqvw.outputs.result.fieldMappings[0].fieldType }}",
						"label":"{{ PJqvw.outputs.result.fieldMappings[0].label }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Unified Entity by UnifyApps",
			"title":"Create unified entity",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"delay",
				"resourceVersion":163,
				"resourceName":"delay_for",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"4FbFN",
			"index":100,
			"inputs":{
				"duration":10,
				"unit":"SECONDS"
			},
			"skip":false,
			"subTitle":"Delay",
			"title":"Set delay duration",
			"type":"DELAY"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"yFsUS",
			"index":101,
			"inputs":{
				"itemToAdd":"{{ PJqvw.outputs.result.fieldTypeMap }}",
				"insertLocation":"END",
				"listName":"{{ _WZkyD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JT58N@sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l@y",
			"id":"MyKhr",
			"index":102,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.isHeader }}",
						"value":false
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l",
			"id":"CgB7q",
			"index":103,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"entityId":{
							"type":"string",
							"title":"Entity Id"
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n        Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n\n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n}\n\n// Method to parse the value based on its type\ndef getParsedValue(String key, String value) {\n    String type = fieldTypeMap[key]\n    if (type == null) {\n        return value\n    }\n    switch (type) {\n        case \"INTEGER\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Integer.parseInt(value)\n        case \"DOUBLE\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Double.parseDouble(value.trim().replace(\",\", \"\"))\n        case \"BOOLEAN\":\n            return value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\") ? Boolean.parseBoolean(value) : null\n        case \"DATE\":\n        case \"STRING\":\n        default:\n            return value\n    }\n}\n\ndef record = [:]\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n  record.put(generator.getSanitizedName(key), getParsedValue(key, value.toString()))\n}\ndef input = [\n  \"object_type\": entityId,\n  \"record\": com.unifyapps.infra.utils.JsonUtils.toJSON(record)\n]\n\ndef context = [\n  \"appName\": \"storage_by_unifyapps\",\n  \"resourceName\": \"storage_by_unifyapps_create_record\",\n  \"type\": \"APPLICATION\"\n]\n\nreturn [\n  \"context\" : com.unifyapps.infra.utils.JsonUtils.toJSON(context),\n  \"input\":com.unifyapps.infra.utils.JsonUtils.toJSON(input)\n]\n\n",
				"isAsync":false,
				"parameters":{
					"row":"{{ sqf1x.outputs.item }}",
					"entityId":"{{ _iEQ3V.outputs.entityId }}",
					"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Construct row entity",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_application",
				"resourceVersion":14,
				"resourceName":"custom_application_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l",
			"id":"NDbPI",
			"index":104,
			"inputs":{
				"input":"{{ CgB7q.outputs.result.input }}",
				"context":"{{ CgB7q.outputs.result.context }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Insert new Record",
			"title":"Execute Custom Application Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sqf1x@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l",
			"id":"n_OZ21a",
			"index":105,
			"inputs":{
				"loop":"sqf1x",
				"conditions":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"n_BKFIa",
			"index":106,
			"inputs":{
				"code":"return [:]",
				"compile_static":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l",
			"id":"_PEgle",
			"index":107,
			"inputs":{
				"startFromRow":2,
				"consumptionBehaviour":"string",
				"file":"{{ _GK8TT.outputs.file }}",
				"headerRow":false,
				"sheetName":"{{ 3S7qD.outputs.item }}",
				"columns":{
					"source":"{{ 72Wls.outputs.result.columnNames }}",
					"ua:type":"mappedArray",
					"items":"{{ 72Wls.outputs.result.columnNames[0] }}"
				},
				"batch":true,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xlsx",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PEgle@3S7qD@JvugK@whN5E@_DFiQo-1@n@2@l@l",
			"id":"_Yh4kH",
			"index":108,
			"inputs":{
				"automationId":"68bc3aec00a55f66efe33ed8",
				"runtimeConnections":{},
				"synchronous":true,
				"distributeWorkflowLoad":false,
				"parametersList":{
					"source":"{{ _PEgle.outputs.item }}",
					"ua:type":"mappedArray",
					"items":{
						"row":"{{ _PEgle.outputs.item[0] }}",
						"entityId":"{{ _iEQ3V.outputs.entityId }}",
						"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}"
					}
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":159,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JvugK@whN5E@_DFiQo-1@n@3",
			"id":"JvugK@3",
			"index":109,
			"inputs":{
				"name":"XLSB",
				"conditions":{
					"filters":[
						{
							"property":"{{ FkiBn.outputs.result.mimeType1 }}",
							"filter":{
								"operator":"EQUAL",
								"value":"xlsb"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":341,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JvugK@whN5E@_DFiQo-1@n@3",
			"id":"R3zQh",
			"index":110,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ b1HA6.outputs.result.sheetNames }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":259,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"jIz4V",
			"index":111,
			"inputs":{
				"file":"{{ _GK8TT.outputs.file }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"AaFsu",
			"index":112,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						},
						"sheetName":{
							"type":"string",
							"title":"Sheet Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"import requests\nimport pandas as pd\nfrom io import BytesIO\n\nresponse = requests.get(url, verify=False)\nresponse.raise_for_status()\nexcel_content = BytesIO(response.content)\n\n\nresult = {\"columnNames\": []}\ni = 0\nmax_rows_to_check = 100\nfound = False\n\nwhile i < max_rows_to_check:\n    df = pd.read_excel(\n        excel_content,\n        sheet_name=sheetName,\n        header=None,\n        skiprows=i,\n        nrows=1\n    )\n\n    if not df.notna().any().any():\n        i += 1\n        continue \n\n    header = df.iloc[0].astype(str).replace('nan', 'Unnamed Column').tolist()\n\n    seen = {}\n    final_headers = []\n    for col in header:\n        if col in seen:\n            seen[col] += 1\n            final_headers.append(f\"{col}_{seen[col]}\")\n        else:\n            seen[col] = 0\n            final_headers.append(col)\n\n    result = {\"columnNames\": final_headers}\n    found = True\n    break\n\nif not found: \n    result = {\"columnNames\": []}\n\n",
				"isAsync":false,
				"parameters":{
					"url":"{{ jIz4V.outputs.url }}",
					"sheetName":"{{ R3zQh.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":352,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"PoOdD",
			"index":113,
			"inputs":{
				"loop":"R3zQh",
				"conditions":{
					"filters":[
						{
							"property":"{{ AaFsu.outputs.result.columnNames[0] }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"GoVkI",
			"index":114,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.isHeader }}",
						"value":true
					},
					{
						"source":"{{ _iEQ3V.outputs.entityId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":103,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"DXsQ2",
			"index":115,
			"inputs":{
				"listName":"{{ _WZkyD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"PEqLt",
			"index":116,
			"inputs":{
				"startFromRow":1,
				"consumptionBehaviour":"string",
				"file":"{{ _GK8TT.outputs.file }}",
				"headerRow":true,
				"sheetName":"{{ R3zQh.outputs.item }}",
				"columns":{
					"source":"{{ AaFsu.outputs.result.columnNames }}",
					"ua:type":"mappedArray",
					"items":"{{ AaFsu.outputs.result.columnNames[0] }}"
				},
				"batch":false,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xlsb",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l",
			"id":"KihYi",
			"index":117,
			"inputs":{
				"filters":[
					{
						"property":"{{ _iEQ3V.outputs.isHeader }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"header = true",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"BaekE",
			"index":118,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"fieldMappings":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"fieldName":{
										"type":"string",
										"title":"Field Name"
									},
									"fieldType":{
										"type":"string",
										"title":"Field Type"
									},
									"label":{
										"type":"string",
										"title":"Label"
									}
								},
								"additionalProperties":false
							},
							"title":"Field Mappings",
							"required":[]
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"tableName":{
							"type":"string",
							"title":"Table Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nif (!binding.hasVariable(\"row\")){\n    return null\n}\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def isAsciiLetter(char c){\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')   \n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetter(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n        Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n\n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n\n}\n\n// detect the fieldType from value\ndef getFieldType(String value){\n    // Check for Boolean\n    if (value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\")) {\n        return \"BOOLEAN\"\n    }\n\n    // Check for Double\n    try {\n        Double.parseDouble(value.trim().replace(\",\", \"\"))\n        return \"DOUBLE\"\n    } catch (NumberFormatException e) {\n        // Not a Double\n    }\n\n    // Check for Date\n    def dateFormats = [\n            \"yyyy-MM-dd\", // ISO format\n            \"MM/dd/yyyy\", // US format\n            \"dd/MM/yyyy\"  // European format\n    ]\n\n    for (String format : dateFormats) {\n        try {\n            new SimpleDateFormat(format).parse(value)\n            //return \"DATE\"\n        } catch (ParseException e) {\n            // Not a Date in this format\n        }\n    }\n\n    // If none of the above, return as String\n    return \"STRING\"\n}\n\ndef fieldTypeMap = [:]\ndef fieldMappings = []\n\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n    def field = [:]\n    field[\"fieldName\"] = generator.getSanitizedName(key)\n    field[\"fieldType\"] = getFieldType(value)\n    field[\"label\"] = key\n    fieldMappings << field\n    fieldTypeMap[key] = getFieldType(value)\n}\n\ndef getSanitizedName(String header) {\n\n    if (header == null || header.isEmpty() || !header?.trim()) {\n        return \"Table_1\"\n    }\n\n    def sb = new StringBuilder()\n    def chars = header.toCharArray()\n\n    chars.eachWithIndex { c, idx ->\n        def k = c.toLowerCase()\n        if (idx == 0) {\n            if (Character.isLetter(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        } else {\n            if (Character.isLetterOrDigit(c)) {\n                sb.append(k)\n            } else {\n                sb.append(\"_\")\n            }\n        }\n    }\n\n    return sb.toString()\n}\n\n\nreturn [\n        \"fieldMappings\": fieldMappings,\n        \"fieldTypeMap\": fieldTypeMap,\n        \"tableName\": getSanitizedName(tableName)\n]\n\n\n\n",
				"isAsync":false,
				"parameters":{
					"row":"{{ PEqLt.outputs.item }}",
					"tableName":"{{ R3zQh.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Construct field mappings",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"aRTsH",
			"index":119,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ BaekE.outputs.result.tableName }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":87,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"_GhrFj",
			"index":120,
			"inputs":{
				"keys":[
					"{{ BaekE.outputs.result.tableName }}"
				],
				"lookupType":"ENTITY_TYPE",
				"type":"ByKeys"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"_0MSEz",
			"index":121,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"unifiedEntityModelId":{
							"type":"string",
							"title":"Unified Entity Model Id"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"response":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response"
						},
						"entityType":{
							"type":"string",
							"title":"Entity Type"
						}
					}
				},
				"code":"return[\"unifiedEntityModelId\":response?.objects?.get(entityType)?.unifiedEntityModelId]",
				"compile_static":false,
				"parameters":{
					"response":"{{ _GhrFj.outputs.response }}",
					"entityType":"{{ BaekE.outputs.result.tableName }}"
				}
			},
			"skip":false,
			"subTitle":"Get Existing UEM ID",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"sn0Tt",
			"index":122,
			"inputs":{
				"filters":[
					{
						"property":"{{ _0MSEz.outputs.result.unifiedEntityModelId }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sn0Tt@KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y@n",
			"id":"fTn1s",
			"index":123,
			"inputs":{
				"filters":[
					{
						"property":"{{ _iEQ3V.outputs.uemId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ _0MSEz.outputs.result.unifiedEntityModelId }}"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":456,
				"resourceName":"loop_while",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fTn1s@sn0Tt@KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y@n@y",
			"id":"_ISwXX",
			"index":124,
			"inputs":{
				"condition":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				},
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"While loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":613,
				"resourceName":"storage_by_unifyapps_delete_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISwXX@fTn1s@sn0Tt@KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y@n@y@l",
			"id":"_lrpjz",
			"index":125,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"{{ BaekE.outputs.result.tableName }}",
				"numberOfRecordsToDelete":"MULTIPLE",
				"page":{
					"limit":10000,
					"offset":0
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Delete records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISwXX@fTn1s@sn0Tt@KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y@n@y@l",
			"id":"_gYSvX",
			"index":126,
			"inputs":{
				"loop":"_ISwXX",
				"conditions":{
					"filters":[
						{
							"property":"{{ _lrpjz.outputs.count }}",
							"filter":{
								"operator":"LT",
								"value":"10000"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fTn1s@sn0Tt@KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y@n@n",
			"id":"iU3kG",
			"index":127,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"randomString":{
							"type":"string",
							"title":"Random String"
						}
					},
					"additionalProperties":false,
					"required":[
						"randomString"
					]
				},
				"compile_static":false,
				"code":"def generateRandomString() {\n    def chars = ('a'..'z') + ('A'..'Z')\n    def random = new Random()\n    def randomString = (1..5).collect {\n        chars[random.nextInt(chars.size())]\n    }.join()\n    return randomString\n}\n\nreturn [\"randomString\" : generateRandomString()]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fTn1s@sn0Tt@KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y@n@n",
			"id":"FKe6i",
			"index":128,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.entityId }}",
						"value":"{{ _iEQ3V.outputs.entityId }}_{{ iU3kG.outputs.result.randomString }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"unified_entity_by_unifyapps",
				"resourceVersion":4,
				"resourceName":"unified_entity_by_unifyapps_create_unified_entity",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"aThMX",
			"index":129,
			"inputs":{
				"timeSeries":true,
				"storeType":"ANALYTICS_BY_UNIFY_APPS",
				"modelId":"{{ _iEQ3V.outputs.uemId }}",
				"tagIds":[
					"internal"
				],
				"name":"{{ _iEQ3V.outputs.entityId }}",
				"entityId":"{{ _iEQ3V.outputs.entityId }}",
				"fieldMappings":{
					"source":"{{ BaekE.outputs.result.fieldMappings }}",
					"ua:type":"mappedArray",
					"items":{
						"fieldName":"{{ BaekE.outputs.result.fieldMappings[0].fieldName }}",
						"fieldType":"{{ BaekE.outputs.result.fieldMappings[0].fieldType }}",
						"label":"{{ BaekE.outputs.result.fieldMappings[0].label }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Unified Entity by UnifyApps",
			"title":"Create unified entity",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"delay",
				"resourceVersion":11,
				"resourceName":"delay_for",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"71RxD",
			"index":130,
			"inputs":{
				"duration":10,
				"unit":"SECONDS"
			},
			"skip":false,
			"subTitle":"Delay",
			"title":"Set delay duration",
			"type":"DELAY"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"7e0iQ",
			"index":131,
			"inputs":{
				"itemToAdd":"{{ BaekE.outputs.result.fieldTypeMap }}",
				"insertLocation":"END",
				"listName":"{{ _WZkyD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"KihYi@PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l@y",
			"id":"z18tj",
			"index":132,
			"inputs":{
				"variables":[
					{
						"source":"{{ _iEQ3V.outputs.isHeader }}",
						"value":false
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l",
			"id":"Bsdze",
			"index":133,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"row":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Row"
						},
						"entityId":{
							"type":"string",
							"title":"Entity Id"
						},
						"fieldTypeMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Field Type Map"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.text.ParseException\n\nclass ColumnNameGenerator {\n    def columnCounter = 0\n\n    def isAsciiLetterOrDigit(char c) {\n        (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')\n    }\n\n    def getSanitizedName(String header) {\n        if (header == null || header.trim().isEmpty()) {\n            String columnName = \"Column_\" + columnCounter\n            columnCounter++\n            return columnName\n        }\n\n        def sb = new StringBuilder()\n        header.toCharArray().eachWithIndex { c, idx ->\n            def k = c.toLowerCase()\n            if (idx == 0) {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            } else {\n                sb.append(isAsciiLetterOrDigit(c) ? k : \"_\")\n            }\n        }\n        return sanitizeReservedKeywords(sb.toString())\n    }\n\n    def sanitizeReservedKeywords(String fieldName) {\n        Set<String> keywords = [\"ADD\",\"ALL\",\"ALTER\",\"ANALYZE\",\"AND\",\"ARRAY\",\"AS\",\"ASC\",\"BETWEEN\",\"BIGINT\",\"BITMAP\",\"BOTH\",\"BY\",\"CASE\",\"CHAR\",\"CHARACTER\",\"CHECK\",\"COLLATE\",\"COLUMN\",\"COMPACTION\",\"CONVERT\",\"CREATE\",\"CROSS\",\"CUBE\",\"CURRENT_DATE\",\"CURRENT_ROLE\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_USER\",\"DATABASE\",\"DATABASES\",\"DECIMAL\",\"DECIMAL128\",\"DECIMAL32\",\"DECIMAL64\",\"DECIMALV2\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DESC\",\"DESCRIBE\",\"DISTINCT\",\"DOUBLE\",\"DROP\",\"DUAL\",\"DEFERRED\",\"ELSE\",\"EXCEPT\",\"EXISTS\",\"EXPLAIN\",\"FALSE\",\"FIRST_VALUE\",\"FLOAT\",\"FOR\",\"FORCE\",\"FROM\",\"FULL\",\"FUNCTION\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPING_ID\",\"HAVING\",\"HLL\",\"HOST\",\"IF\",\"IGNORE\",\"IMMEDIATE\",\"IN\",\"INDEX\",\"INFILE\",\"INNER\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTO\",\"IS\",\"JOIN\",\"JSON\",\"KEY\",\"KEYS\",\"KILL\",\"LAG\",\"LARGEINT\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEFT\",\"LIKE\",\"LIMIT\",\"LOAD\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"MAXVALUE\",\"MINUS\",\"MOD\",\"NOT\",\"NULL\",\"ON\",\"OR\",\"ORDER\",\"OUTER\",\"OUTFILE\",\"OVER\",\"PARTITION\",\"PERCENTILE\",\"PRIMARY\",\"PROCEDURE\",\"QUALIFY\",\"RANGE\",\"RANK\",\"READ\",\"REGEXP\",\"RELEASE\",\"RENAME\",\"REPLACE\",\"REVOKE\",\"RIGHT\",\"RLIKE\",\"ROW\",\"ROW_NUMBER\",\"ROWS\",\"SCHEMA\",\"SCHEMAS\",\"SELECT\",\"SET\",\"SET_VAR\",\"SHOW\",\"SMALLINT\",\"SYSTEM\",\"TABLE\",\"TERMINATED\",\"TEXT\",\"THEN\",\"TINYINT\",\"TO\",\"TRUE\",\"UNION\",\"UNIQUE\",\"UNSIGNED\",\"UPDATE\",\"USE\",\"USING\",\"VALUES\",\"VARCHAR\",\"WHEN\",\"WHERE\",\"WITH\",\"MONTH\",\"ABS\", \"ADD\", \"ALL\", \"ALTER\", \"AND\", \"ANY\", \"AS\", \"ASC\",\n        \"AVG\",\"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BOOLEAN\", \"BY\",\"CASE\", \"CAST\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASSIFIER\", \"COALESCE\",\"COLLATE\", \"COLUMN\", \"CONSTRAINT\", \"CONVERT\", \"COUNT\", \"CREATE\",\"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\",\"CURRENT_USER\", \"DATE\", \"DATETIME\", \"DECIMAL\", \"DEFAULT\", \"DELETE\",\"DESC\", \"DISTINCT\", \"DOUBLE\", \"ELSE\", \"END\", \"EXISTS\", \"EXTRACT\",\"FALSE\", \"FETCH\", \"FIRST_VALUE\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\", \"FOR\",\"FROM\", \"FULL\", \"FUNCTION\", \"GROUP\", \"GROUPING\", \"HAVING\", \"IF\", \"IN\",\"INNER\", \"INSERT\", \"INT\", \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\",\"IS\", \"JOIN\", \"JSON\", \"JSON_ARRAY\", \"JSON_OBJECT\", \"KEY\", \"LAG\",\"LAST_VALUE\", \"LEAD\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MAX\", \"MERGE\", \"MIN\",\"MINUTE\", \"MOD\", \"MONTH\", \"NATIONAL\", \"NATURAL\", \"NEXT\", \"NOT\", \"NULL\",\"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\",\"OVER\", \"PARTITION\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"POSITION\",\"POWER\", \"PRECEDING\", \"PRIMARY\", \"RANGE\", \"RANK\", \"RECURSIVE\", \"RIGHT\",\"ROLLUP\", \"ROW\", \"ROW_NUMBER\", \"ROWS\", \"SAVEPOINT\", \"SELECT\",\"SESSION_USER\", \"SET\", \"SOME\", \"SPECIFIC\", \"STDDEV_POP\", \"STDDEV_SAMP\",\"SUM\", \"SYSTEM_USER\", \"TABLE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TO\",\"TRUE\", \"TRUNCATE\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UPDATE\", \"USER\",\"USING\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARCHAR\", \"WHEN\", \"WHERE\",\"WITH\", \"WINDOW\", \"YEAR\" ]\n\n        if(keywords.contains(fieldName.toUpperCase())) {\n            return  \"_ua_\" + fieldName\n        }\n        return fieldName;\n    }\n\n}\n\n// Method to parse the value based on its type\ndef getParsedValue(String key, String value) {\n    String type = fieldTypeMap[key]\n    if (type == null) {\n        return value\n    }\n    switch (type) {\n        case \"INTEGER\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Integer.parseInt(value)\n        case \"DOUBLE\":\n            if(value.trim().isEmpty())\n            {\n                return null\n            }\n            return Double.parseDouble(value.trim().replace(\",\", \"\"))\n        case \"BOOLEAN\":\n            return value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\") ? Boolean.parseBoolean(value) : null\n        case \"DATE\":\n        case \"STRING\":\n        default:\n            return value\n    }\n}\n\ndef record = [:]\ndef generator = new ColumnNameGenerator()\n\nrow.each {key,value ->\n  record.put(generator.getSanitizedName(key), getParsedValue(key, value))\n}\ndef input = [\n  \"object_type\": entityId,\n  \"record\": com.unifyapps.infra.utils.JsonUtils.toJSON(record)\n]\n\ndef context = [\n  \"appName\": \"storage_by_unifyapps\",\n  \"resourceName\": \"storage_by_unifyapps_create_record\",\n  \"type\": \"APPLICATION\"\n]\n\nreturn [\n  \"context\" : com.unifyapps.infra.utils.JsonUtils.toJSON(context),\n  \"input\":com.unifyapps.infra.utils.JsonUtils.toJSON(input)\n]\n\n",
				"isAsync":false,
				"parameters":{
					"row":"{{ PEqLt.outputs.item }}",
					"entityId":"{{ _iEQ3V.outputs.entityId }}",
					"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Construct row entity",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_application",
				"resourceVersion":14,
				"resourceName":"custom_application_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l",
			"id":"sFiJY",
			"index":134,
			"inputs":{
				"input":"{{ Bsdze.outputs.result.input }}",
				"context":"{{ Bsdze.outputs.result.context }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE"
			},
			"skip":false,
			"subTitle":"Insert new Record",
			"title":"Execute Custom Application Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":456,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PEqLt@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l",
			"id":"n_1ssj5",
			"index":135,
			"inputs":{
				"loop":"PEqLt",
				"conditions":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"_FSEKu",
			"index":136,
			"inputs":{
				"code":"return [:]",
				"compile_static":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l",
			"id":"_8MnmF",
			"index":137,
			"inputs":{
				"startFromRow":2,
				"consumptionBehaviour":"string",
				"file":"{{ _GK8TT.outputs.file }}",
				"headerRow":false,
				"sheetName":"{{ R3zQh.outputs.item }}",
				"columns":{
					"ua:type":"mappedArray",
					"source":"{{ AaFsu.outputs.result.columnNames }}",
					"items":"{{ AaFsu.outputs.result.columnNames[0] }}"
				},
				"batch":true,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xlsb",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_8MnmF@R3zQh@JvugK@whN5E@_DFiQo-1@n@3@l@l",
			"id":"_SS9Cs",
			"index":138,
			"inputs":{
				"automationId":"68bc3aec00a55f66efe33ed8",
				"runtimeConnections":{},
				"synchronous":true,
				"distributeWorkflowLoad":false,
				"parametersList":{
					"source":"{{ _8MnmF.outputs.item }}",
					"ua:type":"mappedArray",
					"items":{
						"row":"{{ _8MnmF.outputs.item[0] }}",
						"entityId":"{{ _iEQ3V.outputs.entityId }}",
						"fieldTypeMap":"{{ _WZkyD.outputs.items[0] }}"
					}
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"JvugK@whN5E@_DFiQo-1@n@default",
			"id":"n_yZeaL",
			"index":139,
			"inputs":{
				"result":{
					"response":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":153,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_JijkW",
			"index":140,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"uemId":{
							"type":"string",
							"title":"Uem Id"
						},
						"file":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def myMap = ['modelId': uemId,\n             'tableNameUI': binding.hasVariable('file') ? file?.name :\"\"\n]\n\nreturn[\n  'inputs' : myMap\n]",
				"parameters":{
					"uemId":"{{ _iEQ3V.outputs.uemId }}",
					"file":"{{ _GK8TT.outputs.file }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":67,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_c0LUs",
			"index":141,
			"inputs":{
				"automationId":"6728981f0867543185a44460",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"knowledgeId":"{{ _GK8TT.outputs.knowledgeId }}",
					"inputs":"{{ _JijkW.outputs.result.inputs }}"
				}
			},
			"skip":false,
			"subTitle":"Index to Metadata Store",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":65,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DFiQo-1",
			"id":"_R83tM",
			"index":142,
			"inputs":{
				"result":{
					"response":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":520,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":170
}