{
	"appsUsed":[
		
	],
	"createdTime":1726374931445,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243659416,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed8b5e003e08cdeb311d",
		"status":"DEPLOYED",
		"version":73,
		"workflowVersion":113
	},
	"edges":[
		{
			"fromNodeId":"4aY8o",
			"priority":0,
			"skip":false,
			"toNodeId":"LQTfr",
			"type":"next"
		},
		{
			"fromNodeId":"LQTfr",
			"priority":0,
			"skip":false,
			"toNodeId":"50jmT",
			"type":"next"
		},
		{
			"fromNodeId":"50jmT",
			"priority":0,
			"skip":false,
			"toNodeId":"sMdDO",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"66e66413824afd000487e21b",
	"lastModifiedBy":-1,
	"lcName":"observability | analytics metrics",
	"modifiedTime":1759371976977,
	"name":"Observability | Analytics Metrics",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":52,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fenGp-1",
			"id":"4aY8o",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"totalSessions":{
							"type":"integer",
							"title":"Total Sessions"
						},
						"avgTokenUsed":{
							"type":"string",
							"title":"Avg Token Used"
						},
						"avgSessionDuration":{
							"type":"string",
							"title":"Avg Session Duration"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"agentId":{
							"type":"string",
							"title":"Agent Id"
						},
						"startTime":{
							"type":"string",
							"title":"Start Time"
						},
						"endTime":{
							"type":"string",
							"title":"End Time"
						},
						"limit":{
							"type":"integer",
							"title":"Limit"
						},
						"offset":{
							"type":"integer",
							"title":"Offset"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger from automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fenGp-1",
			"id":"LQTfr",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sqlQuery":{
							"type":"string",
							"title":"sqlQuery"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"agentId":{
							"type":"string",
							"title":"Agent Id"
						},
						"limit":{
							"type":"integer",
							"title":"Limit"
						},
						"offset":{
							"type":"string",
							"title":"Offset"
						},
						"timestampStart":{
							"type":"string",
							"title":"Timestamp Start"
						},
						"timestampEnd":{
							"type":"string",
							"title":"Timestamp End"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.util.TimeZone\nimport java.util.Date\n\ndef generateQuery(aiAgentId, startTime, endTime, timestampStart, timestampEnd, limit, offset) {\n    return \"SELECT *, AVG(TotalTokensUsed) OVER() AS AvgTokens, AVG(SessionDuration) OVER() As AvgSessionDuration FROM (SELECT sessionId AS SessionID, SUM(tokenUsed) AS TotalTokensUsed, MIN(startTime) AS StartTime, MAX(endTime) AS EndTime, (MAX(endTime) - MIN(startTime)) AS SessionDuration, COUNT(*) OVER() AS TotalSessions FROM (SELECT wv.id AS Id, we.startTime AS StartTime, we.endTime AS EndTime, CAST(wv.payload -> 'payload.tokensUsed' AS int) AS TokenUsed, caseId AS SessionID FROM WORKFLOW_NODE_EXECUTION wne JOIN WORKFLOW_VARIABLE wv ON wv.id = (CASE WHEN wne.rootExecutionInstanceId IS NULL THEN CONCAT_WS('/', wne.executionInstanceId, wne.executionInstanceId, wne.currentNodeId, 'outputs') ELSE CONCAT_WS('/', wne.rootExecutionInstanceId, wne.executionInstanceId, wne.currentNodeId, 'outputs') END) JOIN WORKFLOW_EXECUTION we ON (wne.executionInstanceId = we.id OR wne.rootExecutionInstanceId = we.rootExecutionInstanceId OR wne.parentExecutionInstanceId = we.id OR wne.rootExecutionInstanceId = we.id) WHERE aiAgentId = '\" + aiAgentId + \"' AND caseId IS NOT NULL AND wne.entryTime BETWEEN \" + startTime + \" AND \" + endTime + \" AND we.startTime BETWEEN \" + startTime + \" AND \" + endTime + \" AND we.workflowId in ('66ac70650f725f5b425d12d8', '66966960e8797a59f4a46292') AND wne.workflowId in ('66ac70650f725f5b425d12d8', '66966960e8797a59f4a46292') AND currentNodeId in ('27dr9', 'vBzOH')) AS AB WHERE SessionID IS NOT NULL GROUP BY SessionID) AS T ORDER BY StartTime DESC LIMIT \" + offset + \", \" + limit + \";\"\n}\n\ndef getEpoch(timestamp) {\n    def format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSX\")\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"))\n    return format.parse(timestamp).getTime()\n}\n\ndef startTime = getEpoch(timestampStart)\ndef endTime = getEpoch(timestampEnd)\n\ndef sqlQuery = generateQuery(agentId, startTime, endTime, timestampStart, timestampEnd, limit, offset)\nreturn [sqlQuery: sqlQuery]",
				"isAsync":false,
				"parameters":{
					"agentId":"{{ 4aY8o.outputs.agentId }}",
					"limit":"{{ 4aY8o.outputs.limit }}",
					"offset":"{{ 4aY8o.outputs.offset }}",
					"timestampStart":"{{ 4aY8o.outputs.startTime }}",
					"timestampEnd":"{{ 4aY8o.outputs.endTime }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":18,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fenGp-1",
			"id":"50jmT",
			"index":0,
			"inputs":{
				"outputSchema":{
					"type":"object",
					"properties":{
						"columns":{
							"type":"object",
							"properties":{
								"SessionDuration":{
									"type":"integer",
									"title":"SessionDuration"
								},
								"TotalSessions":{
									"type":"integer",
									"title":"TotalSessions"
								},
								"EndTime":{
									"type":"integer",
									"title":"EndTime"
								},
								"TotalTokensUsed":{
									"type":"integer",
									"title":"TotalTokensUsed"
								},
								"AvgSessionDuration":{
									"type":"number",
									"title":"AvgSessionDuration"
								},
								"StartTime":{
									"type":"integer",
									"title":"StartTime"
								},
								"SessionID":{
									"type":"string",
									"title":"SessionID"
								},
								"AvgTokens":{
									"type":"integer",
									"title":"AvgTokens"
								}
							},
							"title":"columns",
							"additionalProperties":false
						}
					},
					"additionalProperties":false
				},
				"query":"{{ LQTfr.outputs.result.sqlQuery }}",
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Analytics by UnifyApps",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":48,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"fenGp-1",
			"id":"sMdDO",
			"index":0,
			"inputs":{
				"result":{
					"sessions":{
						"ua:type":"mappedArray",
						"items":{
							"customerName":"{{ y0Cab.outputs.result.sessions[0].customerProfileName }}",
							"tokenUsed":"{{ y0Cab.outputs.result.sessions[0].totalTokensUsed }}",
							"sessionTime":"{{ y0Cab.outputs.result.sessions[0].sessionDuration }}",
							"startTime":"{{ y0Cab.outputs.result.sessions[0].startTime }}",
							"lastResponseTime":"{{ y0Cab.outputs.result.sessions[0].endTime }}",
							"sessionId":"{{ y0Cab.outputs.result.sessions[0].sessionID }}",
							"customerProfileId":"{{ y0Cab.outputs.result.sessions[0].customerProfileId }}"
						},
						"source":"{{ y0Cab.outputs.result.sessions }}"
					},
					"totalSessions":"{{ 50jmT.outputs.objects[0].columns.TotalSessions }}",
					"avgTokenUsed":"{{ 50jmT.outputs.objects[0].columns.AvgTokens }}",
					"avgSessionDuration":"{{ 50jmT.outputs.objects[0].columns.AvgSessionDuration }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":520,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":114
}