{
	"appsUsed":[
		
	],
	"createdTime":1743778360461,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243607240,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed575e003e08cdeb3020",
		"status":"DEPLOYED",
		"version":54,
		"workflowVersion":84
	},
	"edges":[
		{
			"fromNodeId":"RA2Aq",
			"priority":0,
			"skip":false,
			"toNodeId":"Fbmt9",
			"type":"next"
		},
		{
			"fromNodeId":"Fbmt9",
			"priority":0,
			"skip":false,
			"toNodeId":"XnTTX",
			"type":"next"
		},
		{
			"fromNodeId":"XnTTX",
			"priority":0,
			"skip":false,
			"toNodeId":"HPXQR",
			"type":"next"
		},
		{
			"fromNodeId":"HPXQR",
			"priority":0,
			"skip":false,
			"toNodeId":"OVF7r",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"67e72e651506404d8d5e33c3",
	"lastModifiedBy":-1,
	"lcName":"create mistral models payload",
	"modifiedTime":1759371925152,
	"name":"Create Mistral Models Payload",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":158,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"NmnYY-1",
			"id":"RA2Aq",
			"index":0,
			"inputs":{
				"result":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"payload":{
							"type":"object",
							"title":"payload"
						}
					}
				},
				"callableInterfaceId":"67e72b531506404d8d5e331f",
				"setup":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"top_p":{
							"type":"integer",
							"title":"top_p"
						},
						"response_format":{
							"type":"object",
							"properties":{
								"type":{
									"type":"string",
									"title":"type"
								}
							},
							"title":"response_format",
							"additionalProperties":false
						},
						"frequency_penalty":{
							"type":"integer",
							"title":"frequency_penalty"
						},
						"request_timeout":{
							"type":"integer",
							"title":"request_timeout"
						},
						"provider":{
							"type":"string",
							"title":"provider"
						},
						"max_tokens":{
							"type":"integer",
							"title":"max_tokens"
						},
						"presence_penalty":{
							"type":"integer",
							"title":"presence_penalty"
						},
						"temperature":{
							"type":"integer",
							"title":"temperature"
						},
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role",
										"default":"user"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"text":{
													"type":"string",
													"title":"text"
												},
												"type":{
													"type":"string",
													"title":"type",
													"default":"text"
												},
												"image_url":{
													"type":"object",
													"properties":{
														"url":{
															"type":"string",
															"title":"url"
														},
														"detail":{
															"type":"string",
															"title":"detail"
														}
													},
													"additionalProperties":false,
													"title":"image_url",
													"required":[]
												},
												"source":{
													"type":"object",
													"properties":{
														"image_type":{
															"type":"string",
															"title":"image_type"
														},
														"media_type":{
															"type":"string",
															"title":"media_type"
														},
														"image_data":{
															"type":"string",
															"title":"image_data"
														},
														"detail":{
															"type":"string",
															"title":"detail"
														}
													},
													"additionalProperties":false,
													"title":"Source",
													"required":[]
												},
												"tool_use_id":{
													"type":"string",
													"title":"tool_use_id"
												},
												"content":{
													"type":"string",
													"title":"content"
												},
												"name":{
													"type":"string",
													"title":"name"
												},
												"input":{
													"type":"object",
													"properties":{},
													"additionalProperties":false,
													"title":"input"
												},
												"id":{
													"type":"string",
													"title":"id"
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"content",
										"required":[]
									}
								},
								"additionalProperties":false
							},
							"title":"messages",
							"required":[]
						},
						"model":{
							"type":"string",
							"title":"model"
						},
						"logprobs":{
							"type":"boolean",
							"title":"logprobs"
						},
						"on_error_config":{
							"type":"object",
							"properties":{
								"error_msg":{
									"type":"string",
									"title":"error_msg"
								}
							},
							"additionalProperties":false,
							"title":"on_error_config",
							"required":[]
						},
						"retry_config":{
							"type":"object",
							"properties":{
								"initial_delay":{
									"type":"integer",
									"title":"initial_delay"
								},
								"num_retry":{
									"type":"integer",
									"title":"num_retry"
								},
								"max_delay":{
									"type":"integer",
									"title":"max_delay"
								},
								"backoff_factor":{
									"type":"integer",
									"title":"backoff_factor"
								}
							},
							"additionalProperties":false,
							"title":"retry_config",
							"required":[]
						},
						"top_k":{
							"type":"integer",
							"title":"top_k"
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"Type"
									},
									"function":{
										"type":"object",
										"properties":{
											"name":{
												"type":"string",
												"title":"Name"
											},
											"description":{
												"type":"string",
												"title":"Description"
											},
											"parameters":{
												"type":"object",
												"properties":{},
												"additionalProperties":false,
												"title":"Parameters"
											}
										},
										"additionalProperties":false,
										"title":"Function",
										"required":[]
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Tools"
						},
						"systemPrompt":{
							"type":"string",
							"title":"System Prompt"
						},
						"sessionId":{
							"type":"string",
							"title":"Session Id"
						},
						"modelId":{
							"type":"string",
							"title":"Model ID"
						},
						"stream":{
							"type":"boolean",
							"title":"stream"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.messages.source",
					"root.parameters.messages.ua:type",
					"root.parameters.messages.items.role",
					"root.parameters.messages.items.content.source",
					"root.parameters.messages.items.content.ua:type",
					"root.parameters.messages.items.content.items.type",
					"root.parameters.messages.items.content.items.text",
					"root.parameters.messages.items.content.items.image_url.url",
					"root.parameters.messages.items.content.items.image_url.detail",
					"root.parameters.messages.items.content.items.source.image_type",
					"root.parameters.messages.items.content.items.source.media_type",
					"root.parameters.messages.items.content.items.source.image_data",
					"root.parameters.messages.items.content.items.source.detail",
					"root.parameters.messages.items.content.items.tool_use_id",
					"root.parameters.messages.items.content.items.content",
					"root.parameters.messages.items.content.items.name",
					"root.parameters.messages.items.content.items.id",
					"root.parameters.systemPrompt",
					"root.parameters.model"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":166,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"NmnYY-1",
			"id":"Fbmt9",
			"index":0,
			"inputs":{
				"automationId":"67de97fcf8210b1464da34d2",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"messages":{
						"source":"{{ RA2Aq.outputs.messages }}",
						"ua:type":"mappedArray",
						"items":{
							"role":"{{ RA2Aq.outputs.messages[0].role }}",
							"content":{
								"source":"{{ RA2Aq.outputs.messages[0].content }}",
								"ua:type":"mappedArray",
								"items":{
									"type":"{{ RA2Aq.outputs.messages[0].content[0].type }}",
									"text":"{{ RA2Aq.outputs.messages[0].content[0].text }}",
									"image_url":{
										"url":"{{ RA2Aq.outputs.messages[0].content[0].image_url.url }}",
										"detail":"{{ RA2Aq.outputs.messages[0].content[0].image_url.detail }}"
									},
									"source":{
										"image_type":"{{ RA2Aq.outputs.messages[0].content[0].source.image_type }}",
										"media_type":"{{ RA2Aq.outputs.messages[0].content[0].source.media_type }}",
										"image_data":"{{ RA2Aq.outputs.messages[0].content[0].source.image_data }}",
										"detail":"{{ RA2Aq.outputs.messages[0].content[0].source.detail }}"
									},
									"tool_use_id":"{{ RA2Aq.outputs.messages[0].content[0].tool_use_id }}",
									"content":"{{ RA2Aq.outputs.messages[0].content[0].content }}",
									"name":"{{ RA2Aq.outputs.messages[0].content[0].name }}",
									"id":"{{ RA2Aq.outputs.messages[0].content[0].id }}",
									"input":"{{ RA2Aq.outputs.messages[0].content[0].input }}"
								}
							}
						}
					},
					"systemPrompt":"{{ RA2Aq.outputs.systemPrompt }}",
					"model":"{{ RA2Aq.outputs.model }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.updatedMessages.items.role",
					"root.parameters.updatedMessages.items.tool_call_id",
					"root.parameters.updatedMessages.items.tool_calls.items.id",
					"root.parameters.updatedMessages.items.tool_calls.items.type",
					"root.parameters.updatedMessages.items.tool_calls.items.function.name",
					"root.parameters.updatedMessages.items.tool_calls.items.function.arguments",
					"root.parameters.updatedMessages.items.content.items.text",
					"root.parameters.updatedMessages.items.content.items.type",
					"root.parameters.tools.items.type",
					"root.parameters.tools.items.function.name",
					"root.parameters.tools.items.function.description",
					"root.parameters.tools.items.function.parameters",
					"root.parameters.tools.items.function.strict"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"NmnYY-1",
			"id":"XnTTX",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"reformatted_message_list":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role"
									},
									"content":{
										"type":"string",
										"title":"content"
									},
									"tool_calls":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"id":{
													"type":"string",
													"title":"id"
												},
												"type":{
													"type":"string",
													"title":"type"
												},
												"function":{
													"type":"object",
													"properties":{
														"name":{
															"type":"string",
															"title":"name"
														},
														"arguments":{
															"type":"string",
															"title":"arguments"
														}
													},
													"additionalProperties":false,
													"title":"function",
													"required":[]
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"tool_calls"
									},
									"tool_call_id":{
										"type":"string",
										"title":"tool_call_id"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"reformatted_message_list"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"updatedMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"text":{
													"type":"string",
													"title":"text"
												},
												"type":{
													"type":"string",
													"title":"type"
												}
											},
											"additionalProperties":false
										},
										"title":"content"
									},
									"tool_call_id":{
										"type":"string",
										"title":"tool_call_id"
									},
									"tool_calls":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"id":{
													"type":"string",
													"title":"id"
												},
												"type":{
													"type":"string",
													"title":"type"
												},
												"function":{
													"type":"object",
													"properties":{
														"name":{
															"type":"string",
															"title":"name"
														},
														"arguments":{
															"type":"string",
															"title":"arguments"
														}
													},
													"additionalProperties":false,
													"title":"function",
													"required":[]
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"tool_calls"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"updatedMessages"
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"type"
									},
									"function":{
										"type":"object",
										"properties":{
											"name":{
												"type":"string",
												"title":"name"
											},
											"description":{
												"type":"string",
												"title":"description"
											},
											"parameters":{
												"type":"object",
												"title":"parameters"
											},
											"strict":{
												"type":"boolean",
												"title":"strict"
											}
										},
										"additionalProperties":false,
										"title":"function"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"tools"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def reformatted_message_list = []\ndef tool_result_indices = []\n\nif (binding.hasVariable(\"updatedMessages\")) {\n  // token count approximation(3 chars ≈ 1 token)\n  def countTokens = { text ->\n    return text ? Math.ceil(text.toString().length() / 3) : 0\n  }\n\n  updatedMessages.each { message -> \n    if (message?.content?.type != \"image\") {\n      def temp_tool_calls = message?.tool_calls?.collect { call ->\n        [\n          \"name\": call?.function?.name,\n          \"arguments\": com.unifyapps.infra.utils.JsonUtils.fromJson(call?.function?.arguments, Object.class)\n        ]\n      }\n      def result = com.unifyapps.infra.utils.JsonUtils.toJson(temp_tool_calls)\n      def content = message?.content?.text instanceof Collection ? message?.content?.text.join('') : message?.content?.text?.toString()\n      if(result != null) {\n        content += \"\\n\"\n        content += result\n      }\n      \n      def temp_message = [\n        \"role\": message?.role, \n        \"content\": content\n      ]\n      \n      if(message?.tool_call_id != null){\n        message.role = \"user\"\n        temp_message.role = \"user\"\n        \n        def prefix = \"Tool Result for above called tool is: \"\n        temp_message.content = prefix + content\n        \n        tool_result_indices << reformatted_message_list.size()\n      }\n      \n      reformatted_message_list << temp_message\n    }\n  }\n  \n  def total_tokens = 0\n  reformatted_message_list.each { msg ->\n    total_tokens += countTokens(msg.content)\n  }\n  \n  def contextLimit = 32000\n  def bufferTokens = 8000\n  def available_tokens = contextLimit - bufferTokens\n  \n  if (total_tokens > available_tokens && !tool_result_indices.isEmpty()) {\n    def excess_tokens = total_tokens - available_tokens\n    \n    for (def idx in tool_result_indices) {\n      if (excess_tokens <= 0) break\n      \n      def message = reformatted_message_list[idx]\n      def current_content = message.content\n      def current_tokens = countTokens(current_content)\n      \n      def prefix = \"Tool Result for above called tool is: \"\n      def notice = \"The following tool response is clipped due to context length limitations: \"\n      def suffix = \"...\"\n      \n      def original_tool_result = current_content.substring(prefix.length())\n      \n      def min_content = prefix + notice + suffix\n      def min_tokens = countTokens(min_content)\n      \n      if (current_tokens > min_tokens) {\n        def tokens_to_clip = Math.min(current_tokens - min_tokens, excess_tokens)\n        \n        if (tokens_to_clip < (current_tokens - min_tokens)) {\n          def tokens_to_keep = current_tokens - tokens_to_clip\n          def content_tokens = tokens_to_keep - countTokens(prefix + notice + suffix)\n          def chars_to_keep = (int)(content_tokens * 4)\n          \n          message.content = prefix + notice + \n            original_tool_result.substring(0, Math.min(chars_to_keep, original_tool_result.length())) + suffix\n        } else {\n          message.content = min_content\n        }\n        \n        def new_tokens = countTokens(message.content)\n        excess_tokens -= (current_tokens - new_tokens)\n      }\n    }\n  }\n}\n\ndef result = [\n  \"reformatted_message_list\": reformatted_message_list\n]",
				"parameters":{
					"updatedMessages":{
						"ua:type":"mappedArray",
						"items":{
							"content":{
								"ua:type":"mappedArray",
								"items":{
									"text":"{{ Fbmt9.outputs.openaiMessages[0].content[0].text }}",
									"type":"{{ Fbmt9.outputs.openaiMessages[0].content[0].type }}"
								},
								"source":"{{ Fbmt9.outputs.openaiMessages[0].content }}"
							},
							"tool_calls":{
								"ua:type":"mappedArray",
								"items":{
									"function":{
										"name":"{{ Fbmt9.outputs.openaiMessages[0].tool_calls[0].function.name }}",
										"arguments":"{{ Fbmt9.outputs.openaiMessages[0].tool_calls[0].function.arguments }}"
									},
									"id":"{{ Fbmt9.outputs.openaiMessages[0].tool_calls[0].id }}"
								},
								"source":"{{ Fbmt9.outputs.openaiMessages[0].tool_calls }}"
							},
							"role":"{{ Fbmt9.outputs.openaiMessages[0].role }}",
							"tool_call_id":"{{ Fbmt9.outputs.openaiMessages[0].tool_call_id }}"
						},
						"source":"{{ Fbmt9.outputs.openaiMessages }}"
					},
					"tools":{
						"ua:type":"mappedArray",
						"items":{
							"function":{
								"name":"{{ RA2Aq.outputs.tools[0].function.name }}",
								"description":"{{ RA2Aq.outputs.tools[0].function.description }}",
								"parameters":"{{ RA2Aq.outputs.tools[0].function.parameters }}"
							},
							"type":"{{ RA2Aq.outputs.tools[0].type }}"
						},
						"source":"{{ RA2Aq.outputs.tools }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":159,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"NmnYY-1",
			"id":"HPXQR",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"payload":{
							"type":"object",
							"properties":{
								"top_p":{
									"type":"integer",
									"title":"top_p"
								},
								"frequency_penalty":{
									"type":"integer",
									"title":"frequency_penalty"
								},
								"response_format":{
									"type":"object",
									"properties":{
										"type":{
											"type":"string",
											"title":"type"
										}
									},
									"title":"response_format",
									"additionalProperties":false
								},
								"parallel_tool_calls":{
									"type":"boolean",
									"title":"parallel_tool_calls"
								},
								"max_tokens":{
									"type":"integer",
									"title":"max_tokens"
								},
								"presence_penalty":{
									"type":"integer",
									"title":"presence_penalty"
								},
								"temperature":{
									"type":"number",
									"title":"temperature"
								},
								"messages":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"role":{
												"type":"string",
												"title":"role"
											},
											"content":{
												"type":"string",
												"title":"content"
											},
											"tool_call_id":{
												"type":"string",
												"title":"tool_call_id"
											},
											"tool_calls":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"id":{
															"type":"string",
															"title":"id"
														},
														"type":{
															"type":"string",
															"title":"type"
														},
														"function":{
															"type":"object",
															"properties":{
																"name":{
																	"type":"string",
																	"title":"name"
																},
																"arguments":{
																	"type":"string",
																	"title":"arguments"
																}
															},
															"title":"function",
															"additionalProperties":false
														}
													},
													"additionalProperties":false
												},
												"title":"tool_calls"
											}
										},
										"additionalProperties":false,
										"required":[]
									},
									"title":"messages"
								},
								"tool_choice":{
									"type":"string",
									"title":"tool_choice"
								},
								"model":{
									"type":"string",
									"title":"model"
								},
								"tools":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"type":{
												"type":"string",
												"title":"type"
											},
											"function":{
												"type":"object",
												"properties":{
													"name":{
														"type":"string",
														"title":"name"
													},
													"description":{
														"type":"string",
														"title":"description"
													},
													"parameters":{
														"type":"object",
														"title":"parameters"
													},
													"strict":{
														"type":"boolean",
														"title":"strict"
													}
												},
												"title":"function",
												"additionalProperties":false
											}
										},
										"additionalProperties":false
									},
									"title":"tools"
								},
								"user":{
									"type":"string",
									"title":"user"
								}
							},
							"title":"payload",
							"additionalProperties":false,
							"required":[]
						}
					}
				}
			},
			"inputs":{
				"payload":{
					"messages":{
						"ua:type":"mappedArray",
						"items":{
							"tool_calls":{
								"ua:type":"mappedArray",
								"items":{
									"function":{
										"name":"{{ XnTTX.outputs.result.reformatted_message_list[0].tool_calls[0].function.name }}",
										"arguments":"{{ XnTTX.outputs.result.reformatted_message_list[0].tool_calls[0].function.arguments }}"
									},
									"id":"{{ XnTTX.outputs.result.reformatted_message_list[0].tool_calls[0].id }}",
									"type":"{{ XnTTX.outputs.result.reformatted_message_list[0].tool_calls[0].type }}"
								},
								"source":"{{ XnTTX.outputs.result.reformatted_message_list[0].tool_calls }}"
							},
							"role":"{{ XnTTX.outputs.result.reformatted_message_list[0].role }}",
							"content":"{{ XnTTX.outputs.result.reformatted_message_list[0].content }}",
							"tool_call_id":"{{ XnTTX.outputs.result.reformatted_message_list[0].tool_call_id }}"
						},
						"source":"{{ XnTTX.outputs.result.reformatted_message_list }}"
					},
					"tools":{
						"ua:type":"mappedArray",
						"items":{
							"function":{
								"name":"{{ RA2Aq.outputs.tools[0].function.name }}",
								"description":"{{ RA2Aq.outputs.tools[0].function.description }}",
								"parameters":"{{ RA2Aq.outputs.tools[0].function.parameters }}"
							},
							"type":"{{ RA2Aq.outputs.tools[0].type }}"
						},
						"source":"{{ RA2Aq.outputs.tools }}"
					},
					"top_p":"{{ RA2Aq.outputs.top_p }}",
					"max_tokens":"{{ RA2Aq.outputs.max_tokens }}",
					"temperature":"{{ RA2Aq.outputs.temperature }}"
				}
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"payload":{
							"type":"object",
							"properties":{
								"top_p":{
									"type":"integer",
									"title":"top_p"
								},
								"frequency_penalty":{
									"type":"integer",
									"title":"frequency_penalty"
								},
								"response_format":{
									"type":"object",
									"properties":{
										"type":{
											"type":"string",
											"title":"type"
										}
									},
									"title":"response_format",
									"additionalProperties":false
								},
								"parallel_tool_calls":{
									"type":"boolean",
									"title":"parallel_tool_calls"
								},
								"max_tokens":{
									"type":"integer",
									"title":"max_tokens"
								},
								"presence_penalty":{
									"type":"integer",
									"title":"presence_penalty"
								},
								"temperature":{
									"type":"number",
									"title":"temperature"
								},
								"messages":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"role":{
												"type":"string",
												"title":"role"
											},
											"content":{
												"type":"string",
												"title":"content"
											},
											"tool_call_id":{
												"type":"string",
												"title":"tool_call_id"
											},
											"tool_calls":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"id":{
															"type":"string",
															"title":"id"
														},
														"type":{
															"type":"string",
															"title":"type"
														},
														"function":{
															"type":"object",
															"properties":{
																"name":{
																	"type":"string",
																	"title":"name"
																},
																"arguments":{
																	"type":"string",
																	"title":"arguments"
																}
															},
															"title":"function",
															"additionalProperties":false
														}
													},
													"additionalProperties":false
												},
												"title":"tool_calls"
											}
										},
										"additionalProperties":false,
										"required":[]
									},
									"title":"messages"
								},
								"tool_choice":{
									"type":"string",
									"title":"tool_choice"
								},
								"model":{
									"type":"string",
									"title":"model"
								},
								"tools":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"type":{
												"type":"string",
												"title":"type"
											},
											"function":{
												"type":"object",
												"properties":{
													"name":{
														"type":"string",
														"title":"name"
													},
													"description":{
														"type":"string",
														"title":"description"
													},
													"parameters":{
														"type":"object",
														"title":"parameters"
													},
													"strict":{
														"type":"boolean",
														"title":"strict"
													}
												},
												"title":"function",
												"additionalProperties":false
											}
										},
										"additionalProperties":false
									},
									"title":"tools"
								},
								"user":{
									"type":"string",
									"title":"user"
								}
							},
							"title":"payload",
							"additionalProperties":false,
							"required":[]
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":158,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"NmnYY-1",
			"id":"OVF7r",
			"index":0,
			"inputs":{
				"result":{
					"payload":"{{ HPXQR.outputs.payload }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":-1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":85
}