{
	"appsUsed":[
		
	],
	"createdTime":1752511451446,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243639573,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed7723e6682b9a51ed62",
		"status":"DEPLOYED",
		"version":34,
		"workflowVersion":58
	},
	"edges":[
		{
			"fromNodeId":"_A1Aj6",
			"priority":0,
			"skip":false,
			"toNodeId":"vsOon",
			"type":"next"
		},
		{
			"fromNodeId":"vsOon",
			"priority":0,
			"skip":false,
			"toNodeId":"gWAJZ",
			"type":"next"
		},
		{
			"fromNodeId":"gWAJZ",
			"priority":0,
			"skip":false,
			"toNodeId":"e4x3d",
			"type":"next"
		},
		{
			"fromNodeId":"e4x3d",
			"priority":0,
			"skip":false,
			"toNodeId":"Zj7Jb",
			"type":"loop"
		},
		{
			"fromNodeId":"Zj7Jb",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"Zj7Jb@1",
			"type":"branch"
		},
		{
			"fromNodeId":"Zj7Jb@1",
			"priority":0,
			"skip":false,
			"toNodeId":"2gNGO",
			"type":"next"
		},
		{
			"fromNodeId":"2gNGO",
			"priority":0,
			"skip":false,
			"toNodeId":"jqOzz",
			"type":"next"
		},
		{
			"fromNodeId":"jqOzz",
			"priority":0,
			"skip":false,
			"toNodeId":"vZIso",
			"type":"next"
		},
		{
			"fromNodeId":"Zj7Jb",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"Zj7Jb@2",
			"type":"branch"
		},
		{
			"fromNodeId":"Zj7Jb@2",
			"priority":0,
			"skip":false,
			"toNodeId":"rGyIr",
			"type":"next"
		},
		{
			"fromNodeId":"rGyIr",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"rGyIr@1",
			"type":"branch"
		},
		{
			"fromNodeId":"rGyIr@1",
			"priority":0,
			"skip":false,
			"toNodeId":"hTtZF",
			"type":"next"
		},
		{
			"fromNodeId":"hTtZF",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"tn1jh",
			"type":"if"
		},
		{
			"fromNodeId":"tn1jh",
			"priority":0,
			"skip":false,
			"toNodeId":"rpsqs",
			"type":"next"
		},
		{
			"fromNodeId":"rpsqs",
			"priority":0,
			"skip":false,
			"toNodeId":"Wo7Lm",
			"type":"next"
		},
		{
			"fromNodeId":"hTtZF",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"etJzE",
			"type":"next"
		},
		{
			"fromNodeId":"etJzE",
			"priority":0,
			"skip":false,
			"toNodeId":"Ij2VY",
			"type":"next"
		},
		{
			"fromNodeId":"Ij2VY",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"ksXAQ",
			"type":"if"
		},
		{
			"fromNodeId":"ksXAQ",
			"priority":0,
			"skip":false,
			"toNodeId":"ZJsV7",
			"type":"next"
		},
		{
			"fromNodeId":"ZJsV7",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"34asS",
			"type":"next"
		},
		{
			"fromNodeId":"34asS",
			"priority":0,
			"skip":false,
			"toNodeId":"OKsgy",
			"type":"next"
		},
		{
			"fromNodeId":"Ij2VY",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Nujqs",
			"type":"next"
		},
		{
			"fromNodeId":"Nujqs",
			"priority":0,
			"skip":false,
			"toNodeId":"eDZkl",
			"type":"next"
		},
		{
			"fromNodeId":"eDZkl",
			"priority":0,
			"skip":false,
			"toNodeId":"ZuVTt",
			"type":"next"
		},
		{
			"fromNodeId":"rGyIr",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"rGyIr@2",
			"type":"branch"
		},
		{
			"fromNodeId":"rGyIr@2",
			"priority":0,
			"skip":false,
			"toNodeId":"3GtES",
			"type":"next"
		},
		{
			"fromNodeId":"3GtES",
			"priority":0,
			"skip":false,
			"toNodeId":"cm8nq",
			"type":"next"
		},
		{
			"fromNodeId":"cm8nq",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"oOSSV",
			"type":"if"
		},
		{
			"fromNodeId":"oOSSV",
			"priority":0,
			"skip":false,
			"toNodeId":"m8LI6",
			"type":"next"
		},
		{
			"fromNodeId":"m8LI6",
			"priority":0,
			"skip":false,
			"toNodeId":"PcEPO",
			"type":"next"
		},
		{
			"fromNodeId":"cm8nq",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"l8aUU",
			"type":"next"
		},
		{
			"fromNodeId":"l8aUU",
			"priority":0,
			"skip":false,
			"toNodeId":"qzViy",
			"type":"next"
		},
		{
			"fromNodeId":"qzViy",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Q9Uf2",
			"type":"next"
		},
		{
			"fromNodeId":"Q9Uf2",
			"priority":0,
			"skip":false,
			"toNodeId":"A89x4",
			"type":"next"
		},
		{
			"fromNodeId":"rGyIr",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"rGyIr@3",
			"type":"branch"
		},
		{
			"fromNodeId":"rGyIr@3",
			"priority":0,
			"skip":false,
			"toNodeId":"6WgW1",
			"type":"next"
		},
		{
			"fromNodeId":"6WgW1",
			"priority":0,
			"skip":false,
			"toNodeId":"v588g",
			"type":"next"
		},
		{
			"fromNodeId":"v588g",
			"priority":0,
			"skip":false,
			"toNodeId":"OIS97",
			"type":"next"
		},
		{
			"fromNodeId":"Wo7Lm",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"next"
		},
		{
			"fromNodeId":"ZJsV7",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"if"
		},
		{
			"fromNodeId":"OKsgy",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"next"
		},
		{
			"fromNodeId":"ZuVTt",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"next"
		},
		{
			"fromNodeId":"PcEPO",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"next"
		},
		{
			"fromNodeId":"qzViy",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"if"
		},
		{
			"fromNodeId":"A89x4",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"next"
		},
		{
			"fromNodeId":"OIS97",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"next"
		},
		{
			"fromNodeId":"rGyIr",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"_wgR80",
			"type":"branch"
		},
		{
			"fromNodeId":"Zj7Jb",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"Zj7Jb@3",
			"type":"branch"
		},
		{
			"fromNodeId":"Zj7Jb@3",
			"priority":0,
			"skip":false,
			"toNodeId":"nfXpI",
			"type":"next"
		},
		{
			"fromNodeId":"nfXpI",
			"priority":0,
			"skip":false,
			"toNodeId":"wb1Jw",
			"type":"next"
		},
		{
			"fromNodeId":"wb1Jw",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"qBSwL",
			"type":"next"
		},
		{
			"fromNodeId":"qBSwL",
			"priority":0,
			"skip":false,
			"toNodeId":"qyvVv",
			"type":"next"
		},
		{
			"fromNodeId":"vZIso",
			"priority":0,
			"skip":false,
			"toNodeId":"_jmdRh",
			"type":"next"
		},
		{
			"fromNodeId":"_wgR80",
			"priority":0,
			"skip":false,
			"toNodeId":"_jmdRh",
			"type":"next"
		},
		{
			"fromNodeId":"wb1Jw",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_jmdRh",
			"type":"if"
		},
		{
			"fromNodeId":"qyvVv",
			"priority":0,
			"skip":false,
			"toNodeId":"_jmdRh",
			"type":"next"
		},
		{
			"fromNodeId":"Zj7Jb",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"_jmdRh",
			"type":"branch"
		},
		{
			"fromNodeId":"_jmdRh",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"e4x3d",
			"type":"next"
		},
		{
			"fromNodeId":"e4x3d",
			"priority":0,
			"skip":false,
			"toNodeId":"n_IMR30",
			"type":"next"
		},
		{
			"fromNodeId":"n_IMR30",
			"priority":0,
			"skip":false,
			"toNodeId":"_zhCwS",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6874b1992b1acace3a8cbff4",
	"lastModifiedBy":-1,
	"lcName":"generate chart | convert llm json to copilot blocks",
	"modifiedTime":1759371956623,
	"name":"Generate Chart | Convert LLM JSON to CoPilot Blocks",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_J8P8H-1",
			"id":"_A1Aj6",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"final_results":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Final Results"
						},
						"publishWaht":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"blockType":{
										"type":"string",
										"title":"Block Type"
									},
									"chartType":{
										"type":"string",
										"title":"Chart Type"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Publish Waht"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"result":{
							"properties":{
								"results":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"yAxisLabel":{
												"type":"string",
												"title":"yAxisLabel"
											},
											"data":{
												"type":"object",
												"properties":{
													"text":{
														"type":"string",
														"title":"text"
													}
												},
												"title":"data",
												"additionalProperties":false
											},
											"columns":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"label":{
															"type":"string",
															"title":"label"
														},
														"type":{
															"type":"string",
															"title":"type"
														},
														"value":{
															"type":"string",
															"title":"value"
														},
														"currencyCode":{
															"type":"string",
															"title":"currencyCode"
														}
													},
													"additionalProperties":false,
													"required":[]
												},
												"title":"columns"
											},
											"series":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"label":{
															"type":"string",
															"title":"label"
														},
														"key":{
															"type":"string",
															"title":"key"
														}
													},
													"additionalProperties":false
												},
												"title":"series"
											},
											"blockType":{
												"type":"string",
												"title":"blockType"
											},
											"xAxisValue":{
												"type":"string",
												"title":"xAxisValue"
											},
											"chartType":{
												"type":"string",
												"title":"chartType"
											},
											"xAxisLabel":{
												"type":"string",
												"title":"xAxisLabel"
											},
											"groupBy":{
												"type":"string",
												"title":"groupBy"
											},
											"yAxisRightLabel":{
												"type":"string",
												"title":"yAxisRightLabel"
											},
											"yAxis":{
												"type":"object",
												"properties":{
													"series":{
														"type":"array",
														"items":{
															"type":"object",
															"properties":{
																"key":{
																	"type":"string",
																	"title":"key"
																},
																"label":{
																	"type":"string",
																	"title":"label"
																}
															},
															"additionalProperties":false,
															"required":[]
														},
														"title":"series"
													}
												},
												"additionalProperties":false,
												"title":"yAxis",
												"required":[]
											},
											"yAxisRight":{
												"type":"object",
												"properties":{
													"series":{
														"type":"array",
														"items":{
															"type":"object",
															"properties":{
																"key":{
																	"type":"string",
																	"title":"key"
																},
																"label":{
																	"type":"string",
																	"title":"label"
																}
															},
															"additionalProperties":false,
															"required":[]
														},
														"title":"series"
													}
												},
												"additionalProperties":false,
												"title":"yAxisRight",
												"required":[]
											},
											"title":{
												"type":"string",
												"title":"title"
											}
										},
										"additionalProperties":false,
										"required":[]
									},
									"title":"results"
								},
								"sql_output":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{},
										"additionalProperties":false
									},
									"title":"Sql Output"
								},
								"chartType":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"Chart Type"
								}
							},
							"type":"object",
							"required":[]
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":106,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_J8P8H-1",
			"id":"vsOon",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"data":{
											"type":"object",
											"title":"data"
										},
										"blockType":{
											"type":"string",
											"title":"blockType"
										},
										"title":{
											"type":"string",
											"title":"title"
										}
									},
									"additionalProperties":false,
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"final_results",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"final_results",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"title":"data"
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									},
									"title":{
										"type":"string",
										"title":"title"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":73,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_J8P8H-1",
			"id":"gWAJZ",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"blockType":{
											"type":"string",
											"title":"Block Type"
										},
										"chartType":{
											"type":"string",
											"title":"Chart Type"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"publishWhat",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"publishWhat",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"blockType":{
										"type":"string",
										"title":"Block Type"
									},
									"chartType":{
										"type":"string",
										"title":"Chart Type"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":78,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_J8P8H-1",
			"id":"e4x3d",
			"index":4,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ _A1Aj6.outputs.result.results  }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each item in the list",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"e4x3d@_J8P8H-1@l",
			"id":"Zj7Jb",
			"index":5,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"conditions":{
								"filters":[
									{
										"property":"{{ e4x3d.outputs.item.blockType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"Table"
										}
									}
								],
								"operator":"AND"
							},
							"name":"Table"
						}
					},
					{
						"id":"2",
						"inputs":{
							"conditions":{
								"filters":[
									{
										"property":"{{ e4x3d.outputs.item.blockType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"Chart"
										}
									},
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"PIE"
										}
									},
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"LINE"
										}
									},
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"BAR"
										}
									},
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"COLUMN"
										}
									}
								],
								"operator":"OR"
							},
							"name":"Chart"
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"Typography",
							"conditions":{
								"filters":[
									{
										"property":"{{ e4x3d.outputs.item.blockType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"Typography"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":34,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@1",
			"id":"Zj7Jb@1",
			"index":6,
			"inputs":{
				"name":"Table",
				"conditions":{
					"filters":[
						{
							"property":"{{ e4x3d.outputs.item.blockType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"Table"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.columns.items.label",
					"root.parameters.columns.items.type",
					"root.parameters.columns.items.value",
					"root.parameters.columns.items.currencyCode"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@1",
			"id":"2gNGO",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"data":{
							"type":"object",
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"columns":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"label"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"value":{
										"type":"string",
										"title":"value"
									},
									"currencyCode":{
										"type":"string",
										"title":"currencyCode"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"columns"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					},
					"additionalProperties":false,
					"required":[
						"sql_output"
					]
				},
				"compile_static":false,
				"code":"// if (sql_output.size() == 1) {\n//     // if (sql_output[0].size() == 1) {\n//     //     if(sql_output[0].containsKey(columns[0].value)){\n//     //         return [\"blockType\": \"StatCard\", \"data\": [\"type\": columns[0].get(\"type\", \"STRING\"), \"label\": columns[0].label, \"value\": sql_output[0].get(columns[0].value)]]\n//     //     }\n//     // } else {\n//         def fields = []\n//         for(col in columns){\n//             if(sql_output[0].containsKey(col.value)){\n//                 fields.add([\"type\": col.get(\"type\", \"STRING\"), \"label\": col.label, \"value\": sql_output[0].get(col.value)])\n//             }\n//         }\n//         return [\"blockType\": \"KeyValue\", \"data\": [\"fields\": fields]]\n//     // }\n// }\n\n// def new_columns = []\n// def new_sql_output = []\n// def value_label_map = [ : ]\n// for (def col in columns) {\n//     def new_col = [\"label\": col.label, \"id\": col.value, \"type\": col.get(\"type\", \"STRING\")]\n//     new_columns.add(new_col)\n//     value_label_map.put(col.value, col.label)\n// }\n// for (def data in sql_output){\n//     def new_data = [ : ]\n//     for (def key in data.keySet()){\n//         if (value_label_map.containsKey(key)){\n//             new_data[key] = data.get(key)\n//         }\n//     }\n//     new_sql_output.add(new_data)\n// }\n// def results = [\"blockType\": \"Table\", \"data\": [\"columns\": new_columns, \"rowData\": new_sql_output]]\n// return results\ndef title = binding.hasVariable(\"title\")?binding.getVariable(\"title\"):\"\"\nif (sql_output.size() == 1) {\n    def fields = []\n    for (def col in columns) {\n        if (sql_output[0].containsKey(col.value)) {\n            def field = [\n                \"type\": col.get(\"type\", \"STRING\"), \n                \"label\": col.label, \n                \"value\": sql_output[0].get(col.value)\n            ]\n\n            if (col.containsKey(\"currencyCode\")) {\n                field[\"currencyCode\"] = col.currencyCode\n            }\n            if (field[\"type\"] == \"PERCENT\") {\n                field[\"decimalPlaces\"] = 2\n            }\n            fields.add(field)\n        }\n    }\n    return [\"blockType\": \"KeyValue\", \"data\": [\"fields\": fields,\"title\":title]]\n}\ndef new_columns = []\ndef valueToColMap = [:]\n\ncolumns.each { col ->\n    def new_col = [\n        \"label\": col.label, \n        \"id\": col.value, \n        \"type\": col.get(\"type\", \"STRING\")\n    ]\n    if (col.containsKey(\"currencyCode\")) {\n        new_col[\"currencyCode\"] = col.currencyCode\n    }\n    if (new_col[\"type\"] == \"PERCENT\") {\n        new_col[\"addOns\"] = [\n            \"notation\": \"standard\",\n            \"maximumFractionDigits\": 2\n        ]\n    }\n    new_columns.add(new_col)\n    valueToColMap[col.value.toLowerCase()] = col\n}\n\ndef new_sql_output = []\nsql_output.each { data ->\n    def new_data = [:]\n    data.each { key, val ->\n        def lowerKey = key.toLowerCase()\n        if (valueToColMap.containsKey(lowerKey)) {\n            def targetKey = valueToColMap[lowerKey].value\n            new_data[targetKey] = val\n        }\n    }\n    new_sql_output.add(new_data)\n}\n\ndef results = [\"blockType\": \"Table\", \"data\": [\"columns\": new_columns, \"rowData\": new_sql_output, \"title\": title]]\nreturn results",
				"isAsync":false,
				"parameters":{
					"columns":{
						"source":"{{ e4x3d.outputs.item.columns }}",
						"ua:type":"mappedArray",
						"items":{
							"label":"{{ e4x3d.outputs.item.columns[0].label }}",
							"type":"{{ e4x3d.outputs.item.columns[0].type }}",
							"value":"{{ e4x3d.outputs.item.columns[0].value }}",
							"currencyCode":"{{ e4x3d.outputs.item.columns[0].currencyCode }}"
						}
					},
					"blockType":"{{ e4x3d.outputs.item.blockType }}",
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.sql_output }}",
						"items":"{{ _A1Aj6.outputs.result.sql_output[0] }}"
					},
					"title":"{{ e4x3d.outputs.item.title }}"
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":53,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@1",
			"id":"jqOzz",
			"index":8,
			"inputs":{
				"itemToAdd":{
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ 2gNGO.outputs.result.data }}",
					"blockType":"{{ 2gNGO.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add an item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@1",
			"id":"vZIso",
			"index":9,
			"inputs":{
				"itemToAdd":{
					"blockType":"{{ 2gNGO.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":34,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@2",
			"id":"Zj7Jb@2",
			"index":10,
			"inputs":{
				"name":"Chart",
				"conditions":{
					"filters":[
						{
							"property":"{{ e4x3d.outputs.item.blockType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"Chart"
							}
						},
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"PIE"
							}
						},
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"LINE"
							}
						},
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"BAR"
							}
						},
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"COLUMN"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@2",
			"id":"rGyIr",
			"index":11,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"LINE/BAR/COLUMN",
							"conditions":{
								"filters":[
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"LINE"
										}
									},
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"BAR"
										}
									},
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"COLUMN"
										}
									}
								],
								"operator":"OR"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"PIE",
							"conditions":{
								"filters":[
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"PIE"
										}
									}
								],
								"operator":"OR"
							}
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"DUAL_AXES",
							"conditions":{
								"filters":[
									{
										"property":"{{ e4x3d.outputs.item.chartType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"DUAL_AXES"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":34,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1",
			"id":"rGyIr@1",
			"index":12,
			"inputs":{
				"name":"LINE/BAR/COLUMN",
				"conditions":{
					"filters":[
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"LINE"
							}
						},
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"BAR"
							}
						},
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"COLUMN"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":35,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1",
			"id":"hTtZF",
			"index":13,
			"inputs":{
				"filters":[
					{
						"property":"{{ e4x3d.outputs.item.groupBy }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@y",
			"id":"tn1jh",
			"index":14,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"data":{
							"type":"object",
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"sql_output"
					],
					"properties":{
						"yAxisLabel":{
							"type":"string",
							"title":"yAxisLabel"
						},
						"series":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"label"
									},
									"key":{
										"type":"string",
										"title":"key"
									}
								},
								"additionalProperties":false
							},
							"title":"series"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"xAxisValue":{
							"type":"string",
							"title":"xAxisValue"
						},
						"chartType":{
							"type":"string",
							"title":"chartType"
						},
						"xAxisLabel":{
							"type":"string",
							"title":"xAxisLabel"
						},
						"groupBy":{
							"type":"string",
							"title":"groupBy"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					}
				},
				"code":"// TODO: validate sql_output\nreturn [\n  \"blockType\": blockType, \n  \"data\": [\n    \"chartType\": chartType, \n    \"xAxisValue\": xAxisValue, \n    \"series\": series, \n    \"xAxis\": [\"scale\": \"category\", \"label\": xAxisLabel], \n    \"yAxis\": [\"scale\": \"linear\", \"label\": yAxisLabel, \"tickLabels\": [\"enabled\": true, \"notation\": \"compact\", \"type\": \"NUMBER\"]], \n    \"groupBy\": groupBy, \"chartData\": sql_output,\n    \"title\": title\n  ]\n]",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"yAxisLabel":"{{ e4x3d.outputs.item.yAxisLabel }}",
					"blockType":"Chart",
					"xAxisValue":"{{ e4x3d.outputs.item.xAxisValue }}",
					"chartType":"{{ e4x3d.outputs.item.chartType }}",
					"xAxisLabel":"{{ e4x3d.outputs.item.xAxisLabel }}",
					"groupBy":"{{ e4x3d.outputs.item.groupBy }}",
					"title":"{{ e4x3d.outputs.item.title }}",
					"series":{
						"source":"{{ e4x3d.outputs.item.series }}",
						"ua:type":"mappedArray",
						"items":{
							"label":"{{ e4x3d.outputs.item.series[0].label }}",
							"key":"{{ e4x3d.outputs.item.series[0].key }}"
						}
					},
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.sql_output }}",
						"items":"{{ _A1Aj6.outputs.result.sql_output[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":53,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@y",
			"id":"rpsqs",
			"index":15,
			"inputs":{
				"itemToAdd":{
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ tn1jh.outputs.result.data }}",
					"blockType":"{{ tn1jh.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add an item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@y",
			"id":"Wo7Lm",
			"index":16,
			"inputs":{
				"itemToAdd":{
					"blockType":"Chart",
					"chartType":"{{ e4x3d.outputs.item.chartType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{},
				"visibleOptionalFields":[
					"root.parameters.series.items.label",
					"root.parameters.series.items.key",
					"root.parameters.ChartType.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n",
			"id":"etJzE",
			"index":17,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"isCorrect":{
							"type":"boolean",
							"title":"Is Correct"
						},
						"xAxisValueMod":{
							"type":"string",
							"title":"X Axis Value Mod"
						},
						"seriesMod":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"Label"
									},
									"key":{
										"type":"string",
										"title":"Key"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Series Mod"
						},
						"lowerSqlOutput":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Lower Sql Output"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"yAxisLabel":{
							"type":"string",
							"title":"yAxisLabel"
						},
						"series":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"label"
									},
									"key":{
										"type":"string",
										"title":"key"
									}
								},
								"additionalProperties":false
							},
							"title":"series"
						},
						"xAxisValue":{
							"type":"string",
							"title":"xAxisValue"
						},
						"xAxisLabel":{
							"type":"string",
							"title":"xAxisLabel"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"ChartType":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chart Type"
						}
					},
					"additionalProperties":false,
					"required":[
						"sql_output"
					]
				},
				"compile_static":false,
				"code":"// def seriesKeys = series.collect { it['key'] }\n// if (!xAxisValue || seriesKeys.isEmpty() || sql_output.isEmpty()|| sql_output.size() <= 1) {\n//     return [\"isCorrect\": false]\n// }\n\n// // Each row must contain xAxisValue and all series keys\n// boolean allRowsValid = sql_output.every { row ->\n//     row.containsKey(xAxisValue) && seriesKeys.every { row.containsKey(it) }\n// }\n\n// return [\"isCorrect\": allRowsValid]\n\n\ndef lowerXAxisValue = xAxisValue?.toLowerCase()\ndef lowerSeries = series.collect { s ->\n    [\n        key: s.key.toLowerCase(),\n        label: s.label\n    ]\n}\n\n// Validation uses lowercased keys for matching with sql_output\ndef seriesKeys = lowerSeries.collect { it['key'] }\n\nif (!lowerXAxisValue || seriesKeys.isEmpty() || sql_output.isEmpty()) {\n    return [isCorrect: false, xAxisValueMod : lowerXAxisValue, \n    seriesMod : lowerSeries]\n}\n\n// Each row in sql_output must contain xAxisValue and all series keys (case-insensitive)\nboolean allRowsValid = sql_output.every { row ->\n    def rowKeys = row.keySet().collect { it.toLowerCase() }\n    rowKeys.contains(lowerXAxisValue) && seriesKeys.every { rowKeys.contains(it) }\n}\n\ndef lowerSqlOutput = sql_output.collect { row ->\n    row.collectEntries { k, v -> [k.toLowerCase(), v] }\n}\n\n\n// Build output 'result' object with ONLY xAxisValue and series[*].key lowercased\n\n\nreturn [\n    isCorrect: allRowsValid,\n    xAxisValueMod : lowerXAxisValue, \n    seriesMod : lowerSeries,\n    lowerSqlOutput : lowerSqlOutput\n\n    \n]\n\n",
				"isAsync":false,
				"parameters":{
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.sql_output }}",
						"items":"{{ _A1Aj6.outputs.result.sql_output[0] }}"
					},
					"yAxisLabel":"{{ e4x3d.outputs.item.yAxisLabel }}",
					"series":{
						"source":"{{ e4x3d.outputs.item.series }}",
						"ua:type":"mappedArray",
						"items":{
							"label":"{{ e4x3d.outputs.item.series[0].label }}",
							"key":"{{ e4x3d.outputs.item.series[0].key }}"
						}
					},
					"xAxisValue":"{{ e4x3d.outputs.item.xAxisValue }}",
					"xAxisLabel":"{{ e4x3d.outputs.item.xAxisLabel }}",
					"ChartType":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.chartType }}",
						"items":"{{ _A1Aj6.outputs.result.chartType[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Validate line/bar/col",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":344,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n",
			"id":"Ij2VY",
			"index":18,
			"inputs":{
				"filters":[
					{
						"property":"{{ etJzE.outputs.result.isCorrect }}",
						"filter":{
							"operator":"EQUAL",
							"value":"false"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"!correct?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.chartType.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Ij2VY@hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n@y",
			"id":"ksXAQ",
			"index":19,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"data":{
							"type":"object",
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"hasTable":{
							"type":"boolean",
							"title":"Has Table"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"chartType":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chart Type"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					},
					"additionalProperties":false,
					"required":[
						"sql_output"
					]
				},
				"compile_static":false,
				"code":"if (chartType.contains('Table')) {\n    return [\"hasTable\":true]\n}\n\n\ndef new_columns = []\nfor (def label in sql_output[0].keySet()) {\n    def new_col = [\"label\": label, \"type\": \"STRING\"]\n    new_columns.add(new_col)\n}\ndef results = [\"blockType\": \"Table\", \"data\": [\"columns\": new_columns, \"rowData\": sql_output, \"title\":title]]\nreturn results",
				"isAsync":false,
				"parameters":{
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.sql_output }}",
						"items":"{{ _A1Aj6.outputs.result.sql_output[0] }}"
					},
					"chartType":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.chartType }}",
						"items":"{{ _A1Aj6.outputs.result.chartType[0] }}"
					},
					"title":"{{ e4x3d.outputs.item.title }}"
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":340,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Ij2VY@hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n@y",
			"id":"ZJsV7",
			"index":20,
			"inputs":{
				"filters":[
					{
						"property":"{{ _A1Aj6.outputs.result.hasTable  }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":53,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"ZJsV7@Ij2VY@hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n@y@n",
			"id":"34asS",
			"index":21,
			"inputs":{
				"itemToAdd":{
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ ksXAQ.outputs.result.data }}",
					"blockType":"{{ ksXAQ.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add an item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"ZJsV7@Ij2VY@hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n@y@n",
			"id":"OKsgy",
			"index":22,
			"inputs":{
				"itemToAdd":{
					"blockType":"{{ ksXAQ.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.series.items.label",
					"root.parameters.series.items.key"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Ij2VY@hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n@n",
			"id":"Nujqs",
			"index":23,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"data":{
							"type":"object",
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"sql_output"
					],
					"properties":{
						"yAxisLabel":{
							"type":"string",
							"title":"yAxisLabel"
						},
						"series":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"label"
									},
									"key":{
										"type":"string",
										"title":"key"
									}
								},
								"additionalProperties":false
							},
							"title":"series"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"xAxisValue":{
							"type":"string",
							"title":"xAxisValue"
						},
						"chartType":{
							"type":"string",
							"title":"chartType"
						},
						"xAxisLabel":{
							"type":"string",
							"title":"xAxisLabel"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					}
				},
				"code":"import java.time.*\nimport java.time.format.DateTimeFormatter\nimport java.time.format.DateTimeParseException\n\ndef isIsoDateFormat = { dateStr ->\n    if (!dateStr) return false\n    // Accepts both date and date-time\n    def isoRegex = /^(\\d{4}-\\d{2}-\\d{2})([T ](\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)(Z|([+-]\\d{2}:\\d{2}))?)?$/\n    return (dateStr ==~ isoRegex)\n}\n\ndef parseIsoToMillis = { dateStr ->\n    try {\n        if (dateStr.length() == 10) {   // YYYY-MM-DD\n            // Parse as LocalDate, turn into start of day\n            return LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE)\n                .atStartOfDay(ZoneOffset.UTC).toInstant().toEpochMilli()\n        } else {\n            // Parse full date-time\n            LocalDateTime ldt\n            try {\n                ldt = LocalDateTime.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n                return ldt.toInstant(ZoneOffset.UTC).toEpochMilli()\n            } catch (DateTimeParseException e) {\n                // Try handle with offset if present\n                return OffsetDateTime.parse(dateStr, DateTimeFormatter.ISO_OFFSET_DATE_TIME)\n                    .toInstant().toEpochMilli()\n            }\n        }\n    } catch (Exception e) {\n        return null // or handle error\n    }\n}\n\ndef foundIsoDate = false\nif (sql_output && sql_output instanceof List && sql_output.size() > 0) {\n    foundIsoDate = isIsoDateFormat(sql_output[0][xAxisValue])\n}\n\nif (foundIsoDate) {\n    sql_output.each { row ->\n        def isoDate = row[xAxisValue]\n        if (isoDate && isIsoDateFormat(isoDate)) {\n            def epochMillis = parseIsoToMillis(isoDate)\n            row[xAxisValue] = epochMillis\n        }\n    }\n    return [\n        \"blockType\": binding.hasVariable(\"blockType\") ? binding.getVariable(\"blockType\") : \"Chart\",\n        \"data\": [\n            \"chartType\": chartType,\n            \"xAxisValue\": xAxisValue,\n            \"series\": series,\n            \"xAxis\": [\"scale\": \"time\", \"label\": xAxisLabel],\n            \"yAxis\": [\n                \"scale\": \"linear\",\n                \"label\": yAxisLabel,\n                \"tickLabels\": [\n                    \"enabled\": true,\n                    \"notation\": \"compact\",\n                    \"type\": \"NUMBER\"\n                ]\n            ],\n            \"chartData\": sql_output,\n            \"title\": title\n        ]\n    ]\n}\n\nreturn [\n    \"blockType\": binding.hasVariable(\"blockType\") ? binding.getVariable(\"blockType\") : \"Chart\",\n    \"data\": [\n        \"chartType\": chartType,\n        \"xAxisValue\": xAxisValue,\n        \"series\": series,\n        \"xAxis\": [\"scale\": \"category\", \"label\": xAxisLabel],\n        \"yAxis\": [\n            \"scale\": \"linear\",\n            \"label\": yAxisLabel,\n            \"tickLabels\": [\n                \"enabled\": true,\n                \"notation\": \"compact\",\n                \"type\": \"NUMBER\"\n            ]\n        ],\n        \"chartData\": sql_output,\n        \"title\": title\n    ]\n]",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"yAxisLabel":"{{ e4x3d.outputs.item.yAxisLabel }}",
					"blockType":"Chart",
					"xAxisValue":"{{ etJzE.outputs.result.xAxisValueMod }}",
					"chartType":"{{ e4x3d.outputs.item.chartType }}",
					"xAxisLabel":"{{ e4x3d.outputs.item.xAxisLabel }}",
					"title":"{{ e4x3d.outputs.item.title }}",
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ etJzE.outputs.result.lowerSqlOutput }}",
						"items":"{{ etJzE.outputs.result.lowerSqlOutput[0] }}"
					},
					"series":{
						"ua:type":"mappedArray",
						"items":{
							"label":"{{ etJzE.outputs.result.seriesMod[0].label }}",
							"key":"{{ etJzE.outputs.result.seriesMod[0].key }}"
						},
						"source":"{{ etJzE.outputs.result.seriesMod }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":53,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Ij2VY@hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n@n",
			"id":"eDZkl",
			"index":24,
			"inputs":{
				"itemToAdd":{
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ Nujqs.outputs.result.data }}",
					"blockType":"{{ Nujqs.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add an item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Ij2VY@hTtZF@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@1@n@n",
			"id":"ZuVTt",
			"index":25,
			"inputs":{
				"itemToAdd":{
					"blockType":"{{ e4x3d.outputs.item.blockType }}",
					"chartType":"{{ e4x3d.outputs.item.chartType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":34,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2",
			"id":"rGyIr@2",
			"index":26,
			"inputs":{
				"name":"PIE",
				"conditions":{
					"filters":[
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"PIE"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.input.series.items.label",
					"root.parameters.input.series.items.key",
					"root.parameters.input.xAxisValue",
					"root.parameters.input.sql_output.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2",
			"id":"3GtES",
			"index":27,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"isCorrect":{
							"type":"boolean",
							"title":"isCorrect"
						},
						"series":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"Label"
									},
									"key":{
										"type":"string",
										"title":"Key"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Series"
						},
						"xAxisValue":{
							"type":"string",
							"title":"X Axis Value"
						},
						"lowerSqlOutput":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Lower Sql Output"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"input":{
							"type":"object",
							"properties":{
								"series":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"label":{
												"type":"string",
												"title":"label"
											},
											"key":{
												"type":"string",
												"title":"key"
											}
										},
										"additionalProperties":false
									},
									"title":"series"
								},
								"xAxisValue":{
									"type":"string",
									"title":"xAxisValue"
								},
								"sql_output":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{},
										"additionalProperties":false
									},
									"title":"sql_output"
								}
							},
							"additionalProperties":false,
							"title":"input",
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"// def series = input.get('series', [])\n// def sql_output = input.get('sql_output', [])\n// def xAxisValue = input.get('xAxisValue', '')\n\n// for (entry in series) {\n//     def key = entry['key']\n//     boolean keyExists = sql_output.every { it.containsKey(key) }\n//     if (!keyExists) return [\"isCorrect\": false]\n// }\n// boolean xAxisExists = sql_output.every { it.containsKey(xAxisValue) }\n\n// if (series.isEmpty() || !xAxisExists ) {\n//     return [\"isCorrect\": false]\n// }\n// // ||sql_output.size() <= 1\n// def valueKey = series[0]['key']\n\n// if (valueKey == xAxisValue) {\n//     return [\"isCorrect\": false]\n// }\n\n// boolean allRowsValid = sql_output.every { \n//     it.containsKey(xAxisValue) && it.containsKey(valueKey)\n// }\n\n// return [\"isCorrect\": allRowsValid]\n\ndef series = input.get('series', [])\ndef sql_output = input.get('sql_output', [])\n\ndef lowerSqlOutput = sql_output.collect { row ->\n    row.collectEntries { k, v -> [k.toLowerCase(), v] }\n}\n\ndef xAxisValue = input.get('xAxisValue', '')\n\n// Lowercase xAxisValue just for logic and final structure\ndef lowerXAxisValue = xAxisValue?.toLowerCase()\n\n// Lowercase only the key in each series; label remains unchanged\ndef lowerSeries = series.collect { entry ->\n    [\n        key: entry['key']?.toLowerCase(),\n        label: entry['label']\n    ]\n}\n\n// Prepare list of lowercased series keys for logic\ndef seriesKeys = lowerSeries.collect { it['key'] }\n\n// For each row, lowercase its keys for easier comparison\ndef sql_output_normalized = sql_output.collect { row ->\n    row.collectEntries { k, v -> [(k.toLowerCase()): v] }\n}\n\n// Ensure every row has all series keys\nfor (seriesKey in seriesKeys) {\n    boolean keyExists = sql_output_normalized.every { it.containsKey(seriesKey) }\n    if (!keyExists) return [\"isCorrect\": false, \"series\": lowerSeries, \"xAxisValue\": lowerXAxisValue,\"lowerSqlOutput\":lowerSqlOutput]\n}\nboolean xAxisExists = sql_output_normalized.every { it.containsKey(lowerXAxisValue) }\n\nif (lowerSeries.isEmpty() || !xAxisExists ) {\n    return [\"isCorrect\": false, \"series\": lowerSeries, \"xAxisValue\": lowerXAxisValue,\"lowerSqlOutput\" :lowerSqlOutput]\n}\n\ndef valueKey = lowerSeries[0]['key']\n\nif (valueKey == lowerXAxisValue) {\n    return [\"isCorrect\": false, \"series\": lowerSeries, \"xAxisValue\": lowerXAxisValue,\"lowerSqlOutput\":lowerSqlOutput]\n}\n\nboolean allRowsValid = sql_output_normalized.every {\n    it.containsKey(lowerXAxisValue) && it.containsKey(valueKey)\n}\n\n// Finally, output only lowercased keys as specified\nreturn [\n    \"isCorrect\": allRowsValid,\n    \"series\": lowerSeries,\n    \"xAxisValue\": lowerXAxisValue,\n    \"lowerSqlOutput\" : lowerSqlOutput\n]",
				"isAsync":false,
				"parameters":{
					"input":{
						"series":{
							"source":"{{ e4x3d.outputs.item.series }}",
							"ua:type":"mappedArray",
							"items":{
								"label":"{{ e4x3d.outputs.item.series[0].label }}",
								"key":"{{ e4x3d.outputs.item.series[0].key }}"
							}
						},
						"xAxisValue":"{{ e4x3d.outputs.item.xAxisValue }}",
						"sql_output":{
							"ua:type":"mappedArray",
							"source":"{{ _A1Aj6.outputs.result.sql_output }}",
							"items":"{{ _A1Aj6.outputs.result.sql_output[0] }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":11,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2",
			"id":"cm8nq",
			"index":28,
			"inputs":{
				"filters":[
					{
						"property":"{{ 3GtES.outputs.result.isCorrect }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.series.items.label",
					"root.parameters.series.items.key",
					"root.parameters.sql_output.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"cm8nq@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2@y",
			"id":"oOSSV",
			"index":29,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"data":{
							"type":"object",
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"series":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"label"
									},
									"key":{
										"type":"string",
										"title":"key"
									}
								},
								"additionalProperties":false
							},
							"title":"series"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"xAxisValue":{
							"type":"string",
							"title":"xAxisValue"
						},
						"chartType":{
							"type":"string",
							"title":"chartType"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					}
				},
				"code":"// TODO: validate sql_output\nreturn [\"blockType\": binding.hasVariable(\"blockType\") ? binding.getVariable(\"blockType\") : \"Chart\", \"data\": [\"chartType\": chartType, \"xAxisValue\": xAxisValue, \"series\": series, \"chartData\": sql_output,\"title\":title]]\n\n",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"blockType":"Chart",
					"xAxisValue":"{{ 3GtES.outputs.result.xAxisValue }}",
					"chartType":"{{ e4x3d.outputs.item.chartType }}",
					"title":"{{ e4x3d.outputs.item.title }}",
					"series":{
						"ua:type":"mappedArray",
						"items":{
							"label":"{{ 3GtES.outputs.result.series[0].label }}",
							"key":"{{ 3GtES.outputs.result.series[0].key }}"
						},
						"source":"{{ 3GtES.outputs.result.series }}"
					},
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ 3GtES.outputs.result.lowerSqlOutput }}",
						"items":"{{ 3GtES.outputs.result.lowerSqlOutput[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":53,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"cm8nq@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2@y",
			"id":"m8LI6",
			"index":30,
			"inputs":{
				"itemToAdd":{
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ oOSSV.outputs.result.data }}",
					"blockType":"{{ oOSSV.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add an item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"cm8nq@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2@y",
			"id":"PcEPO",
			"index":31,
			"inputs":{
				"itemToAdd":{
					"chartType":"{{ e4x3d.outputs.item.chartType }}",
					"blockType":"{{ oOSSV.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.chartType.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"cm8nq@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2@n",
			"id":"l8aUU",
			"index":32,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"data":{
							"type":"object",
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"hasTable":{
							"type":"boolean",
							"title":"Has Table"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"chartType":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chart Type"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					},
					"additionalProperties":false,
					"required":[
						"sql_output"
					]
				},
				"compile_static":false,
				"code":"if (chartType.contains('Table')) {\n    return [\"hasTable\":true]\n}\n\n\ndef new_columns = []\nfor (def label in sql_output[0].keySet()) {\n    def new_col = [\"label\": label, \"type\": \"STRING\"]\n    new_columns.add(new_col)\n}\ndef results = [\"blockType\": \"Table\", \"data\": [\"columns\": new_columns, \"rowData\": sql_output, \"title\":title]]\nreturn results",
				"isAsync":false,
				"parameters":{
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.sql_output }}",
						"items":"{{ _A1Aj6.outputs.result.sql_output[0] }}"
					},
					"chartType":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.chartType }}",
						"items":"{{ _A1Aj6.outputs.result.chartType[0] }}"
					},
					"title":"{{ e4x3d.outputs.item.title }}"
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":340,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"cm8nq@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2@n",
			"id":"qzViy",
			"index":33,
			"inputs":{
				"filters":[
					{
						"property":"{{ _A1Aj6.outputs.result.hasTable  }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":53,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qzViy@cm8nq@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2@n@n",
			"id":"Q9Uf2",
			"index":34,
			"inputs":{
				"itemToAdd":{
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ l8aUU.outputs.result.data }}",
					"blockType":"{{ l8aUU.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add an item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qzViy@cm8nq@rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@2@n@n",
			"id":"A89x4",
			"index":35,
			"inputs":{
				"itemToAdd":{
					"blockType":"{{ l8aUU.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":269,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@3",
			"id":"rGyIr@3",
			"index":36,
			"inputs":{
				"name":"DUAL_AXES",
				"conditions":{
					"filters":[
						{
							"property":"{{ e4x3d.outputs.item.chartType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"DUAL_AXES"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.yAxis.seriesY.items.key",
					"root.parameters.yAxis.seriesY.items.label",
					"root.parameters.yAxisRight.seriesRight.items.key",
					"root.parameters.yAxisRight.seriesRight.items.label",
					"root.parameters.sql_output.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":68,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@3",
			"id":"6WgW1",
			"index":37,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"data":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"Block Type"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"chartType":{
							"type":"string",
							"title":"chartType"
						},
						"xAxisValue":{
							"type":"string",
							"title":"xAxisValue"
						},
						"yAxis":{
							"type":"object",
							"properties":{
								"seriesY":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"key":{
												"type":"string",
												"title":"key"
											},
											"label":{
												"type":"string",
												"title":"label"
											}
										},
										"additionalProperties":false
									},
									"title":"seriesY"
								}
							},
							"title":"yAxis",
							"additionalProperties":false,
							"required":[]
						},
						"yAxisRight":{
							"type":"object",
							"properties":{
								"seriesRight":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"key":{
												"type":"string",
												"title":"key"
											},
											"label":{
												"type":"string",
												"title":"label"
											}
										},
										"additionalProperties":false
									},
									"title":"seriesRight"
								}
							},
							"title":"yAxisRight",
							"additionalProperties":false,
							"required":[]
						},
						"yAxisValue":{
							"type":"string",
							"title":"yAxisValue"
						},
						"yAxisRightLabel":{
							"type":"string",
							"title":"yAxisRightLabel"
						},
						"xAxisLabel":{
							"type":"string",
							"title":"xAxisLabel"
						},
						"yAxisLabel":{
							"type":"string",
							"title":"Y Axis Label"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"sql_output"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					}
				},
				"code":"return [\"blockType\": blockType, \"data\": [\"chartType\": chartType, \"xAxisValue\": xAxisValue, \"xAxis\": [\"scale\": \"category\", \"label\": xAxisLabel], \"yAxis\": [\"scale\": \"linear\", \"label\": yAxisLabel, \"series\":yAxis.seriesY, \"visualisation\": \"COLUMN\", \"tickLabels\": [\"enabled\": true,\"decimalPlaces\": 0, \"notation\": \"compact\", \"type\": \"NUMBER\"]],\"yAxisRight\": [\"scale\": \"linear\", \"label\": yAxisRightLabel, \"series\":yAxisRight.seriesRight, \"tickLabels\": [\"enabled\": true, \"notation\": \"compact\", \"type\": \"NUMBER\"]], \"chartData\": sql_output]]",
				"compile_static":false,
				"parameters":{
					"blockType":"Chart",
					"chartType":"{{ e4x3d.outputs.item.chartType }}",
					"xAxisValue":"{{ e4x3d.outputs.item.xAxisValue }}",
					"yAxisRightLabel":"{{ e4x3d.outputs.item.yAxisRightLabel }}",
					"xAxisLabel":"{{ e4x3d.outputs.item.xAxisLabel }}",
					"yAxisLabel":"{{ e4x3d.outputs.item.yAxisLabel }}",
					"title":"{{ e4x3d.outputs.item.title }}",
					"yAxis":{
						"seriesY":{
							"source":"{{ e4x3d.outputs.item.yAxis.series }}",
							"ua:type":"mappedArray",
							"items":{
								"key":"{{ e4x3d.outputs.item.yAxis.series[0].key }}",
								"label":"{{ e4x3d.outputs.item.yAxis.series[0].label }}"
							}
						}
					},
					"yAxisRight":{
						"seriesRight":{
							"source":"{{ e4x3d.outputs.item.yAxisRight.series }}",
							"ua:type":"mappedArray",
							"items":{
								"key":"{{ e4x3d.outputs.item.yAxisRight.series[0].key }}",
								"label":"{{ e4x3d.outputs.item.yAxisRight.series[0].label }}"
							}
						}
					},
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ _A1Aj6.outputs.result.sql_output }}",
						"items":"{{ _A1Aj6.outputs.result.sql_output[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":67,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@3",
			"id":"v588g",
			"index":38,
			"inputs":{
				"itemToAdd":{
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ 6WgW1.outputs.result.data }}",
					"blockType":"{{ 6WgW1.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rGyIr@Zj7Jb@e4x3d@_J8P8H-1@l@2@3",
			"id":"OIS97",
			"index":39,
			"inputs":{
				"itemToAdd":{
					"chartType":"{{ e4x3d.outputs.item.chartType }}",
					"blockType":"{{ 6WgW1.outputs.result.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":16,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@2",
			"id":"_wgR80",
			"index":40,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"abc":{
							"type":"string",
							"title":"Abc"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"abc":"a"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"abc":{
							"type":"string",
							"title":"Abc"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":34,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@3",
			"id":"Zj7Jb@3",
			"index":41,
			"inputs":{
				"name":"Typography",
				"conditions":{
					"filters":[
						{
							"property":"{{ e4x3d.outputs.item.blockType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"Typography"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":287,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@3",
			"id":"nfXpI",
			"index":42,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"data":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Data"
						},
						"skip":{
							"type":"boolean",
							"title":"Skip"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"data":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Data"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(binding.hasVariable('data') && data?.text) {\n  return [\"data\": data]\n} else {\n  return [\"skip\" : true]\n}\n"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":279,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Zj7Jb@e4x3d@_J8P8H-1@l@3",
			"id":"wb1Jw",
			"index":43,
			"inputs":{
				"filters":[
					{
						"property":"{{ _A1Aj6.outputs.result.skip  }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":53,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"wb1Jw@Zj7Jb@e4x3d@_J8P8H-1@l@3@n",
			"id":"qBSwL",
			"index":44,
			"inputs":{
				"itemToAdd":{
					"blockType":"{{ e4x3d.outputs.item.blockType }}",
					"title":"{{ e4x3d.outputs.item.title }}",
					"data":"{{ nfXpI.outputs.result.data }}"
				},
				"insertLocation":"END",
				"listName":"{{ vsOon.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add an item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"wb1Jw@Zj7Jb@e4x3d@_J8P8H-1@l@3@n",
			"id":"qyvVv",
			"index":45,
			"inputs":{
				"itemToAdd":{
					"blockType":"{{ e4x3d.outputs.item.blockType }}"
				},
				"insertLocation":"END",
				"listName":"{{ gWAJZ.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":16,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"e4x3d@_J8P8H-1@l",
			"id":"_jmdRh",
			"index":46,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"abc":{
							"type":"string",
							"title":"Abc"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"abc":"a"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"abc":{
							"type":"string",
							"title":"Abc"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.results.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":25,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_J8P8H-1",
			"id":"n_IMR30",
			"index":47,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"res":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Res"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"results":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Results"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(!binding.hasVariable('results')) return ['res' : []]\nresults.each { block ->\n    block.data.columns.each { col ->\n        if (col.type == \"DATETIME\") col.type = \"DATE\"\n    }\n}\nreturn ['res' : results]",
				"parameters":{
					"results":{
						"ua:type":"mappedArray",
						"source":"{{ vsOon.outputs.items }}",
						"items":"{{ vsOon.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_J8P8H-1",
			"id":"_zhCwS",
			"index":48,
			"inputs":{
				"result":{
					"final_results":{
						"ua:type":"mappedArray",
						"source":"{{ n_IMR30.outputs.result.res }}",
						"items":"{{ n_IMR30.outputs.result.res[0] }}"
					},
					"publishWaht":{
						"source":"{{ gWAJZ.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"blockType":"{{ gWAJZ.outputs.items[0].blockType }}",
							"chartType":"{{ gWAJZ.outputs.items[0].chartType }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":32562,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":59
}