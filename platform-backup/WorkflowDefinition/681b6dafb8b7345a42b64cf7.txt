{
	"appsUsed":[
		
	],
	"createdTime":1747641655839,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243502227,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbecee5e003e08cdeb2e18",
		"status":"DEPLOYED",
		"version":48,
		"workflowVersion":78
	},
	"edges":[
		{
			"fromNodeId":"_zCuz3",
			"priority":0,
			"skip":false,
			"toNodeId":"YdRPT",
			"type":"next"
		},
		{
			"fromNodeId":"YdRPT",
			"priority":0,
			"skip":false,
			"toNodeId":"35BuH",
			"type":"next"
		},
		{
			"fromNodeId":"35BuH",
			"priority":0,
			"skip":false,
			"toNodeId":"LMjYV",
			"type":"next"
		},
		{
			"fromNodeId":"LMjYV",
			"priority":0,
			"skip":false,
			"toNodeId":"10Pgx",
			"type":"next"
		},
		{
			"fromNodeId":"10Pgx",
			"priority":0,
			"skip":false,
			"toNodeId":"_yzaLF",
			"type":"next"
		},
		{
			"fromNodeId":"_yzaLF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_mUxvo",
			"type":"next"
		},
		{
			"fromNodeId":"n_mUxvo",
			"priority":0,
			"skip":false,
			"toNodeId":"_BdZ4M",
			"type":"next"
		},
		{
			"fromNodeId":"_BdZ4M",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_SXfA5",
			"type":"if"
		},
		{
			"fromNodeId":"_SXfA5",
			"priority":0,
			"skip":false,
			"toNodeId":"_13O5i",
			"type":"next"
		},
		{
			"fromNodeId":"_UlXln",
			"priority":0,
			"skip":false,
			"toNodeId":"_13O5i",
			"type":"next"
		},
		{
			"fromNodeId":"_BdZ4M",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_13O5i",
			"type":"next"
		},
		{
			"fromNodeId":"_13O5i",
			"priority":0,
			"skip":false,
			"toNodeId":"_NIL5D",
			"type":"loop"
		},
		{
			"fromNodeId":"_NIL5D",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"8ULra",
			"type":"error"
		},
		{
			"fromNodeId":"_NIL5D",
			"priority":0,
			"skip":false,
			"toNodeId":"n_EgQSY",
			"type":"next"
		},
		{
			"fromNodeId":"8ULra",
			"priority":0,
			"skip":false,
			"toNodeId":"n_EgQSY",
			"type":"next"
		},
		{
			"fromNodeId":"n_EgQSY",
			"priority":0,
			"skip":false,
			"toNodeId":"_drmp2",
			"type":"next"
		},
		{
			"fromNodeId":"_drmp2",
			"priority":0,
			"skip":false,
			"toNodeId":"_UlXln",
			"type":"next"
		},
		{
			"fromNodeId":"_13O5i",
			"priority":0,
			"skip":false,
			"toNodeId":"_ARkQz",
			"type":"next"
		},
		{
			"fromNodeId":"_ARkQz",
			"priority":0,
			"skip":false,
			"toNodeId":"_Wgt81",
			"type":"loop"
		},
		{
			"fromNodeId":"_Wgt81",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"_uRpkx",
			"type":"error"
		},
		{
			"fromNodeId":"_Wgt81",
			"priority":0,
			"skip":false,
			"toNodeId":"_2D8cu",
			"type":"next"
		},
		{
			"fromNodeId":"_uRpkx",
			"priority":0,
			"skip":false,
			"toNodeId":"_2D8cu",
			"type":"next"
		},
		{
			"fromNodeId":"_2D8cu",
			"priority":0,
			"skip":false,
			"toNodeId":"_nLbR6",
			"type":"next"
		},
		{
			"fromNodeId":"_nLbR6",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_ARkQz",
			"type":"next"
		},
		{
			"fromNodeId":"_ARkQz",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cSoqt",
			"type":"next"
		},
		{
			"fromNodeId":"n_cSoqt",
			"priority":0,
			"skip":false,
			"toNodeId":"02QzQ",
			"type":"next"
		},
		{
			"fromNodeId":"02QzQ",
			"priority":0,
			"skip":false,
			"toNodeId":"Hztfy",
			"type":"next"
		},
		{
			"fromNodeId":"Hztfy",
			"priority":0,
			"skip":false,
			"toNodeId":"_TlsfS",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"681b6dafb8b7345a42b64cf7",
	"lastModifiedBy":-1,
	"lcName":"text to workflow v2 | input filling tool",
	"modifiedTime":1759243541065,
	"name":"Text to Workflow v2 | Input Filling Tool",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":73,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_zCuz3",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"output":{
							"type":"string",
							"title":"output"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"node_id":{
										"type":"string",
										"title":"node_id",
										"help":"Real 5 character Id of the node for which you need to fill inputs."
									},
									"instructions":{
										"type":"string",
										"title":"instructions",
										"help":"Describe the inputs to be filled in natural language. Do not ask for any clarification from the user."
									}
								},
								"additionalProperties":false,
								"required":[
									"node_id",
									"instructions"
								]
							},
							"title":"nodes"
						}
					},
					"additionalProperties":false,
					"required":[
						"nodes"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":73,
				"resourceName":"variable_by_unifyapps_get_session_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"YdRPT",
			"index":2,
			"inputs":{
				"variableSchema":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Get Session Variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":115,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"35BuH",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"updatedWorkflowJson":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"updatedWorkflowJson"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"caseId":"{{ YdRPT.outputs.caseId }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"updatedWorkflowJson":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"updatedWorkflowJson"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"caseId / workflow json",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":333,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"LMjYV",
			"index":4,
			"inputs":{
				"automationId":"680f65be0d523f6cdbfe8437",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ 35BuH.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"current_workflow_state",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":116,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"10Pgx",
			"index":5,
			"inputs":{
				"variables":[
					{
						"source":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"value":"{{ LMjYV.outputs.workflowJson }}"
					}
				]
			},
			"skip":false,
			"subTitle":"updatedWorkflowJson",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{},
				"visibleOptionalFields":[
					"root.parameters.nodes.items.node_id",
					"root.parameters.nodes.items.instructions"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":92,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_yzaLF",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sortedNodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"subTitle":{
										"type":"string",
										"title":"subTitle"
									},
									"fallbackMode":{
										"type":"string",
										"title":"fallbackMode"
									},
									"groupId":{
										"type":"string",
										"title":"groupId"
									},
									"context":{
										"type":"object",
										"properties":{
											"appName":{
												"type":"string",
												"title":"appName"
											},
											"resourceName":{
												"type":"string",
												"title":"resourceName"
											},
											"type":{
												"type":"string",
												"title":"type"
											}
										},
										"title":"context",
										"additionalProperties":false
									},
									"skip":{
										"type":"boolean",
										"title":"skip"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"trigger":{
										"type":"object",
										"properties":{
											"type":{
												"type":"string",
												"title":"type"
											}
										},
										"title":"trigger",
										"additionalProperties":false
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"instructions":{
										"type":"string",
										"title":"instructions"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"sortedNodes"
						},
						"cycle":{
							"type":"boolean",
							"title":"cycle"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"workflowJson":{
							"type":"object",
							"title":"workflowJson"
						},
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"node_id":{
										"type":"string",
										"title":"node_id"
									},
									"instructions":{
										"type":"string",
										"title":"instructions"
									}
								},
								"additionalProperties":false
							},
							"title":"nodes"
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"def nodesList = workflowJson.nodes\ndef edgesList = workflowJson.edges\n\n// Map of node ID to node object\ndef nodesMap = nodesList.collectEntries { [(it.id): it] }\n\n// Build adjacency list representation of the graph\ndef adjacencyList = [:].withDefault { [] }\nedgesList.each { edge ->\n    def fromNode = edge.fromNodeId\n    def toNode = edge.toNodeId\n    adjacencyList[fromNode] << toNode\n}\n\n// Perform topological sort using Kahn's Algorithm\ndef inDegree = [:].withDefault { 0 }\n\n// Initialize in-degree of each node\nnodesMap.keySet().each { nodeId ->\n    inDegree[nodeId] = 0\n}\n\n// Update in-degree based on edges\nedgesList.each { edge ->\n    inDegree[edge.toNodeId] = inDegree[edge.toNodeId] + 1\n}\n\n// Queue for nodes with in-degree 0\ndef queue = [] as Queue\n\ninDegree.each { nodeId, degree ->\n    if (degree == 0) {\n        queue << nodeId\n    }\n}\n\ndef sortedNodes = []\n\nwhile (!queue.isEmpty()) {\n    def node = queue.poll()\n    sortedNodes << nodesMap[node]\n\n    adjacencyList[node].each { adjacent ->\n        inDegree[adjacent] = inDegree[adjacent] - 1\n        if (inDegree[adjacent] == 0) {\n            queue << adjacent\n        }\n    }\n}\n\n// --- FILTER sortedNodes to only those in your original nodes list ---\n\n// Build a set of node_ids from your nodes list\ndef nodeIdsSet = workflowJson.nodes*.id as Set\n\n// Build a map from node_id to instructions\nenvNodes = nodes\ndef instructionsMap = envNodes.collectEntries { [ (it.node_id): it.instructions ] }\n\n// Filter and add instructions\ndef filteredSortedNodes = sortedNodes\n    .findAll { it.id in nodeIdsSet }\n    .collect { node ->\n      node + [ instructions: instructionsMap[node.id] ]\n    }\n\nif (sortedNodes.size() != nodesMap.size()) {\n    return [\"cycle\": true]\n} else {\n    return [\"cycle\": false, \"sortedNodes\": filteredSortedNodes]\n}",
				"isAsync":false,
				"parameters":{
					"workflowJson":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"nodes":{
						"source":"{{ _zCuz3.outputs.nodes }}",
						"ua:type":"mappedArray",
						"items":{
							"node_id":"{{ _zCuz3.outputs.nodes[0].node_id }}",
							"instructions":"{{ _zCuz3.outputs.nodes[0].instructions }}"
						}
					}
				}
			},
			"skip":true,
			"subTitle":"Sorted Fillable Nodes",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":460,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"n_mUxvo",
			"index":7,
			"inputs":{
				"automationId":"687101c0eb49b955d8bbbf8e",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"workflowGraph":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"nodes":{
						"source":"{{ _zCuz3.outputs.nodes }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ _zCuz3.outputs.nodes[0].node_id }}",
							"instructions":"{{ _zCuz3.outputs.nodes[0].instructions }}"
						}
					}
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Batch Actions",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":73,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_BdZ4M",
			"index":8,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_mUxvo.outputs.hasCycle }}",
						"filter":{
							"operator":"EQUAL",
							"value":"True"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":75,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_BdZ4M@_DWlKr-1@y",
			"id":"_SXfA5",
			"index":9,
			"inputs":{
				"result":{
					"output":"Input has been successfully filled in the Workflow. "
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":116,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_13O5i",
			"index":10,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_mUxvo.outputs.dynamicSchemas }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop on Nodes",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":460,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"_13O5i@_DWlKr-1@l",
			"id":"_NIL5D",
			"index":11,
			"inputs":{
				"automationId":"681b6d8e52dcee7c16bdd9cf",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"timeoutInSeconds":"60",
					"node":{
						"subTitle":"{{ _13O5i.outputs.item.subTitle }}",
						"fallbackMode":"{{ _13O5i.outputs.item.fallbackMode }}",
						"groupId":"{{ _13O5i.outputs.item.groupId }}",
						"context":{
							"appName":"{{ _13O5i.outputs.item.context.appName }}",
							"resourceName":"{{ _13O5i.outputs.item.context.resourceName }}",
							"type":"{{ _13O5i.outputs.item.context.type }}"
						},
						"skip":false,
						"id":"{{ _13O5i.outputs.item.id }}",
						"trigger":{
							"type":"{{ _13O5i.outputs.item.trigger.type }}"
						},
						"type":"{{ _13O5i.outputs.item.type }}",
						"title":"{{ _13O5i.outputs.item.title }}"
					},
					"caseId":"{{ 35BuH.outputs.caseId }}",
					"workflowDefinition":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"user_query":"{{ _13O5i.outputs.item.instructions }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Fill input for single node",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":263,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_NIL5D@_13O5i@_DWlKr-1@l@error",
			"id":"8ULra",
			"index":12,
			"inputs":{
				"loop":"_13O5i"
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":460,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_13O5i@_DWlKr-1@l",
			"id":"n_EgQSY",
			"index":13,
			"inputs":{
				"automationId":"68779ee170d33c2f9505623a",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"schema":"{{ _NIL5D.outputs.schema }}",
					"workflowDefinition":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"inputSchema":"{{ _NIL5D.outputs.inputSchema }}",
					"nodeID":"{{ _NIL5D.outputs.nodeID }}"
				}
			},
			"skip":true,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.inputs.schema",
					"root.parameters.inputs.nodeId",
					"root.parameters.inputs.workflowDefinition",
					"root.parameters.inputs.inputSchema",
					"root.parameters.inputs.outputSchema"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":96,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_13O5i@_DWlKr-1@l",
			"id":"_drmp2",
			"index":14,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"updatedWorkflowDefinition":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"updatedWorkflowDefinition"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"inputs":{
							"type":"object",
							"properties":{
								"schema":{
									"type":"object",
									"title":"schema"
								},
								"nodeId":{
									"type":"object",
									"title":"nodeId"
								},
								"workflowDefinition":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Workflow Definition"
								},
								"inputSchema":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Input Schema"
								},
								"outputSchema":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Output Schema"
								}
							},
							"title":"inputs",
							"additionalProperties":false,
							"required":[]
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"/* ============================================================\n * Copy inputs.schema → node.inputs.setup / node.inputs.result\n * (Callables START nodes only)\n * ============================================================ */\n\n/* ---------------- helpers ---------------- */\ndef _titleize = { String s ->\n    if (!s) return s\n    s.split(/[_\\s]+/)*.collect { it.capitalize() }.join(' ')\n}\n\ndef _asObjSchema = { Map src, List reqHint = null ->\n    if (src?.type == 'object' && src?.properties instanceof Map) {\n        src.properties.each { k, v ->\n            if (v instanceof Map && !v.title) v.title = _titleize(k)\n        }\n        if (!src.containsKey('additionalProperties')) src.additionalProperties = false\n        if (!(src.required instanceof List)) src.required = (reqHint ?: [])\n        return src\n    }\n    Map props = [:]\n    src?.each { k, v ->\n        if (v instanceof Map) {\n            props[k] = [\n                type : v.type  ?: 'string',\n                title: v.title ?: _titleize(k)\n            ]\n            if (v.type == 'object') {\n                props[k].properties           = (v.properties instanceof Map) ? v.properties : [:]\n                props[k].additionalProperties = false\n            }\n        }\n    }\n    return [\n        type                 : 'object',\n        properties           : props,\n        additionalProperties : false,\n        required             : (reqHint ?: [])\n    ]\n}\n\n/* ——— renamed the closure parameter from `inSchema` → `wrapper` ——— */\ndef _extractSchemaBlock = { Map wrapper ->\n    (wrapper?.schema instanceof Map) ? wrapper.schema : [:]\n}\n\n/* ---------------- core ---------------- */\ndef wf = inputs?.workflowDefinition\nif (!(wf?.nodes instanceof List)) {\n    return [error:'workflowDefinition.nodes missing or invalid',\n            updatedWorkflowDefinition: wf]\n}\n\ndef targetNodeId = inputs?.nodeId ?: inputs?.nodeID ?: inputs?.nodeid ?: inputs?.node_id\nif (!targetNodeId) {\n    return [error:'Missing nodeId', updatedWorkflowDefinition:wf]\n}\n\ndef node = wf.nodes.find { it?.id == targetNodeId }\nif (!node) {\n    return [error:\"Node '${targetNodeId}' not found\", updatedWorkflowDefinition:wf]\n}\n\n/* ---- NEW: copy `inputs.schema` directly into node.inputs ---- */\nif (inputs?.schema instanceof Map) {\n    if (!(node.inputs instanceof Map)) node.inputs = [:]\n    node.inputs.putAll(new LinkedHashMap(inputs.schema))  // deep‑clone & merge\n}\n/* ------------------------------------------------------------ */\n/* -----------------------------------------------------------------\n * SPECIAL-CASE ─ variable_by_unifyapps_create_variables\n * ----------------------------------------------------------------- */\nif (node?.context?.resourceName == 'variable_by_unifyapps_create_variables') {\n    // 2) Promote inbound schemas (only if they exist)\n    if (inputs?.inputSchema instanceof Map) {\n        node.inputSchema = new LinkedHashMap(inputs.inputSchema)\n    }\n    if (inputs?.outputSchema instanceof Map) {\n        node.outputSchema = new LinkedHashMap(inputs.outputSchema)\n    }\n    return [updatedWorkflowDefinition: wf]\n}\n\n/* Incoming declarative schema payload\n   (renamed from `inSchema` → `inpSchema` to avoid the clash) */\nMap inpSchema = (inputs?.inputSchema instanceof Map) ? inputs.inputSchema : [:]\n\n/* Prefill/default values from `inputs.schema` */\nMap prefillVals = (inputs?.schema instanceof Map) ? inputs.schema : [:]\n\n/* Only reshape Callables START nodes */\nboolean isCallableStart =\n    node?.context?.appName == 'callables' &&\n    (node?.trigger?.type ?: '').toString().toUpperCase() == 'CALLABLE' &&\n    node?.type == 'START'\n\nif (isCallableStart) {\n\n    Map setupSrc  = (inpSchema?.setup  instanceof Map) ? inpSchema.setup  : [:]\n    Map resultSrc = (inpSchema?.result instanceof Map) ? inpSchema.result : [:]\n\n    if (setupSrc.isEmpty() && resultSrc.isEmpty()) {\n        Map blk = _extractSchemaBlock(inpSchema)\n        if (!blk.isEmpty()) {\n            setupSrc = blk\n            boolean cloneSchemaIntoResult = false\n            if (cloneSchemaIntoResult) resultSrc = blk\n        }\n    }\n\n    Map existingSetup  = (node?.inputs?.setup  instanceof Map) ? node.inputs.setup  : [:]\n    Map existingResult = (node?.inputs?.result instanceof Map) ? node.inputs.result : [:]\n\n    Map setupBlock  = !setupSrc.isEmpty()  ? _asObjSchema(setupSrc)  : _asObjSchema(existingSetup)\n    Map resultBlock = !resultSrc.isEmpty() ? _asObjSchema(resultSrc) : _asObjSchema(existingResult)\n\n    boolean addDefaults = true\n    if (addDefaults) {\n        prefillVals.each { k, v ->\n            if (setupBlock?.properties?.containsKey(k)) {\n                setupBlock.properties[k].default = v\n            }\n        }\n    }\n\n    node.inputs = [\n        result: resultBlock,\n        setup : setupBlock\n    ]\n\n} else {\n    if (!prefillVals.isEmpty()) node.inputs = prefillVals\n}\n\n/* We DO NOT touch node.inputSchema per your instruction. */\nreturn [updatedWorkflowDefinition: wf]",
				"isAsync":false,
				"parameters":{
					"inputs":{
						"workflowDefinition":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"schema":"{{ _NIL5D.outputs.schema }}",
						"inputSchema":"{{ _NIL5D.outputs.inputSchema }}",
						"nodeId":"{{ _NIL5D.outputs.nodeID }}",
						"outputSchema":"{{ _NIL5D.outputs.outputSchema }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Update workflow with filled current node",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_13O5i@_DWlKr-1@l",
			"id":"_UlXln",
			"index":15,
			"inputs":{
				"variables":[
					{
						"source":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"value":"{{ _drmp2.outputs.result.updatedWorkflowDefinition }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Update Workflow",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":116,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_ARkQz",
			"index":16,
			"inputs":{
				"repeatMode":"BATCH",
				"listSource":"{{ n_mUxvo.outputs.nonDynamicSchemas }}",
				"captureIterations":false,
				"batchSize":15
			},
			"skip":false,
			"subTitle":"Loop on Nodes",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":450,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"_ARkQz@_DWlKr-1@l",
			"id":"_Wgt81",
			"index":17,
			"inputs":{
				"automationId":"681b6d8e52dcee7c16bdd9cf",
				"runtimeConnections":{},
				"synchronous":true,
				"triggerWorkflowWithRuntimeType":"DEFAULT",
				"distributeWorkflowLoad":false,
				"parametersList":{
					"source":"{{ _ARkQz.outputs.item }}",
					"ua:type":"mappedArray",
					"items":{
						"node":{
							"id":"{{ _ARkQz.outputs.item[0].id }}",
							"subTitle":"{{ _ARkQz.outputs.item[0].subTitle }}",
							"fallbackMode":"{{ _ARkQz.outputs.item[0].fallbackMode }}",
							"groupId":"{{ _ARkQz.outputs.item[0].groupId }}",
							"context":{
								"appName":"{{ _ARkQz.outputs.item[0].context.appName }}",
								"resourceName":"{{ _ARkQz.outputs.item[0].context.resourceName }}",
								"type":"{{ _ARkQz.outputs.item[0].context.type }}"
							},
							"skip":false,
							"title":"{{ _ARkQz.outputs.item[0].title }}",
							"type":"{{ _ARkQz.outputs.item[0].type }}",
							"trigger":{
								"type":"{{ _ARkQz.outputs.item[0].trigger.type }}"
							}
						},
						"caseId":"{{ 35BuH.outputs.caseId }}",
						"workflowDefinition":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"user_query":"{{ _ARkQz.outputs.item[0].instructions }}",
						"timeoutInSeconds":"60"
					}
				},
				"version":"-1"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Fill input for single node",
			"title":"Call automation (batch)",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":263,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Wgt81@_ARkQz@_DWlKr-1@l@error",
			"id":"_uRpkx",
			"index":18,
			"inputs":{
				"loop":"_ARkQz"
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.inputs.schema",
					"root.parameters.inputs.nodeId",
					"root.parameters.inputs.workflowDefinition",
					"root.parameters.inputs.inputSchema"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":96,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ARkQz@_DWlKr-1@l",
			"id":"_2D8cu",
			"index":19,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"updatedWorkflowDefinition":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"updatedWorkflowDefinition"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"results":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"nodeID":{
										"type":"string",
										"title":"Node ID"
									},
									"InputSchema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Input Schema"
									},
									"schema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Schema"
									}
								},
								"additionalProperties":false,
								"required":[
									"nodeID",
									"InputSchema",
									"schema"
								]
							},
							"title":"Results"
						},
						"workflowGraph":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Graph"
						}
					},
					"additionalProperties":false,
					"required":[
						"results",
						"workflowGraph"
					]
				},
				"compile_static":false,
				"code":"/* ----------------------------------------------------------------\n * 0.  Grab the graph that is present in the step’s local variables\n * ---------------------------------------------------------------- */\ndef wf = workflowGraph ?: [:]\nif (!(wf?.nodes instanceof List)) {\n    return [ error: \"workflowGraph.nodes is missing or not a list\" ]\n}\n\n/* ----------------------------------------------------------------\n * 1.  Iterate over every row coming from the Results repeater\n * ---------------------------------------------------------------- */\n(results instanceof List ? results : []).each { row ->\n\n    /* -------- 1 a.  Which node are we talking about? ------------- */\n    def nodeId = row?.nodeID ?: row?.nodeId ?: row?.id\n    if (!nodeId) return     // skip rows that don’t carry an ID\n\n    def node = wf.nodes.find { it.id == nodeId }\n    if (!node)   return     // quietly ignore IDs not present in the graph\n\n    /* -------- 1 b.  Concrete input values (“schema”) ------------- */\n    if (row.schema instanceof Map) {\n        node.inputs = (node.inputs instanceof Map)\n                      ? (node.inputs + row.schema)   // merge, don’t clobber\n                      : row.schema\n    }\n\n    /* -------- 1 c.  Formal input‑schema definition --------------- */\n    def inSchema = row?.InputSchema ?: row?.inputSchema     // accepts both cases\n    if (inSchema instanceof Map && !inSchema.isEmpty()) {\n        node.inputSchema = inSchema\n    }\n}\n\n/* ----------------------------------------------------------------\n * 2.  Hand the updated graph back to the next step\n * ---------------------------------------------------------------- */\nreturn [\n    updatedWorkflowDefinition: wf          // name matches your mapping block\n]\n",
				"isAsync":false,
				"parameters":{
					"results":{
						"source":"{{ _Wgt81.outputs.result }}",
						"ua:type":"mappedArray",
						"items":{
							"InputSchema":"{{ _Wgt81.outputs.result[0].inputSchema }}",
							"schema":"{{ _Wgt81.outputs.result[0].schema }}",
							"nodeID":"{{ _Wgt81.outputs.result[0].nodeID }}"
						}
					},
					"workflowGraph":"{{ 35BuH.outputs.updatedWorkflowJson }}"
				}
			},
			"skip":false,
			"subTitle":"Update workflow with filled current node",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ARkQz@_DWlKr-1@l",
			"id":"_nLbR6",
			"index":20,
			"inputs":{
				"variables":[
					{
						"source":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"value":"{{ _2D8cu.outputs.result.updatedWorkflowDefinition }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Update Workflow",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"n_cSoqt",
			"index":21,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"nodeIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Node Ids"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"workflowJson":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Json"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def workflowJson=binding.hasVariable(\"workflowJson\")?binding.workflowJson:[:]\ndef nodeIds=[]\n\nworkflowJson.nodes.each{node->\n  if(!node?.id.isEmpty())\n  {\n    nodeIds.add(node?.id?:\"\")\n  }\n\n}\nreturn [\"nodeIds\":nodeIds]",
				"parameters":{
					"workflowJson":"{{ LMjYV.outputs.workflowJson }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"02QzQ",
			"index":22,
			"inputs":{
				"automationId":"681b6a5bb8b7345a42b6159c",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ 35BuH.outputs.caseId }}",
					"changedNodeIds":{
						"ua:type":"mappedArray",
						"source":"{{ n_cSoqt.outputs.result.nodeIds }}",
						"items":"{{ n_cSoqt.outputs.result.nodeIds[0] }}"
					},
					"updatedWorkflowJson":"{{ 35BuH.outputs.updatedWorkflowJson }}"
				}
			},
			"skip":false,
			"subTitle":"Update Workflow State (and send to UI)",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"Hztfy",
			"index":23,
			"inputs":{
				"automationId":"681b6a0fb8b7345a42b612ef",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ 35BuH.outputs.caseId }}"
				}
			},
			"skip":true,
			"subTitle":"Send message to UI",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":65,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_TlsfS",
			"index":24,
			"inputs":{
				"result":{
					"output":"Input has been successfully filled in the Workflow. "
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":39717,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":79
}