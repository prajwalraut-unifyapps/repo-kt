{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1752514747656,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243628338,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed6c9213d707c2d274e0",
		"status":"DEPLOYED",
		"version":40,
		"workflowVersion":78
	},
	"edges":[
		{
			"fromNodeId":"GpPp2",
			"priority":0,
			"skip":false,
			"toNodeId":"_xNOFZ",
			"type":"next"
		},
		{
			"fromNodeId":"_xNOFZ",
			"priority":0,
			"skip":false,
			"toNodeId":"O9a4D",
			"type":"next"
		},
		{
			"fromNodeId":"O9a4D",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qD9Cg",
			"type":"next"
		},
		{
			"fromNodeId":"n_qD9Cg",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_YQdtZ",
			"type":"if"
		},
		{
			"fromNodeId":"n_YQdtZ",
			"priority":0,
			"skip":false,
			"toNodeId":"gbJBq",
			"type":"next"
		},
		{
			"fromNodeId":"n_qD9Cg",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"gbJBq",
			"type":"next"
		},
		{
			"fromNodeId":"gbJBq",
			"priority":0,
			"skip":false,
			"toNodeId":"6P6pn",
			"type":"next"
		},
		{
			"fromNodeId":"6P6pn",
			"priority":0,
			"skip":false,
			"toNodeId":"QiKPQ",
			"type":"next"
		},
		{
			"fromNodeId":"QiKPQ",
			"priority":0,
			"skip":false,
			"toNodeId":"pF3Sd",
			"type":"next"
		},
		{
			"fromNodeId":"pF3Sd",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Tcf9E",
			"type":"next"
		},
		{
			"fromNodeId":"n_Tcf9E",
			"priority":0,
			"skip":false,
			"toNodeId":"_v9jpu",
			"type":"next"
		},
		{
			"fromNodeId":"_v9jpu",
			"priority":0,
			"skip":false,
			"toNodeId":"n_6i0h1",
			"type":"next"
		},
		{
			"fromNodeId":"n_6i0h1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_33o6H",
			"type":"next"
		},
		{
			"fromNodeId":"n_33o6H",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2a1yY",
			"type":"next"
		},
		{
			"fromNodeId":"n_2a1yY",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_J4HyM",
			"type":"if"
		},
		{
			"fromNodeId":"n_J4HyM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_YRx3o",
			"type":"next"
		},
		{
			"fromNodeId":"n_2a1yY",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_VaDBg",
			"type":"next"
		},
		{
			"fromNodeId":"n_YRx3o",
			"priority":0,
			"skip":false,
			"toNodeId":"n_NwnE7",
			"type":"next"
		},
		{
			"fromNodeId":"n_VaDBg",
			"priority":0,
			"skip":false,
			"toNodeId":"n_NwnE7",
			"type":"next"
		},
		{
			"fromNodeId":"n_NwnE7",
			"priority":0,
			"skip":false,
			"toNodeId":"_0YITF",
			"type":"next"
		},
		{
			"fromNodeId":"_0YITF",
			"priority":0,
			"skip":false,
			"toNodeId":"_kUEOO",
			"type":"next"
		},
		{
			"fromNodeId":"_kUEOO",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_rVRqK",
			"type":"if"
		},
		{
			"fromNodeId":"_rVRqK",
			"priority":0,
			"skip":false,
			"toNodeId":"0eoZB",
			"type":"next"
		},
		{
			"fromNodeId":"_kUEOO",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_GVgit",
			"type":"next"
		},
		{
			"fromNodeId":"_GVgit",
			"priority":0,
			"skip":false,
			"toNodeId":"x4Q8x",
			"type":"next"
		},
		{
			"fromNodeId":"0eoZB",
			"priority":0,
			"skip":false,
			"toNodeId":"_O59t6",
			"type":"next"
		},
		{
			"fromNodeId":"x4Q8x",
			"priority":0,
			"skip":false,
			"toNodeId":"_O59t6",
			"type":"next"
		},
		{
			"fromNodeId":"_O59t6",
			"priority":0,
			"skip":false,
			"toNodeId":"DnQRn",
			"type":"next"
		},
		{
			"fromNodeId":"DnQRn",
			"priority":0,
			"skip":false,
			"toNodeId":"mnDjC",
			"type":"next"
		},
		{
			"fromNodeId":"mnDjC",
			"priority":0,
			"skip":false,
			"toNodeId":"y4EAP",
			"type":"next"
		},
		{
			"fromNodeId":"y4EAP",
			"priority":0,
			"skip":false,
			"toNodeId":"jREnR",
			"type":"next"
		},
		{
			"fromNodeId":"jREnR",
			"priority":0,
			"skip":false,
			"toNodeId":"auRVz",
			"type":"next"
		},
		{
			"fromNodeId":"auRVz",
			"priority":0,
			"skip":false,
			"toNodeId":"_UuNZv",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6874c3a21e67b3dde9571911",
	"lastModifiedBy":-1,
	"lcName":"generatechart tool (with blocks)",
	"modifiedTime":1759371945503,
	"name":"GenerateChart Tool (with Blocks)",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":16,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"GpPp2",
			"index":1,
			"inputs":{
				"result":{
					"additionalProperties":false,
					"type":"object",
					"required":[],
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"properties":{
						"toolOutput":{
							"type":"string",
							"title":"toolOutput"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"error":{
							"type":"string",
							"title":"Error"
						}
					}
				},
				"callableInterfaceId":"679484ef9c8ab5620dca9609",
				"setup":{
					"additionalProperties":false,
					"type":"object",
					"required":[],
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"properties":{
						"toolId":{
							"type":"string",
							"title":"toolId"
						},
						"toolInputs":{
							"type":"object",
							"title":"toolInputs"
						},
						"triggeredByAgentId":{
							"type":"string",
							"title":"Triggered By Agent Id"
						},
						"agentResponseMessageId":{
							"type":"string",
							"title":"Agent Response Message Id"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"executeUsingModel":{
							"type":"string",
							"title":"Execute Using Model"
						},
						"toolName":{
							"type":"string",
							"title":"Tool Name"
						},
						"actionId":{
							"type":"string",
							"title":"Action Id"
						},
						"toolAdditional":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tool Additional"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2059,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"_xNOFZ",
			"index":2,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ GpPp2.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_case",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"O9a4D",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"$comment":"resultPublish",
					"required":[],
					"properties":{
						"result":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"yAxisLabel":{
										"type":"string",
										"title":"yAxisLabel"
									},
									"data":{
										"type":"object",
										"properties":{
											"text":{
												"type":"string",
												"title":"text"
											}
										},
										"title":"data",
										"additionalProperties":false
									},
									"columns":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"label":{
													"type":"string",
													"title":"label"
												},
												"type":{
													"type":"string",
													"title":"type"
												},
												"value":{
													"type":"string",
													"title":"value"
												},
												"currencyCode":{
													"type":"string",
													"title":"currencyCode"
												}
											},
											"additionalProperties":false
										},
										"title":"columns"
									},
									"series":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"label":{
													"type":"string",
													"title":"label"
												},
												"key":{
													"type":"string",
													"title":"key"
												}
											},
											"additionalProperties":false
										},
										"title":"series"
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									},
									"xAxisValue":{
										"type":"string",
										"title":"xAxisValue"
									},
									"chartType":{
										"type":"string",
										"title":"chartType"
									},
									"xAxisLabel":{
										"type":"string",
										"title":"xAxisLabel"
									},
									"groupBy":{
										"type":"string",
										"title":"groupBy"
									},
									"yAxisRightLabel":{
										"type":"string",
										"title":"yAxisRightLabel"
									},
									"yAxis":{
										"type":"object",
										"properties":{
											"series":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"key":{
															"type":"string",
															"title":"key"
														},
														"label":{
															"type":"string",
															"title":"label"
														}
													},
													"additionalProperties":false
												},
												"title":"series"
											}
										},
										"title":"yAxis",
										"additionalProperties":false
									},
									"yAxisRight":{
										"type":"object",
										"properties":{
											"series":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"key":{
															"type":"string",
															"title":"key"
														},
														"label":{
															"type":"string",
															"title":"label"
														}
													},
													"additionalProperties":false
												},
												"title":"series"
											}
										},
										"title":"yAxisRight",
										"additionalProperties":false
									},
									"title":{
										"type":"string",
										"title":"title"
									}
								},
								"additionalProperties":false
							},
							"title":"result"
						},
						"chartId":{
							"type":"string",
							"title":"chartId"
						},
						"chartType":{
							"type":"string",
							"title":"Chart Type"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"toolInputs"
					],
					"properties":{
						"toolInputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tool Inputs"
						}
					}
				},
				"code":"if(!binding.hasVariable('toolInputs')){\n  return [:]\n}\nif(toolInputs.toBlocks) {\n  if(toolInputs.toBlocks.chartType){\n    return [\"result\" : [toolInputs.toBlocks], \"chartId\" : toolInputs.chartId, \"chartType\" :toolInputs.toBlocks.chartType ]\n  }else {\n    def chartType = toolInputs.toBlocks.blockType\n    if(toolInputs.toBlocks.blockType == \"Table\"){\n      return [\"result\" : [toolInputs.toBlocks], \"chartId\" : toolInputs.chartId, \"chartType\" : \"\" ]\n    }\n    toolInputs.toBlocks.blockType = \"Chart\"\n    return [\"result\" : [toolInputs.toBlocks], \"chartId\" : toolInputs.chartId, \"chartType\" : chartType ]\n  }\n}\nreturn toolInputs",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"toolInputs":"{{ GpPp2.outputs.toolInputs }}"
				}
			},
			"skip":false,
			"subTitle":"chartId",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":757,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"n_qD9Cg",
			"index":4,
			"inputs":{
				"filters":[
					{
						"property":"{{ O9a4D.outputs.result.chartId }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":797,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_qD9Cg@kFhpo-1@y",
			"id":"n_YQdtZ",
			"index":5,
			"inputs":{
				"result":{
					"success":false,
					"error":"ChartId is a required field. But is not present in the tool Input. "
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"gbJBq",
			"index":6,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_chunkNumber",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ O9a4D.outputs.result.chartId }}"
							}
						},
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ GpPp2.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"citation_store",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":66,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"6P6pn",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"out"
					],
					"properties":{
						"out":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"out"
						},
						"isNeg":{
							"type":"boolean",
							"title":"Is Neg"
						},
						"columnsInString":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Columns In String"
						},
						"allInString":{
							"type":"boolean",
							"title":"All In String"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"rows",
						"columnNames"
					],
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						},
						"columnNames":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Column Names"
						}
					}
				},
				"code":"\nif (!binding.hasVariable('rows') || rows.size() == 0) return [\"out\": [], \"isNegative\": false]\n\ndef sql_output = []\ndef stringsinCol = []\nrows.each { row ->\n    columnNames.each { col ->\n        if (!row.containsKey(col)) {\n            row[col] = \"null\"\n        }\n    }\n    sql_output << row\n}\n\ndef datePattern = ~/^\\d{4}-\\d{2}-\\d{2}$/\ndef typeMap = [\n    (String): \"STRING\",\n    (Integer): \"INTEGER\",\n    (Long): \"INTEGER\",\n    (Float): \"FLOAT\",\n    (Double): \"FLOAT\",\n    (BigDecimal): \"FLOAT\",\n    (Boolean): \"BOOLEAN\",\n    (Date): \"DATETYPE\",\n    (java.sql.Date): \"DATETYPE\"\n]\n\n// Gather column values by column\ndef columnValues = [:].withDefault{ [] }\nsql_output.each { row ->\n    columnNames.each { col ->\n        columnValues[col] << row[col]\n    }\n}\n\ndef schemaRec = [:]\ndef isNegative = false // <-- This will become true if any min < 0\ndef allStringCols = true\nif (sql_output) {\n    def firstRec = sql_output[0]\n    schemaRec = firstRec.collectEntries { k, v ->\n        def t = v?.getClass()\n        if (t == String) {\n            stringsinCol << k\n        }\n        if(t!=String) allStringCols=false\n\n        def mapped = (t == String && v ==~ datePattern) ? \"DATETYPE\" : typeMap.get(t)\n        if (mapped == null) mapped = t?.simpleName ?: \"UNKNOWN\"\n        if (mapped in [\"INTEGER\", \"FLOAT\"]) {\n            def vals = columnValues[k].collect {\n                if (it instanceof Number) return it\n                try { return it != null ? new BigDecimal(it.toString()) : null } catch(e) { return null }\n            }.findAll { it != null }\n            def minVal = vals && !vals.isEmpty() ? vals.min() : null\n            def maxVal = vals && !vals.isEmpty() ? vals.max() : null\n\n            // Check if any min is negative\n            if (minVal != null && minVal < 0) {\n                isNegative = true\n            }\n            [(k): [type: mapped, min: minVal, max: maxVal]]\n        } else {\n            [(k): [type: mapped, min: null, max: null]]\n        }\n    }\n}\n\nreturn [\"out\": (schemaRec ? [schemaRec] : []), \"isNegative\": isNegative, \"columnsInString\" : stringsinCol, \"allInString\" : allStringCols]\n\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"rows":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.rowData }}",
						"items":"{{ gbJBq.outputs.properties.rowData[0] }}"
					},
					"columnNames":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.columnData }}",
						"items":"{{ gbJBq.outputs.properties.columnData[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"QiKPQ",
			"index":8,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"outputMsgId":{
							"type":"string",
							"title":"outputMsgId"
						},
						"chartType":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chart Type"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"outputMsgId":{
							"type":"string",
							"title":"outputMsgId"
						},
						"chartType":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chart Type"
						},
						"_ua_variableDetails":{
							"items":{
								"properties":{
									"name":{
										"type":"string",
										"description":"Name of the variable"
									},
									"dataType":{
										"type":"string",
										"description":"Data type of the variable"
									},
									"description":{
										"type":"string",
										"description":"Description of the variable"
									}
								},
								"type":"object"
							},
							"title":"Variable Details",
							"type":"array"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.ChartType.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":349,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"pF3Sd",
			"index":9,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"chartType":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chart Type"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"hasMoreData":{
							"type":"boolean",
							"title":"Has More Data"
						},
						"chartType":{
							"type":"string",
							"title":"chartType"
						},
						"tableAlreadyPublished":{
							"type":"boolean",
							"title":"Table Already Published"
						}
					}
				},
				"code":"// if (!binding.hasVariable('chartType')) {\n//     if(!binding.hasVariable('hasMoreData'))\n//         return [\"chartType\" : null]\n\n//     if (hasMoreData)\n//         return [\"chartType\" : [\"TABLE\"]]\n//     else\n//         return [\"chartType\" : null]\n// }\n\n// def allowedChartTypes = [\"TABLE\", \"LINE\", \"BAR\", \"COLUMN\", \"PIE\", \"DUAL_AXES\"]\n\n// def originalChartType = chartType as List  // Make a copy for eviction check\n\n// // Filter chartType for allowed types only:\n// chartType = chartType.findAll { it in allowedChartTypes }\n\n// // If any types were evicted (i.e., sizes aren't same)\n// if (chartType.size() != originalChartType.size()) {\n//     if (!chartType.contains('Table')) {\n//         chartType << 'Table'\n//     }\n// }\n\n// // Proceed with your regular logic\n// if(!binding.hasVariable('hasMoreData'))\n//     return [\"chartType\" : chartType]\n\n// if (hasMoreData) {\n//     if (!chartType.contains('Table')) {\n//         chartType << 'Table'\n//     }\n// }\n// return [\"chartType\" : chartType]\n\nif (!binding.hasVariable('chartType')) {\n    if (!binding.hasVariable('hasMoreData'))\n        return [\"chartType\": null]\n\n    if (hasMoreData && !binding.hasVariable('tableAlreadyPublished'))\n        return [\"chartType\": [\"TABLE\"]]\n    \n    else\n        return [\"chartType\": null]\n}\nif (hasMoreData && !binding.hasVariable('tableAlreadyPublished'))\n    return [\"chartType\": [\"TABLE\"]]\n    \ndef allowedChartTypes = [\"TABLE\", \"LINE\", \"BAR\", \"COLUMN\", \"PIE\", \"DUAL_AXES\"]\n\n// chartType is a String input\ndef ctype = chartType?.toUpperCase()?.trim()\n\ndef chartTypeList = []\nif (ctype in allowedChartTypes) {\n    chartTypeList << ctype\n}\n\n// If input ctype is not valid, fallback/add \"TABLE\"\nif (chartTypeList.isEmpty()) {\n    chartTypeList << \"TABLE\"\n}\n\n// If hasMoreData is not present, just return the (possibly fixed) chartType\nif (!binding.hasVariable('hasMoreData'))\n    return [\"chartType\": chartTypeList]\n\n// If hasMoreData is true, TABLE must be present\nif (hasMoreData && !chartTypeList.contains(\"TABLE\") && !binding.hasVariable('tableAlreadyPublished')) {\n    chartTypeList << \"TABLE\"\n}\n\nreturn [\"chartType\": chartTypeList]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"hasMoreData":"{{ gbJBq.outputs.properties.hasMoreData }}",
					"chartType":"{{ O9a4D.outputs.result.chartType }}",
					"tableAlreadyPublished":"{{ gbJBq.outputs.properties.tableIsPublished }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":446,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"n_Tcf9E",
			"index":10,
			"inputs":{
				"variables":[
					{
						"source":"{{ QiKPQ.outputs.chartType }}",
						"value":{
							"source":"{{ pF3Sd.outputs.result.chartType }}",
							"ua:type":"mappedArray",
							"items":"{{ pF3Sd.outputs.result.chartType[0] }}"
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.sql_ui.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"_v9jpu",
			"index":11,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"is_object_present",
						"sql_output",
						"sql_output_ui",
						"num_rows"
					],
					"properties":{
						"is_object_present":{
							"type":"boolean",
							"title":"Is Object Present"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"sql_output_ui":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output Ui"
						},
						"rows_or_columns_greater_10":{
							"type":"boolean",
							"title":"Num Rows or Columns Greater 10"
						},
						"num_rows":{
							"type":"integer",
							"title":"num_rows"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"rows",
						"columnNames"
					],
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						},
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						},
						"sql_ui":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"sql_ui"
						}
					}
				},
				"code":"// if (!binding.hasVariable('rows') || rows.size() == 0) {\n//     return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": 0]\n// }\n// try {\n//     def sql_output = []\n//     rows.each { row ->\n//         // if (row.columns.size() != 0) {\n//         columnNames.each { col ->\n//             if (!row.containsKey(col)) {\n//                 row[col] = \"null\"\n//             }\n//         }\n//         sql_output << row\n//         // }        \n//     }\n//     if (sql_output.size() == 0) {\n//         return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n//     }\n//     if (sql_output[0].size() >= 10){\n//         return [\"is_object_present\": true, \"columns_greater_10\": true, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n//     }\n//     if (sql_output.size() <= 2) {\n//         return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n//     }\n//     return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n// } catch (Exception e) {\n//     return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": rows?.size() ?: 0]\n// }\n\nif (!binding.hasVariable('rows') || rows.size() == 0) {\n    return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": 0]\n}\ntry {\n    def sql_output = []\n    rows.each { row ->\n        columnNames.each { col ->\n            if (!row.containsKey(col) || row[col] == \"null\") {\n                def typeInfo = sql_ui[col][\"type\"]\n                def defaultValue\n                switch(typeInfo) {\n                    case \"INTEGER\":\n                        defaultValue = 0\n                        break\n                    case \"FLOAT\":\n                        defaultValue = 0.0\n                        break\n                    case \"STRING\":\n                        defaultValue = \"\"\n                        break\n                    case \"BOOLEAN\":\n                        defaultValue = false\n                        break\n                    case \"DATETYPE\":\n                    case \"DATE\": // just in case\n                        defaultValue = null\n                        break\n                    default:\n                        defaultValue = null\n                }\n                row[col] = defaultValue\n            }\n        }\n        sql_output << row\n    }\n    if (sql_output.size() == 0) {\n        return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n    }\n    if (sql_output[0].size() >= 20){\n        return [\"is_object_present\": true, \"columns_greater_10\": true, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n    }\n    if (sql_output.size() <= 2) {\n        return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n    }\n    return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n} catch (Exception e) {\n    return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": rows?.size() ?: 0]\n}",
				"compile_static":false,
				"isAsync":false,
				"captureStdOutput":false,
				"parameters":{
					"rows":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.rowData }}",
						"items":"{{ gbJBq.outputs.properties.rowData[0] }}"
					},
					"columnNames":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.columnData }}",
						"items":"{{ gbJBq.outputs.properties.columnData[0] }}"
					},
					"sql_ui":{
						"source":"{{ 6P6pn.outputs.result.out }}",
						"ua:type":"mappedArray",
						"items":"{{ 6P6pn.outputs.result.out[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":458,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"n_6i0h1",
			"index":12,
			"inputs":{
				"automationId":"67a48d37f8f1744841dabb63",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"aiAgentId":"{{ _xNOFZ.outputs.properties.fromCustomerUserId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":44,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"n_33o6H",
			"index":13,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"sqlOutput":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"sqlOutput":{
					"source":"{{ _v9jpu.outputs.result.sql_output }}",
					"ua:type":"mappedArray",
					"items":"{{ _v9jpu.outputs.result.sql_output[0] }}"
				}
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"sqlOutput":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":29,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"n_2a1yY",
			"index":14,
			"inputs":{
				"filters":[
					{
						"property":"{{ _v9jpu.outputs.result.sql_output }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ n_6i0h1.outputs.properties.preProcessingSettings.maxRowLimitForSQL }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.sql_output.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2a1yY@kFhpo-1@y",
			"id":"n_J4HyM",
			"index":15,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"rowLimit":{
							"type":"integer",
							"title":"Row Limit"
						}
					}
				},
				"code":"\ndef limit = 25;\nlimit = Math.min(limit, rowLimit)\nif(binding.hasVariable('sql_output')) result = sql_output.take(limit);\n\nreturn ['sql_output' : result]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"rowLimit":"{{ n_6i0h1.outputs.properties.preProcessingSettings.maxRowLimitForSQL }}",
					"sql_output":{
						"source":"{{ _v9jpu.outputs.result.sql_output }}",
						"ua:type":"mappedArray",
						"items":"{{ _v9jpu.outputs.result.sql_output[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":44,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2a1yY@kFhpo-1@y",
			"id":"n_YRx3o",
			"index":16,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_33o6H.outputs.sqlOutput }}",
						"value":{
							"source":"{{ n_J4HyM.outputs.result.sql_output }}",
							"ua:type":"mappedArray",
							"items":"{{ n_J4HyM.outputs.result.sql_output[0] }}"
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":44,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2a1yY@kFhpo-1@n",
			"id":"n_VaDBg",
			"index":17,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_33o6H.outputs.sqlOutput }}",
						"value":{
							"source":"{{ _v9jpu.outputs.result.sql_output }}",
							"ua:type":"mappedArray",
							"items":"{{ _v9jpu.outputs.result.sql_output[0] }}"
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.result.results.source",
					"root.parameters.result.results.ua:type",
					"root.parameters.result.results.items.yAxisLabel",
					"root.parameters.result.results.items.data.text",
					"root.parameters.result.results.items.columns.source",
					"root.parameters.result.results.items.columns.ua:type",
					"root.parameters.result.results.items.columns.items.label",
					"root.parameters.result.results.items.columns.items.type",
					"root.parameters.result.results.items.columns.items.value",
					"root.parameters.result.results.items.columns.items.currencyCode",
					"root.parameters.result.results.items.series.source",
					"root.parameters.result.results.items.series.ua:type",
					"root.parameters.result.results.items.series.items.label",
					"root.parameters.result.results.items.series.items.key",
					"root.parameters.result.results.items.blockType",
					"root.parameters.result.results.items.xAxisValue",
					"root.parameters.result.results.items.chartType",
					"root.parameters.result.results.items.xAxisLabel",
					"root.parameters.result.results.items.groupBy",
					"root.parameters.result.results.items.yAxisRightLabel",
					"root.parameters.result.results.items.yAxis.series.source",
					"root.parameters.result.results.items.yAxis.series.ua:type",
					"root.parameters.result.results.items.yAxis.series.items.key",
					"root.parameters.result.results.items.yAxis.series.items.label",
					"root.parameters.result.results.items.yAxisRight.series.source",
					"root.parameters.result.results.items.yAxisRight.series.ua:type",
					"root.parameters.result.results.items.yAxisRight.series.items.key",
					"root.parameters.result.results.items.yAxisRight.series.items.label",
					"root.parameters.result.results.items.title",
					"root.parameters.result.results.yAxisLabel",
					"root.parameters.result.results.data.text",
					"root.parameters.result.results.columns.source",
					"root.parameters.result.results.columns.ua:type",
					"root.parameters.result.results.columns.items.label",
					"root.parameters.result.results.columns.items.type",
					"root.parameters.result.results.columns.items.value",
					"root.parameters.result.results.columns.items.currencyCode",
					"root.parameters.result.results.series.source",
					"root.parameters.result.results.series.ua:type",
					"root.parameters.result.results.series.items.label",
					"root.parameters.result.results.series.items.key",
					"root.parameters.result.results.blockType",
					"root.parameters.result.results.xAxisValue",
					"root.parameters.result.results.chartType",
					"root.parameters.result.results.xAxisLabel",
					"root.parameters.result.results.groupBy",
					"root.parameters.result.results.yAxisRightLabel",
					"root.parameters.result.results.yAxis.series.source",
					"root.parameters.result.results.yAxis.series.ua:type",
					"root.parameters.result.results.yAxis.series.items.key",
					"root.parameters.result.results.yAxis.series.items.label",
					"root.parameters.result.results.yAxisRight.series.source",
					"root.parameters.result.results.yAxisRight.series.ua:type",
					"root.parameters.result.results.yAxisRight.series.items.key",
					"root.parameters.result.results.yAxisRight.series.items.label",
					"root.parameters.result.results.title",
					"root.parameters.result.results.source",
					"root.parameters.result.results.ua:type",
					"root.parameters.result.results.items.yAxisLabel",
					"root.parameters.result.results.items.data.text",
					"root.parameters.result.results.items.columns.source",
					"root.parameters.result.results.items.columns.ua:type",
					"root.parameters.result.results.items.columns.items.label",
					"root.parameters.result.results.items.columns.items.type",
					"root.parameters.result.results.items.columns.items.value",
					"root.parameters.result.results.items.columns.items.currencyCode",
					"root.parameters.result.results.items.series.source",
					"root.parameters.result.results.items.series.ua:type",
					"root.parameters.result.results.items.series.items.label",
					"root.parameters.result.results.items.series.items.key",
					"root.parameters.result.results.items.blockType",
					"root.parameters.result.results.items.xAxisValue",
					"root.parameters.result.results.items.chartType",
					"root.parameters.result.results.items.xAxisLabel",
					"root.parameters.result.results.items.groupBy",
					"root.parameters.result.results.items.yAxisRightLabel",
					"root.parameters.result.results.items.yAxis.series.source",
					"root.parameters.result.results.items.yAxis.series.ua:type",
					"root.parameters.result.results.items.yAxis.series.items.key",
					"root.parameters.result.results.items.yAxis.series.items.label",
					"root.parameters.result.results.items.yAxisRight.series.source",
					"root.parameters.result.results.items.yAxisRight.series.ua:type",
					"root.parameters.result.results.items.yAxisRight.series.items.key",
					"root.parameters.result.results.items.yAxisRight.series.items.label",
					"root.parameters.result.results.items.title"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":460,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"n_NwnE7",
			"index":18,
			"inputs":{
				"automationId":"6874b1992b1acace3a8cbff4",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"result":{
						"sql_output":{
							"ua:type":"mappedArray",
							"source":"{{ n_33o6H.outputs.sqlOutput }}",
							"items":"{{ n_33o6H.outputs.sqlOutput[0] }}"
						},
						"chartType":{
							"source":"{{ QiKPQ.outputs.chartType }}",
							"ua:type":"mappedArray",
							"items":"{{ QiKPQ.outputs.chartType[0] }}"
						},
						"results":{
							"source":"{{ O9a4D.outputs.result.result }}",
							"ua:type":"mappedArray",
							"items":{
								"yAxisLabel":"{{ O9a4D.outputs.result.result[0].yAxisLabel }}",
								"data":{
									"text":"{{ O9a4D.outputs.result.result[0].data.text }}"
								},
								"columns":{
									"source":"{{ O9a4D.outputs.result.result[0].columns }}",
									"ua:type":"mappedArray",
									"items":{
										"label":"{{ O9a4D.outputs.result.result[0].columns[0].label }}",
										"type":"{{ O9a4D.outputs.result.result[0].columns[0].type }}",
										"value":"{{ O9a4D.outputs.result.result[0].columns[0].value }}",
										"currencyCode":"{{ O9a4D.outputs.result.result[0].columns[0].currencyCode }}"
									}
								},
								"series":{
									"source":"{{ O9a4D.outputs.result.result[0].series }}",
									"ua:type":"mappedArray",
									"items":{
										"label":"{{ O9a4D.outputs.result.result[0].series[0].label }}",
										"key":"{{ O9a4D.outputs.result.result[0].series[0].key }}"
									}
								},
								"blockType":"{{ O9a4D.outputs.result.result[0].blockType }}",
								"xAxisValue":"{{ O9a4D.outputs.result.result[0].xAxisValue }}",
								"chartType":"{{ O9a4D.outputs.result.result[0].chartType }}",
								"xAxisLabel":"{{ O9a4D.outputs.result.result[0].xAxisLabel }}",
								"groupBy":"{{ O9a4D.outputs.result.result[0].groupBy }}",
								"yAxisRightLabel":"{{ O9a4D.outputs.result.result[0].yAxisRightLabel }}",
								"yAxis":{
									"series":{
										"source":"{{ O9a4D.outputs.result.result[0].yAxis.series }}",
										"ua:type":"mappedArray",
										"items":{
											"key":"{{ O9a4D.outputs.result.result[0].yAxis.series[0].key }}",
											"label":"{{ O9a4D.outputs.result.result[0].yAxis.series[0].label }}"
										}
									}
								},
								"yAxisRight":{
									"series":{
										"source":"{{ O9a4D.outputs.result.result[0].yAxisRight.series }}",
										"ua:type":"mappedArray",
										"items":{
											"key":"{{ O9a4D.outputs.result.result[0].yAxisRight.series[0].key }}",
											"label":"{{ O9a4D.outputs.result.result[0].yAxisRight.series[0].label }}"
										}
									}
								},
								"title":"{{ O9a4D.outputs.result.result[0].title }}"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"_0YITF",
			"index":19,
			"inputs":{
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"id":"{{ GpPp2.outputs.caseId }}",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"_kUEOO",
			"index":20,
			"inputs":{
				"filters":[
					{
						"property":"{{ _0YITF.outputs.properties.triggerDetails.triggerDeploymentId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"signal_trigger"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"conv_ai_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"conv_ai_by_unifyapps_publish_response",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@kFhpo-1@y",
			"id":"_rVRqK",
			"index":21,
			"inputs":{
				"callableInterfaceId":"__ua__publish_response_interface",
				"parameters":{
					"coPilotBlocks":{
						"ua:type":"mappedArray",
						"source":"{{ n_NwnE7.outputs.final_results }}",
						"items":"{{ n_NwnE7.outputs.final_results[0] }}"
					},
					"caseId":"{{ GpPp2.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Conversation AI by UnifyApps",
			"title":"Publish Response",
			"type":"CALL_INTERFACE_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@kFhpo-1@y",
			"id":"0eoZB",
			"index":22,
			"inputs":{
				"variables":[
					{
						"source":"{{ QiKPQ.outputs.outputMsgId }}",
						"value":"{{ _rVRqK.outputs.messageId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":67,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@kFhpo-1@n",
			"id":"_GVgit",
			"index":23,
			"inputs":{
				"automationId":"66d1673d9627d00147081244",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"coPilotBlocks":{
						"blocks":{
							"ua:type":"mappedArray",
							"source":"{{ n_NwnE7.outputs.final_results }}",
							"items":"{{ n_NwnE7.outputs.final_results[0] }}"
						},
						"role":"bot"
					},
					"caseId":"{{ GpPp2.outputs.caseId }}",
					"fromCustomerUserId":"{{ _xNOFZ.outputs.properties.fromCustomerUserId }}"
				}
			},
			"skip":false,
			"subTitle":"Publish to co pilot",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@kFhpo-1@n",
			"id":"x4Q8x",
			"index":24,
			"inputs":{
				"variables":[
					{
						"source":"{{ QiKPQ.outputs.outputMsgId }}",
						"value":"{{ _GVgit.outputs.messageId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":71,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"_O59t6",
			"index":25,
			"inputs":{
				"automationId":"6736c489a1789a4ff7441c36",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"rowData":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.rowData }}",
						"items":"{{ gbJBq.outputs.properties.rowData[0] }}"
					},
					"columnData":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.columnData }}",
						"items":"{{ gbJBq.outputs.properties.columnData[0] }}"
					},
					"caseId":"{{ GpPp2.outputs.caseId }}",
					"aiAgentId":"{{ _xNOFZ.outputs.properties.additional.aiAgentId }}",
					"hasMoreData":"{{ gbJBq.outputs.properties.hasMoreData }}",
					"chartType":"{{ O9a4D.outputs.result.result[0].chartType }}"
				}
			},
			"skip":true,
			"subTitle":"Publish on CoPilot (With Widgets)",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":22,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"DnQRn",
			"index":26,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"blocktype":{
											"type":"string",
											"title":"Blocktype"
										},
										"chartType":{
											"type":"string",
											"title":"Chart Type"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"blockList",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"blockList",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"blocktype":{
										"type":"string",
										"title":"Blocktype"
									},
									"chartType":{
										"type":"string",
										"title":"Chart Type"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.blocktype",
					"root.itemsToAdd.items.chartType"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":22,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"mnDjC",
			"index":27,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"items":{
						"blocktype":"{{ n_NwnE7.outputs.publishWaht[0].blockType }}",
						"chartType":"{{ n_NwnE7.outputs.publishWaht[0].chartType }}"
					},
					"source":"{{ n_NwnE7.outputs.publishWaht }}"
				},
				"listName":"{{ DnQRn.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.updateFields.items.fieldName",
					"root.updateFields.items.actionType"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"storage_by_unifyapps_update_record_fields_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"y4EAP",
			"index":28,
			"inputs":{
				"recordId":"{{ _GVgit.outputs.messageId }}",
				"writeThroughSessionVariables":false,
				"object_type":"service_hub_message",
				"skipIfBlank":false,
				"skipPermissionCheck":false,
				"updateFields":[
					{
						"fieldName":"properties.additional.sqlQuery",
						"actionType":"SET",
						"setValue":"{{ gbJBq.outputs.properties.sqlQuery }}"
					},
					{
						"fieldName":"properties.additional.hasMoreData",
						"actionType":"SET",
						"setValue":"{{ gbJBq.outputs.properties.hasMoreData }}"
					},
					{
						"fieldName":"properties.additional.platformName",
						"actionType":"SET",
						"setValue":"{{ gbJBq.outputs.properties.sqlQueryPlatformName }}"
					},
					{
						"fieldName":"properties.additional.SQLServerAddditionalMetadata",
						"actionType":"SET",
						"setValue":"{{ gbJBq.outputs.properties.SQLServerAddditionalMetadata }}"
					}
				],
				"unsetIfNull":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update an existing record's fields",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":390,
				"resourceName":"variable_by_unifyapps_set_session_variable",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"jREnR",
			"index":29,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"disableThought":{
							"type":"boolean",
							"title":"Disable Thought"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"disableThought":true
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"disableThought":{
							"type":"boolean",
							"title":"Disable Thought"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Set Session Variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.blocks.items.blockType",
					"root.parameters.blocks.items.chartType"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":22,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"auRVz",
			"index":30,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"msg":{
							"type":"string",
							"title":"Msg"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"blocks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"blockType":{
										"type":"string",
										"title":"blockType"
									},
									"chartType":{
										"type":"string",
										"title":"Chart Type"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"blocks"
						},
						"hasMoreData":{
							"type":"boolean",
							"title":"Has More Data"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def normalizedBlockType(block) {\n    // Handles Chart blocktypes with a specific chartType\n    if (block.blockType?.toLowerCase() == 'chart' && block.chartType) {\n        // Lowercase and normalize chartType if needed\n        return block.chartType.toLowerCase() + ' chart'\n    }\n    \n    // For other types, operate as before:\n    def bt = block.blockType?.toLowerCase() \n    if (bt in ['keyvalue']) return bt + ' table'\n    if (bt in ['line', 'bar', 'column', 'pie', 'dual_axes']) return bt + ' chart'\n    if (bt == 'typography') return bt + ' block'\n    return bt\n}\n\n// Instead of blocks*.blockType, map on each block to handle both blocktype & chartType\ndef blockTypes = blocks.collect { normalizedBlockType(it) }\n\n// def msg = blockTypes.join(' + ') + \" data has been published/displayed to the user that represents the row and column data from the SQL output already in the chat. [IMPORTANT] Do not repeat the same information in the Final Answer as it is already presented in this block to the user. Do not make any judgements based on the blocktype given.[IMPORTANT] In the final answer, do not give any dummy chartlink or chart description or information about the chart.\" \n\ndef msg = blockTypes.join(' + ') + \" data has been displayed to the user that represents the row and column data from the SQL output already in the chat. Give comprehensive commentary, analysis, max, min, outliers and trends related to the data published STRICTLY in MARKDOWN format with proper emojis, headers and sections. [STRICTLY] Never publish the data as a table in markdown as table has already been published.\"\n\n// If blockTypes size is 1 and it's 'table', add instruction\nif (blockTypes.size() == 1 && (blockTypes[0] == 'keyvalue table' || blockTypes[0] == 'table')) {\n    msg += \" Only a table is produced, dont refer to it as a 'chart' in the Final Answer.\"\n}\n\nif (binding.hasVariable(\"hasMoreData\") && hasMoreData){\n    if (blockTypes.any { it == 'table' }) {\n        msg += \" STRICTLY Mention the 'Export' option for table, which allows users to export all records or access the complete, non-truncated output from the table.\"\n    }\n    else{\n        msg+=\" STRICTLY mention, that this is an incomplete visual representation, Table shown above can be used to export the full non-truncated version of the data output. THis pictorial representation just contains the top 25 rows from the data output for visual representation purposes.\"\n    }\n}\n\nreturn [\n    \"msg\" : msg\n]",
				"parameters":{
					"blocks":{
						"ua:type":"mappedArray",
						"source":"{{ DnQRn.outputs.items }}",
						"items":{
							"blockType":"{{ DnQRn.outputs.items[0].blocktype }}",
							"chartType":"{{ DnQRn.outputs.items[0].chartType }}"
						}
					},
					"hasMoreData":"{{ gbJBq.outputs.properties.hasMoreData }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":17,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kFhpo-1",
			"id":"_UuNZv",
			"index":31,
			"inputs":{
				"result":{
					"success":true,
					"toolOutput":"{{ auRVz.outputs.result.msg }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":38712,
	"schemaReferences":[
		"entity|e_code_snippet|e_6874dfa7a739fcd9517e062a"
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":79
}