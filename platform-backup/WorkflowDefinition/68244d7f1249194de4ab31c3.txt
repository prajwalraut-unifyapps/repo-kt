{
	"appsUsed":[
		
	],
	"createdTime":1747641656818,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243516228,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbecfc5e003e08cdeb2e4c",
		"status":"DEPLOYED",
		"version":50,
		"workflowVersion":77
	},
	"edges":[
		{
			"fromNodeId":"Im0zL",
			"priority":0,
			"skip":false,
			"toNodeId":"fUo41",
			"type":"next"
		},
		{
			"fromNodeId":"fUo41",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@1",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@1",
			"priority":0,
			"skip":false,
			"toNodeId":"Xcsio",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@3",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@3",
			"priority":0,
			"skip":false,
			"toNodeId":"Bpsk0",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"4",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@4",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@4",
			"priority":0,
			"skip":false,
			"toNodeId":"PFWsm",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"5",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@5",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@5",
			"priority":0,
			"skip":false,
			"toNodeId":"nMw9y",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"6",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@6",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@6",
			"priority":0,
			"skip":false,
			"toNodeId":"jAi1i",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"7",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@7",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@7",
			"priority":0,
			"skip":false,
			"toNodeId":"_jcQ9T",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"8",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@8",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_uil8j",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"9",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@9",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@9",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zf5Ik",
			"type":"next"
		},
		{
			"fromNodeId":"n_zf5Ik",
			"priority":0,
			"skip":false,
			"toNodeId":"n_d6dKT",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"10",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@10",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@10",
			"priority":0,
			"skip":false,
			"toNodeId":"_ncgL2",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"11",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@11",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@11",
			"priority":0,
			"skip":false,
			"toNodeId":"_DjQVw",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"12",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@12",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@12",
			"priority":0,
			"skip":false,
			"toNodeId":"_5ISit",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"13",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@13",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@13",
			"priority":0,
			"skip":false,
			"toNodeId":"n_wdE5f",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"_QEoIB",
			"type":"branch"
		},
		{
			"fromNodeId":"_QEoIB",
			"priority":0,
			"skip":false,
			"toNodeId":"UuiLa",
			"type":"next"
		},
		{
			"fromNodeId":"UuiLa",
			"priority":0,
			"skip":false,
			"toNodeId":"gOMNS",
			"type":"next"
		},
		{
			"fromNodeId":"Xcsio",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"Bpsk0",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"PFWsm",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"nMw9y",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"jAi1i",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"_jcQ9T",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"n_uil8j",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"n_d6dKT",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"_ncgL2",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"_DjQVw",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"_5ISit",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"n_wdE5f",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		},
		{
			"fromNodeId":"gOMNS",
			"priority":0,
			"skip":false,
			"toNodeId":"2RCJ1",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68244d7f1249194de4ab31c3",
	"lastModifiedBy":-1,
	"lcName":"text to workflow v2 | get input schema with instruction",
	"modifiedTime":1759243553087,
	"name":"Text to Workflow v2 | Get Input Schema with Instruction",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":344,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"l5mht-1",
			"id":"Im0zL",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"instructions":{
							"type":"string",
							"title":"Instructions"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{
								"appName":{
									"type":"string",
									"title":"appName"
								},
								"resourceName":{
									"type":"string",
									"title":"resourceName"
								},
								"type":{
									"type":"string",
									"title":"type"
								}
							},
							"title":"context",
							"additionalProperties":false
						}
					},
					"additionalProperties":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":348,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"l5mht-1",
			"id":"fUo41",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"instructions":{
							"type":"string",
							"title":"Instructions"
						},
						"double_open_bracket":{
							"type":"string",
							"title":"Double Open Bracket"
						},
						"double_close_bracket":{
							"type":"string",
							"title":"Double Close Bracket"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"double_close_bracket":"=CONCATENATE(\"}\", \"}\")",
				"double_open_bracket":"=CONCATENATE(\"{\", \"{\")"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"instructions":{
							"type":"string",
							"title":"Instructions"
						},
						"double_open_bracket":{
							"type":"string",
							"title":"Double Open Bracket"
						},
						"double_close_bracket":{
							"type":"string",
							"title":"Double Close Bracket"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"l5mht-1",
			"id":"_puUvx",
			"index":3,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"IF/Else Condition",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.appName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"if_else"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"Webhooks Trigger",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"webhooks_default"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"4",
						"inputs":{
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"callables_from_automation"
										}
									}
								],
								"operator":"AND"
							},
							"name":"Callables from Automation"
						}
					},
					{
						"id":"5",
						"inputs":{
							"name":"Code By UnifyApps",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.appName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"code_by_unifyapps"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"6",
						"inputs":{
							"name":"Scheduler Trigger",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"schedule_default"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"7",
						"inputs":{
							"name":"Create Variable",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"variable_by_unifyapps_create_variables"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"8",
						"inputs":{
							"name":"HTTP Endpoint",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"custom_http_endpoint_execute"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"9",
						"inputs":{
							"name":"Update Variable Action",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"variable_by_unifyapps_update_variables"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"10",
						"inputs":{
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.appName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"callables"
										}
									},
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"callables_return_to_automation"
										}
									}
								],
								"operator":"AND"
							},
							"name":"Return To Automation"
						}
					},
					{
						"id":"11",
						"inputs":{
							"name":"Callables From API",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.appName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"callabes"
										}
									},
									{
										"property":"{{ Im0zL.outputs.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"callables_from_api"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"12",
						"inputs":{
							"name":"Branch Condition Block",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.appName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"branch_condition"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"13",
						"inputs":{
							"name":"Branch Block",
							"conditions":{
								"filters":[
									{
										"property":"{{ Im0zL.outputs.context.appName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"branch"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":60,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@1",
			"id":"_puUvx@1",
			"index":4,
			"inputs":{
				"name":"IF/Else Condition",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.appName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"if_else"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":345,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@1",
			"id":"Xcsio",
			"index":5,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n{\n\"filters\": [\n{\n\"property\": \"string\",\n\"filter\": {\n\"operator\": \"Simple/ String-Specific/ DateTime/ Existence Check Operations\",\n\"value\": \"string\"\n}\n},\n...\n],\n\"operator\": \"AND/OR\"\n}\n```\n\n#### Simple Operations (Used to Compare Values)\n\n| OPERATION NAME | Datatypes Allowed | Descriptions |\n|----------------|-------------------|--------------|\n| EQUAL | int, string, float, list | Checks if two values are equal. |\n| NOT_EQUAL | int, string, float, list | Checks if two values are not equal. |\n| IN | string, list | Checks if a value is within a list of values. |\n| NOT_IN | string, list | Checks if a value is not within a list of values. |\n| LT | int, float | Checks if a value is less than another value. |\n| LTE | int, float | Checks if a value is less than or equal to another value. |\n| GT | int, float | Checks if a value is greater than another value. |\n| GTE | int, float | Checks if a value is greater than or equal to another value. |\n| BETWEEN | int, float | Checks if a value is within a range of values. |\n\n#### String-Specific Operations (For string checks or contains operations)\n\n| OPERATION NAME | Datatypes Allowed | Descriptions |\n|----------------|-------------------|--------------|\n| REGEX | string | Checks if a string matches a regular expression pattern. |\n| NOT_REGEX | string | Checks if a string does not match a regular expression pattern. |\n| STARTS_WITH | string | Checks if a string starts with a specified substring. |\n| ENDS_WITH | string | Checks if a string ends with a specified substring. |\n| CONTAINS | string | Checks if a string contains a specified substring. |\n| NOT_CONTAINS | string | Checks if a string does not contain a specified substring. |\n| IREGEX | string | Case-insensitive version of REGEX. |\n| NOT_IREGEX | string | Case-insensitive version of NOT_REGEX. |\n| ICONTAINS | string | Case-insensitive version of CONTAINS. |\n| NOT_ICONTAINS | string | Case-insensitive version of NOT_CONTAINS. |\n\n#### DateTime field allowed only below Operation\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| EQUAL | int, string, float, list | Checks if two dates are equal. |\n| LT | int, float | Checks if a date is less than another date. |\n| LTE | int, float | Checks if a date is less than or equal to another date. |\n| GT | int, float | Checks if a date is greater than another date. |\n| GTE | int, float | Checks if a date is greater than or equal to another date. |\n| BETWEEN | int, float | Checks if two dates is within a range of values. |\n\n#### Existence Check (For Checking Existence in a Table)\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| EXISTS | Checks if a field exists. |\n| MISSING | Checks if a field is missing. |\n\n#### Composite Operations (Used to Join Two Filters) (Should be only one)\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| AND (true) | Combines two filters and returns true if both filters are true. It is used to ensure that multiple conditions are met simultaneously. |\n| OR (true) | Combines two filters and returns true if at least one of the filters is true. It is used to allow multiple alternative conditions. |\n\n1. One of the elements mentioned in under the 'Fillable Inputs'\nExample:\n{\n\"filled_schema\": {\n\"filters\": [\n{\n\"property\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.email {{ fUo41.outputs.double_close_bracket }}\",\n\"filter\": {\n\"operator\": \"EQUAL\",\n\"value\": \"abc@gmail.com\"\n}\n}\n],\n\"operator\": \"AND\"\n}\n}\n\n2. Custom string/integer value can be given to any field in 'Application Input Schema'\nExample:\n{\n\"filled_schema\": {\n\"filters\": [\n{\n\"property\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.email {{ fUo41.outputs.double_close_bracket }}\",\n\"filter\": {\n\"operator\": \"EQUAL\",\n\"value\": \"abc@gmail.com\"\n}\n},\n{\n\"property\": \"20\",\n\"filter\": {\n\"operator\": \"GT\",\n\"value\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.age {{ fUo41.outputs.double_close_bracket }}\"\n}\n}\n],\n\"operator\": \"OR\"\n}\n}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@3",
			"id":"_puUvx@3",
			"index":6,
			"inputs":{
				"name":"Webhooks Trigger",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"webhooks_default"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":345,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@3",
			"id":"Bpsk0",
			"index":7,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n{\n\"request\": {\n\"contentType\": {\n\"type\": \"string\",\n\"enum\": [\n\"application/json\",\n\"application/x-www-form-urlencoded\",\n\"application/xml\"\n],\n\"default\": \"application/json\",\n\"title\": \"Content Type\"\n},\n\"queryParams\": {\n\"type\": \"object\",\n\"properties\": {\n// Add your query parameters here\n\"example_query_string\": {\n\"type\": \"string\",\n\"title\": \"Example Query String\"\n},\n\"example_query_number\": {\n\"type\": \"number\",\n\"title\": \"Example Query Number\"\n},\n\"example_query_boolean\": {\n\"type\": \"boolean\",\n\"title\": \"Example Query Boolean\"\n}\n},\n\"additionalProperties\": true,\n\"title\": \"Query Parameters\"\n},\n\"body\": {\n\"type\": \"object\",\n\"properties\": {\n// Add your body fields here\n\"example_body_string\": {\n\"type\": \"string\",\n\"title\": \"Example Body String\"\n},\n\"example_body_number\": {\n\"type\": \"number\",\n\"title\": \"Example Body Number\"\n},\n\"example_body_boolean\": {\n\"type\": \"boolean\",\n\"title\": \"Example Body Boolean\"\n},\n\"example_body_object\": {\n\"type\": \"object\",\n\"properties\": {\n\"nested_field\": {\n\"type\": \"string\",\n\"title\": \"Nested Field\"\n}\n},\n\"required\": [],\n\"title\": \"Example Body Object\"\n},\n\"example_body_array\": {\n\"type\": \"array\",\n\"items\": {\n\"type\": \"string\"\n},\n\"title\": \"Example Body Array\"\n},\n\"example_body_file\": {\n\"type\": \"string\",\n\"format\": \"file-input\",\n\"title\": \"Example Body File\"\n}\n},\n\"additionalProperties\": true,\n\"title\": \"Body\"\n},\n\"pathParams\": {\n\"type\": \"object\",\n\"properties\": {\n// Add your path parameters here\n\"example_path_param\": {\n\"type\": \"string\",\n\"title\": \"Example Path Param\"\n}\n},\n\"additionalProperties\": true,\n\"title\": \"Path Parameters\"\n},\n\"headers\": {\n\"type\": \"object\",\n\"properties\": {\n// Add your headers here\n\"example_header_string\": {\n\"type\": \"string\",\n\"title\": \"Example Header String\"\n},\n\"example_header_array\": {\n\"type\": \"array\",\n\"items\": {\n\"type\": \"string\"\n},\n\"title\": \"Example Header Array\"\n}\n},\n\"additionalProperties\": true,\n\"title\": \"Headers\"\n}\n}\n}\n```\n\n**Instructions for use:**\n- Replace the example fields in each section (`queryParams`, `body`, `pathParams`, `headers`) as needed for your webhook. Example fields are placed for your reference. You need to add the fields inside the properties object only, same as the example.\n- All sections allow for additional properties, so you can freely add custom fields.\n- The `contentType` field is required and should be set according to your payload format. Keep `application/json`\n- [IMPORTANT]: You must follow the pattern shown in the example below. Any field definition not wrapped under \"type\": \"object\" and \"properties\" will be considered invalid.\n\n### Example\n{ \"request\": { \"contentType\": \"application/json\", \"queryParams\": { \"type\":\"object\",\"properties\": { \"start_date\": { \"type\": \"string\", \"title\": \"Start Date\" } }, \"required\": [] } } }"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@4",
			"id":"_puUvx@4",
			"index":8,
			"inputs":{
				"name":"Callables from Automation",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"callables_from_automation"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":346,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@4",
			"id":"PFWsm",
			"index":9,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n{\n\"help\": { \"type\": \"string\", \"title\": \"Help Text\" }, \"setup\": { \"type\": \"object\", \"properties\": { // Add your\nsetup fields here \"example_setup_string\": { \"type\": \"string\", \"title\": \"Example Setup String\" },\n\"example_setup_number\": { \"type\": \"number\", \"title\": \"Example Setup Number\" },\n\"example_setup_boolean\": { \"type\": \"boolean\", \"title\": \"Example Setup Boolean\" },\n\"example_setup_date\": { \"type\": \"string\", \"format\": \"date\", \"title\": \"Example Setup Date\" },\n\"example_setup_object\": { \"type\": \"object\", \"properties\": { \"nested_field\": { \"type\": \"string\", \"title\":\n\"Nested Field\" } }, \"required\": [], \"title\": \"Example Setup O\nbject\" }, \"example_setup_array\": { \"type\":\n\"array\", \"items\": { \"type\": \"string\" }, \"title\": \"Example Setup Array\" }, \"example_setup_file\": { \"type\":\n\"string\", \"format\": \"file-input\", \"title\": \"Example Setup File\" } }, \"additionalProperties\": true, \"title\":\n\"Setup\" }, \n\n\n\"result\": { \"type\": \"object\", \"properties\": { // Add your result fields here\n\"example_result_string\": { \"type\": \"string\", \"title\": \"Example Result String\" },\n\"example_result_number\": { \"type\": \"number\", \"title\": \"Example Result Number\" },\n\"example_result_boolean\": { \"type\": \"boolean\", \"title\": \"Example Result Boolean\" },\n\"example_result_date\": { \"type\": \"string\", \"format\": \"date\", \"title\": \"Example Result Date\" },\n\"example_result_object\": { \"type\": \"object\", \"properties\": { \"nested_field\": { \"type\": \"string\", \"title\":\n\"Nested Field\" } }, \"required\": [], \"title\": \"Example Result Object\" }, \"example_result_array\": \n{ \"type\":\"array\", \"items\": { \"type\": \"string\" }, \"title\": \"Example Result Array\" }, \"example_result_file\": { \"type\":\n\"string\", \"format\": \"file-input\", \"title\": \"Example Result File\" } }, \"additionalProperties\": true, \"title\":\n\"Result\" }, \"triggerInputCondition\": { \"type\": \"object\", \"properties\": { // Add your trigger conditions here\n\"example_condition\": { \"type\": \"boolean\", \"title\": \"Example Condition\" } }, \"additionalProperties\": true,\n\"title\": \"Trigger Input Condition\" } }```\n\n\n** [IMPORTANT] ONLY ADD THE FIELDS THAT ARE REQUIRED BY THE PROMPT**\nIf the prompt only requires one string ONLY add that string with that name. DO NOT add anything else. Additionally,\nname all input and output schema appropriately. \n\n[IMPORTANT] If the user wants to return something from the automation, then you need to add what they are returning to the results schema of the trigger IN ADDITION to the result of the “return_to_automation”. \nExample: \nInstructions Query: Set up the trigger to accept a boolean input parameter named 'checkEmail' that will determine whether to check emails or not, If the email is sent, then respond to automation with true. \nExpected behaviour:\n{\n\"help\": \"the boolean passed in determines if you should check emails and send them to slack\",\n\"setup\": {\n\"type\": \"object\",\n\"properties\": {\n\"checkEmail\": {\n\"title\": \"Check Email\",\n\"type\": \"boolean\"\n}\n},\n\"required\": [\n\"query\"\n]\n},\n\"result\": {\n\"properties\": {\n\"wasSent\": {\n\"title\": \"Was Sent\",\n\"type\": \"boolean\"\n}\n},\n\"required\": [\n\"was Sent\"\n],\n\"type\": \"object\"\n}\n}\n- In addition to this, the result schema for the return to automation should also include the return boolean.\n\n[Important] do not have a description, the only properties you need are type and title, and help (but ONLY IF NECESSARY)\n[IMPORTANT] Example: \nInstructions query: the automation is called and a string query is passed in and then after the workflow a boolean result \nreturns true if the automation was successful.\nExpected behaviour: \n{\n\"help\": \"this accepts a query and sends it to slack and returns if it was successful\",\n\"result\": {\n\"properties\": {\n\"wasSuccess\": {\n\"title\": \"was Success\",\n\"type\": \"boolean\"\n}\n},\n\"type\": \"object\"\n},\n\"setup\": {\n\"properties\": {\n\"query\": {\n\"title\": \"Query\",\n\"type\": \"string\"\n}\n},\n\"required\": [\n\"query\"\n],\n\"type\": \"object\"\n}\n}\n\n**Notice** how the output contains information relevant to the query. This should be the case for ALL queries.\n[IMPORTANT] **Notice** how the name of the variables are relevant to the information that they carry, make sure all input and result schema variable names have relevant naming conventions.\n**NOTICE** HOW ANY PROPERTIES FOR SETUP OR RESULT ARE NESTED INSIDE THE SETUP.PROPERTIES OR THE RESULT.PROPERTIES AS IN THE EXAMPLE. [IMPORTANT] EVERY RESPONSE SHOULD FOLLOW THIS FORMAT CAREFULLY, [IMPORTANT] THE WORKFLOW WILL NOT WORK IF YOU DON'T FOLLOW THE FORMAT CAREFULLY\n\n\n**Instructions for use:**\n- Replace the example fields in each section (`setup`, `result`, `triggerInputCondition`) needed for your action. Example fields are placed for your reference. You need to add the fields inside the properties object only, same as the example.\n- All sections allow for additional properties, so you can freely add custom fields.\n- The help field is optional and can be used to provide instructions or context for the action.\n- Use the setup section to define input parameters for your action.\n- Use the result section to define the expected output structure of your action.\n- The triggerInputCondition section can be used to define conditions that must be met for the action to trigger.\n- [IMPORTANT]: You must follow the pattern shown in the example below. Any field definition not wrapped under \"type\": \"object\" and \"properties\" will be considered invalid. Notice how the naming conventions correspond with the variables' function. \n- Do not name any output as 'example_setup_string' name them appropriately\n\n### Example\n{ \"help\": \"This action sends a notification to a specified user\", \"setup\": { \"type\": \"object\", \"properties\": { \"user_id\": { \"type\": \"string\", \"title\": \"User ID\" }, \"message\": { \"type\": \"string\", \"title\": \"Notification Message\" } }, \"required\": [\"user_id\", \"message\"] }, \"result\": { \"type\": \"object\", \"properties\": { \"success\": { \"type\": \"boolean\", \"title\": \"Success Status\" }, \"timestamp\": { \"type\": \"string\", \"format\": \"date-time\", \"title\": \"Timestamp\" } }, \"required\": [\"success\"] } }"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@5",
			"id":"_puUvx@5",
			"index":10,
			"inputs":{
				"name":"Code By UnifyApps",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.appName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"code_by_unifyapps"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":351,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@5",
			"id":"nMw9y",
			"index":11,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application  Schema:\n```json\n{\n\"code\": {\n\"type\": \"string\"\n},\n\"input\": {\n\"additionalProperties\": true,\n\"properties\": {\n\"type\": \"object\",\n\"properties\": {\n\"example_input_string\": {\n\"type\": \"string\",\n\"title\": \"Example Input String\"\n},\n\"example_input_number\": {\n\"type\": \"number\",\n\"title\": \"Example Input Number\"\n},\n\"example_input_boolean\": {\n\"type\": \"boolean\",\n\"title\": \"Example Input Boolean\"\n},\n\"example_input_date\": {\n\"type\": \"string\",\n\"format\": \"date\",\n\"title\": \"Example Input Date\"\n},\n\"example_input_object\": {\n\"type\": \"object\",\n\"properties\": {\n\"nested_field\": {\n\"type\": \"string\",\n\"title\": \"Nested Field\"\n}\n},\n\"required\": [],\n\"title\": \"Example Input Object\"\n},\n\"example_input_array\": {\n\"type\": \"array\",\n\"items\": {\n\"type\": \"string\"\n},\n\"title\": \"Example Input Array\"\n},\n\"example_input_file\": {\n\"type\": \"string\",\n\"format\": \"file-input\",\n\"title\": \"Example Input File\"\n}\n},\n\"additionalProperties\": true,\n\"title\": \"Input\"\n},\n\"type\": \"object\"\n},\n\"inputFooter\": {\n\"type\": \"string\"\n},\n\"isAsync\": {\n\"default\": false,\n\"type\": \"boolean\"\n},\n\"output\": {\n\"additionalProperties\": true,\n\"properties\": {\n\"type\": \"object\",\n\"properties\": {\n\"example_output_string\": {\n\"type\": \"string\",\n\"title\": \"Example output String\"\n},\n\"example_output_number\": {\n\"type\": \"number\",\n\"title\": \"Example output Number\"\n},\n\"example_output_boolean\": {\n\"type\": \"boolean\",\n\"title\": \"Example output Boolean\"\n},\n\"example_output_date\": {\n\"type\": \"string\",\n\"format\": \"date\",\n\"title\": \"Example output Date\"\n},\n\"example_output_object\": {\n\"type\": \"object\",\n\"properties\": {\n\"nested_field\": {\n\"type\": \"string\",\n\"title\": \"Nested Field\"\n}\n},\n\"required\": [],\n\"title\": \"Example output Object\"\n},\n\"example_output_array\": {\n\"type\": \"array\",\n\"items\": {\n\"type\": \"string\"\n},\n\"title\": \"Example output Array\"\n},\n\"example_output_file\": {\n\"type\": \"string\",\n\"format\": \"file-input\",\n\"title\": \"Example output File\"\n}\n},\n\"additionalProperties\": true,\n\"title\": \"Input\"\n},\n\"type\": \"object\"\n},\n\"parameters_loader\": {\n\"type\": \"object\"\n}\n}```\n\n**Instructions for use:**\n- Replace the example fields in each section (`input`, `output`, `code`) needed for your action. Example fields are placed for your reference. You need to add the fields inside the properties object only, same as the example.\n- All sections allow for additional properties, so you can freely add custom fields.\n- Use the input section to define input parameters for your action.\n- Use the output section to define the expected output structure of your action.\n- Use the code section to write the script that performs the task, and code language will be based on user query.\n- [IMPORTANT]: You must follow the pattern shown in the example below. Any field definition not wrapped under \"type\": \"object\" and \"properties\" will be considered invalid.\n\n### Example\n{ \"output\": { \"type\": \"object\",\"properties\": {\"area\": { \"type\": \"number\", \"title\": \"Area\" } }, \"additionalProperties\": false,\"required\": [] }, \"input\": { \"type\": \"object\", \"properties\": { \"length\": { \"type\": \"number\", \"title\": \"Length\" }, \"width\": { \"type\": \"number\",\"title\": \"Width\" } },\"additionalProperties\": false, \"required\": []},\"code\": \"import groovy.lang.Binding;\\nint length = (int) binding.getVariable(\\\"length\\\");\\nint width = (int) binding.getVariable(\\\"width\\\");\\n\\n int area = length * width;\\n\\nreturn [\\\"area\\\":area]\" }"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@6",
			"id":"_puUvx@6",
			"index":12,
			"inputs":{
				"name":"Scheduler Trigger",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"schedule_default"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":358,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@6",
			"id":"jAi1i",
			"index":13,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application  Schema:\n```json\n{ \"cron\": { \"type\": \"string\", \"title\": \"Schedule Type\", \"oneOf\": [ { \"const\": \"INTERVAL\", \"title\": \"Interval\" }, { \"const\": \"EXPRESSION\", \"title\": \"Cron Expression\" } ], \"default\": \"INTERVAL\" }, \"interval\": { \"type\": \"number\", \"title\": \"Trigger every\", \"default\": 15, \"minimum\": 1 }, \"frequency\": { \"type\": \"string\", \"title\": \"Frequency\", \"oneOf\": [ { \"const\": \"SECONDS\", \"title\": \"Seconds\" }, { \"const\": \"MINUTES\", \"title\": \"Minutes\" }, { \"const\": \"HOURS\", \"title\": \"Hours\" }, { \"const\": \"DAYS\", \"title\": \"Days\" }, { \"const\": \"WEEKS\", \"title\": \"Weeks\" }, { \"const\": \"MONTHS\", \"title\": \"Months\" } ], \"default\": \"MINUTES\" }, \"expression\": { \"type\": \"string\", \"title\": \"Cron Expression(UTC/GMT)\", \"default\": \"0 0 * * *\" }, \"triggerAt\": { \"type\": \"string\", \"title\": \"Trigger at\", \"format\": \"time\" }, \"daysOfWeek\": { \"type\": \"array\", \"title\": \"Days of the week\", \"items\": { \"type\": \"string\", \"uniqueItems\": true, \"oneOf\": [ { \"const\": \"MONDAY\", \"title\": \"Monday\" }, { \"const\": \"TUESDAY\", \"title\": \"Tuesday\" }, { \"const\": \"WEDNESDAY\", \"title\": \"Wednesday\" }, { \"const\": \"THURSDAY\", \"title\": \"Thursday\" }, { \"const\": \"FRIDAY\", \"title\": \"Friday\" }, { \"const\": \"SATURDAY\", \"title\": \"Saturday\" }, { \"const\": \"SUNDAY\", \"title\": \"Sunday\" } ] } }, \"daysOfMonth\": { \"type\": \"array\", \"title\": \"Days of the month\", \"items\": { \"type\": \"number\", \"uniqueItems\": true, \"oneOf\": [ {\"const\": 1, \"title\": \"1st\"}, {\"const\": 2, \"title\": \"2nd\"}, {\"const\": 3, \"title\": \"3rd\"}, {\"const\": 4, \"title\": \"4th\"}, {\"const\": 5, \"title\": \"5th\"}, {\"const\": 6, \"title\": \"6th\"}, {\"const\": 7, \"title\": \"7th\"}, {\"const\": 8, \"title\": \"8th\"}, {\"const\": 9, \"title\": \"9th\"}, {\"const\": 10, \"title\": \"10th\"}, {\"const\": 11, \"title\": \"11th\"}, {\"const\": 12, \"title\": \"12th\"}, {\"const\": 13, \"title\": \"13th\"}, {\"const\": 14, \"title\": \"14th\"}, {\"const\": 15, \"title\": \"15th\"}, {\"const\": 16, \"title\": \"16th\"}, {\"const\": 17, \"title\": \"17th\"}, {\"const\": 18, \"title\": \"18th\"}, {\"const\": 19, \"title\": \"19th\"}, {\"const\": 20, \"title\": \"20th\"}, {\"const\": 21, \"title\": \"21st\"}, {\"const\": 22, \"title\": \"22nd\"}, {\"const\": 23, \"title\": \"23rd\"}, {\"const\": 24, \"title\": \"24th\"}, {\"const\": 25, \"title\": \"25th\"}, {\"const\": 26, \"title\": \"26th\"}, {\"const\": 27, \"title\": \"27th\"}, {\"const\": 28, \"title\": \"28th\"}, {\"const\": 29, \"title\": \"29th\"}, {\"const\": 30, \"title\": \"30th\"}, {\"const\": 31, \"title\": \"31st\"} ] } }, \"triggerInputCondition\": { \"type\": \"object\", \"properties\": { \"conditionType\": { \"type\": \"string\", \"title\": \"Condition Type\", \"oneOf\": [ { \"const\": \"NONE\", \"title\": \"No Condition\" }, { \"const\": \"CUSTOM\", \"title\": \"Custom Condition\" } ], \"default\": \"NONE\" }, \"customCondition\": { \"type\": \"string\", \"title\": \"Custom Condition Expression\" } }, \"additionalProperties\": true, \"title\": \"Trigger Conditions\" } }```\n**Instructions for use:**\n- Choose between two scheduling methods: \n-- Interval: Run at regular intervals \n-- Cron Expression: Use standard cron syntax for more complex schedules\n- For Interval scheduling:\n-- Set the time value in the \"Trigger every\" field\n-- Select the appropriate frequency unit (seconds, minutes, hours, days, weeks, months)\n-- Note the following constraints:\n--- Seconds must be at least 15\n--- Days cannot exceed 29\n--- For daily, weekly, or monthly frequencies, specify the exact time using \"Trigger at\"\n--- For weekly frequency, select specific days of the week\n--- For monthly frequency, select specific days of the month\n- For Cron Expression scheduling: \n-- Provide a valid cron expression in the format: minute hour day-of-month month day-of-week\n-- Example: 0 0 * * * (runs daily at midnight UTC/GMT)\n-- Common expressions:\n--- 7 * * * *- Every hour at minute 7\n--- 0 * * * * - Every hour at minute 0\n--- 0 0 * * 1 - Every Monday at midnight\n--- 0 0 1 * * - First day of every month at midnight\n- For trigger Input Conditions \n-- Optionally define conditions that must be met for the schedule to trigger\n-- Use the \"conditionType\" field to specify if a condition is needed\n-- For custom conditions, provide a valid expression in the \"customCondition\" field\n\n### Example\n- For Interval Every 30 Minutes:\n{ \"cron\": \"INTERVAL\", \"interval\": 30, \"frequency\": \"MINUTES\" }\n- For cron expression:\n{ \"cron\": \"EXPRESSION\", \"expression\": \"30 3 * * *\" }"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@7",
			"id":"_puUvx@7",
			"index":14,
			"inputs":{
				"name":"Create Variable",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"variable_by_unifyapps_create_variables"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":351,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@7",
			"id":"_jcQ9T",
			"index":15,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema Template:\n```json \n{ \"inputSchema\": { \"type\": \"SCHEMA\", \"dynamic\": false, \n\"schema\": { \"additionalProperties\": false, \"type\": \"object\", \"properties\": { \"propertyName\": { \"type\": \"string\", \"title\": \"propertyName Title\"} //ADD MORE IF NECESSARY }, \n\"required\": [ // Add required field names here ] } }, \"inputs\": { // Add corresponding input values here } }\n\n\"outputSchema\": { \"dynamic\": false, \"schema\": { \"additionalProperties\": false, \"type\": \"object\", \"properties\": { \"propertyName\": { \"type\": \"string\", \"title\": \"propertyName Title\" }, \"_ua_variableDetails\": { \"type\": \"array\", \"title\": \"Variable Details\", \"items\": { \"properties\": { \"description\": { \"description\": \"Description of the variable\", \"type\": \"string\" }, \"dataType\": { \"description\": \"Data type of the variable\", \"type\": \"string\" }, \"name\": { \"description\": \"Name of the variable\", \"type\": \"string\" } }, \"type\": \"object\" } } }, \"required\": [ \"property\" ] } }\n\n``` \n**CRITICAL** CREATE THE OUTPUT SCHEMA AND OUTPUT IT TO THE SCHEMA PART IN THE OUTPUT.\n[IMPORTANT] YOU MUST CREATE BOTH THE INPUT AND OUTPUT SCHEMA\n\n**Instructions for use:** \n- Replace the example fields in the \"inputSchema.schema.properties\" section as needed for your variable setup. Example fields are placed for your reference. \n- You need to add the fields inside the properties object only, same as the example pattern. \n- [IMPORTANT] Don't directly copy the input schema. Take this example schema as reference and create only necessary variables based on user query. Give meaningful name as per user query. \n- The \"inputSchema\" section defines the structure and validation rules for your variables. - The \"inputs\" section contains the actual values that correspond to each field defined in the schema. \n- Set additionalProperties to false if you want strict validation, or true to allow extra fields. - Add field names to the required array if those fields are mandatory. \n- While creating fields in inputSchema and outputSchema make sure you create only required number of fields which is asked in user query. DO NOT create extra fields. \n- [IMPORTANT]: You must follow the pattern shown in the example below. Any field definition not wrapped under \"type\": \"object\" and \"properties\" will be considered invalid. \n- THE OUTPUT SCHEMA IS REQUIRED FOR THIS BLOCK TO WORK\n\n**CRITICAL INSTRUCTIONS:** \n1. **Create ONLY the variables requested by the user** - Do not add extra fields or use the reference examples below \n2. **Field Definition Pattern** - Each field must follow this exact structure: \n```json \"your_field_name\": { \"type\": \"string|number|integer|boolean|array|object\", \"title\": \"Human Readable Title\" } ``` \n3. **Available Field Types Reference** (DO NOT copy these - they are examples only): \n- String: `{\"type\": \"string\", \"title\": \"Field Title\"}` \n- Number: `{\"type\": \"number\", \"title\": \"Field Title\"}` \n- Integer: `{\"type\": \"integer\", \"title\": \"Field Title\"}` \n- Boolean: `{\"type\": \"boolean\", \"title\": \"Field Title\"}` \n- Array: `{\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"title\": \"Field Title\"}` \n- Object: `{\"type\": \"object\", \"properties\": {...}, \"title\": \"Field Title\"}` \n- Date: `{\"type\": \"string\", \"format\": \"date\", \"title\": \"Field Title\"}` \n- DateTime: `{\"type\": \"string\", \"format\": \"date-time\", \"title\": \"Field Title\"}` \n4. **Inputs Section** - Provide sample values that match your schema field types \n5. **Required Fields** \n- Add field names to the \"required\" array only if they are mandatory \n**Example Usage:** If user asks for \"name and age variables\": \n```json { \"inputSchema\": { \"type\": \"SCHEMA\", \"dynamic\": false, \"schema\": { \"additionalProperties\": false, \"type\": \"object\", \"properties\": { \"name\": { \"type\": \"string\", \"title\": \"Name\" }, \"age\": { \"type\": \"integer\", \"title\": \"Age\" } }, \"required\": [\"name\"] } }, \"inputs\": { \"name\": \"John Doe\", \"age\": 25 } } ``` \n**Remember:** - Create exactly what the user requests - no more, no less \n- Use meaningful field names based on the user's query \n- The reference examples above are for understanding field types only - do not copy them\n\n[IMPORTANT EXAMPLE OF ACTUAL USAGE]\n\n\"inputSchema\": { \"type\": \"SCHEMA_AND_LAYOUT\", \"dynamic\": false, \"layout\": {}, \"schema\": { \"additionalProperties\": false, \"type\": \"object\", \"properties\": { \"endResult\": { \"type\": \"string\", \"title\": \"End Result\" } }, \"required\": [ \"endResult\" ] } },\n\"outputSchema\": { \"dynamic\": false, \"schema\": { \"additionalProperties\": false, \"type\": \"object\", \"properties\": { \"endResult\": { \"type\": \"string\", \"title\": \"End Result\" }, \"_ua_variableDetails\": { \"type\": \"array\", \"title\": \"Variable Details\", \"items\": { \"properties\": { \"description\": { \"description\": \"Description of the variable\", \"type\": \"string\" }, \"dataType\": { \"description\": \"Data type of the variable\", \"type\": \"string\" }, \"name\": { \"description\": \"Name of the variable\", \"type\": \"string\" } }, \"type\": \"object\" } } }, \"required\": [ \"endResult\" ] } }\n\n[IMPORTANT] THE OUTPUT SHOULD MATCH EXACTLY THIS ABOVE.\n[CRITICAL] THIS IS THE ONLY NODE YOU MUST ALSO GENERATE OUTPUT SCHEMA FOR AS WELL. THE inputSchema and outputSchema must BOTH be added to the schema OUTPUT. THIS IS THE ONLY WAY IT WILL HAVE A VALID OUTPUT.\n\n[CRITICAL] PUT THE OUTPUT SCHEMA INSIDE THE SCHEMA OUTPUT SO IT FORMS THE JSON SCHEMA.OUTPUT SCHEMA\n**[CRITICAL][IMPORTANT]**MAKE SURE TO GENERATE THE OUTPUT SCHEMA FOR THIS NODE EVEN IF THE INSTRUCTIONS DON'T EXPLICITLY ASK. YOU MUST CREATE IT IN ACCORDANCE WITH THE FORMAT ABOVE"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@8",
			"id":"_puUvx@8",
			"index":16,
			"inputs":{
				"name":"HTTP Endpoint",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"custom_http_endpoint_execute"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":439,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@8",
			"id":"n_uil8j",
			"index":17,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application  Schema:\n```json\n{ \"httpMethod\": { \"type\": \"string\", \"title\": \"HTTP Method\", \"oneOf\": [ { \"const\": \"GET\", \"title\": \"GET\" }, { \"const\": \"POST\", \"title\": \"POST\" }, { \"const\": \"PUT\", \"title\": \"PUT\" }, { \"const\": \"DELETE\", \"title\": \"DELETE\" }, { \"const\": \"PATCH\", \"title\": \"PATCH\" }, { \"const\": \"HEAD\", \"title\": \"HEAD\" }, { \"const\": \"OPTIONS\", \"title\": \"OPTIONS\" } ], \"default\": \"GET\" }, \"baseUrl\": { \"type\": \"string\", \"title\": \"Base URL\", \"format\": \"uri\" }, \"path\": { \"type\": \"string\", \"title\": \"Path\", \"default\": \"\" }, \"isAsync\": { \"type\": \"boolean\", \"title\": \"Asynchronous Request\", \"default\": false }, \"requestTimeoutInSecs\": { \"type\": \"number\", \"title\": \"Request Timeout (seconds)\", \"default\": -1, \"minimum\": -1 }, \"sslVerify\": { \"type\": \"boolean\", \"title\": \"SSL Verification\", \"default\": true }, \"sslCertificate\": { \"type\": \"string\", \"title\": \"SSL Certificate\" }, \"ignoreTrailingSlashes\": { \"type\": \"boolean\", \"title\": \"Ignore Trailing Slashes\", \"default\": false }, \"authType\": { \"type\": \"string\", \"title\": \"Authentication Type\", \"oneOf\": [ { \"const\": \"NONE\", \"title\": \"No Authentication\" }, { \"const\": \"BASIC\", \"title\": \"Basic Authentication\" }, { \"const\": \"BEARER\", \"title\": \"Bearer Token\" }, { \"const\": \"API_KEY\", \"title\": \"API Key\" }, { \"const\": \"OAUTH2\", \"title\": \"OAuth 2.0\" }, { \"const\": \"CUSTOM\", \"title\": \"Custom Authentication\" } ], \"default\": \"NONE\" }, \"requestContentType\": { \"type\": \"string\", \"title\": \"Request Content Type\", \"oneOf\": [ { \"const\": \"application/json\", \"title\": \"JSON\" }, { \"const\": \"application/xml\", \"title\": \"XML\" }, { \"const\": \"application/x-www-form-urlencoded\", \"title\": \"Form Data\" }, { \"const\": \"multipart/form-data\", \"title\": \"Multipart Form\" }, { \"const\": \"text/plain\", \"title\": \"Plain Text\" }, { \"const\": \"text/html\", \"title\": \"HTML\" } ], \"default\": \"application/json\" }, \"responseContentType\": { \"type\": \"string\", \"title\": \"Expected Response Content Type\", \"oneOf\": [ { \"const\": \"application/json\", \"title\": \"JSON\" }, { \"const\": \"application/xml\", \"title\": \"XML\" }, { \"const\": \"text/plain\", \"title\": \"Plain Text\" }, { \"const\": \"text/html\", \"title\": \"HTML\" }, { \"const\": \"application/octet-stream\", \"title\": \"Binary\" } ], \"default\": \"application/json\" }, \"headersList\": { \"type\": \"array\", \"title\": \"Request Headers\", \"items\": { \"type\": \"object\", \"properties\": { \"key\": { \"type\": \"string\", \"title\": \"Header Key\" }, \"value\": { \"type\": \"string\", \"title\": \"Header Value\" } }, \"required\": [\"key\", \"value\"] } }, \"queryParamsList\": { \"type\": \"array\", \"title\": \"Query Parameters\", \"items\": { \"type\": \"object\", \"properties\": { \"key\": { \"type\": \"string\", \"title\": \"Parameter Key\" }, \"value\": { \"type\": \"string\", \"title\": \"Parameter Value\" } }, \"required\": [\"key\", \"value\"] } }, \"bodySchema\": { \"type\": \"object\", \"title\": \"Request Body Schema\", \"properties\": { \"type\": { \"type\": \"string\", \"default\": \"object\" }, \"properties\": { \"type\": \"object\", \"additionalProperties\": true }, \"additionalProperties\": { \"type\": \"boolean\", \"default\": false }, \"required\": { \"type\": \"array\", \"items\": { \"type\": \"string\" }, \"default\": [] } } }, \"responseSchema\": { \"type\": \"object\", \"title\": \"Response Schema\", \"properties\": { \"type\": { \"type\": \"string\", \"default\": \"object\" }, \"properties\": { \"type\": \"object\", \"additionalProperties\": true }, \"additionalProperties\": { \"type\": \"boolean\", \"default\": false }, \"required\": { \"type\": \"array\", \"items\": { \"type\": \"string\" }, \"default\": [] } } }, \"responseHeaders\": { \"type\": \"array\", \"title\": \"Expected Response Headers\", \"items\": { \"type\": \"string\" } }, \"errorResponseSchemas\": { \"type\": \"array\", \"title\": \"Error Response Schemas\", \"items\": { \"type\": \"object\", \"properties\": { \"status\": { \"type\": \"number\", \"title\": \"HTTP Status Code\" }, \"schema\": { \"type\": \"object\", \"title\": \"Error Response Schema\" } }, \"required\": [\"status\"] } }, \"enableProxy\": { \"type\": \"boolean\", \"title\": \"Enable Proxy\", \"default\": false }, \"proxySettings\": { \"type\": \"object\", \"title\": \"Proxy Settings\", \"properties\": { \"host\": { \"type\": \"string\", \"title\": \"Proxy Host\" }, \"port\": { \"type\": \"string\", \"title\": \"Proxy Port\" }, \"username\": { \"type\": \"string\", \"title\": \"Proxy Username\" }, \"password\": { \"type\": \"string\", \"title\": \"Proxy Password\" } }, \"required\": [\"host\", \"port\"] } }\n```\n**Instructions for use:**\n1. HTTP Method Configuration: \na. Select the appropriate HTTP method (GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS)\nb. GET for retrieving data, POST for creating, PUT for updating, DELETE for removing\n2. URL Configuration:\na. Set the base URL (e.g., \"https://api.example.com\")\nb. Specify the path (e.g., \"/users/123\" or \"/api/v1/data\")\nc. The full URL will be: baseUrl + path\n3. Request Settings:\na. Set isAsync to true for asynchronous requests\nb. Configure requestTimeoutInSecs (-1 for no timeout, or positive number for timeout in seconds)\nc. Enable/disable SSL verification with sslVerify\nd. Provide SSL certificate if custom certificate is needed\ne. Set ignoreTrailingSlashes to handle URL formatting\n4. Authentication:\na. Choose authentication type: NONE, BASIC, BEARER, API_KEY, OAUTH2, or CUSTOM\nb. Configure corresponding authentication headers in headersList\n5. Content Types:\na. Set requestContentType for the request body format\nb. Set responseContentType for expected response format\nc. Common types: application/json, application/xml, text/plain\n6. Headers and Parameters:\na. Add request headers as key-value pairs in headersList\nb. Add query parameters as key-value pairs in queryParamsList\nc. Headers example: [{\"key\": \"Authorization\", \"value\": \"Bearer token123\"}]\n7. Request Body Schema:\na. Define the structure of request body for POST/PUT/PATCH requests\nb. Use JSON Schema format to specify properties and types\nc. Set required fields in the required array\n8. Response Configuration:\na. Define expected response structure in responseSchema\nb. Specify expected response headers in responseHeaders\nc. Configure error response schemas for different HTTP status codes\n9. Proxy Settings:\na. Enable proxy with enableProxy: true\nb. Configure proxy host, port, and optional authentication\nc. Required fields: host and port\n\n## Examples:\n1. Simple GET Request - Fetch User Profile:\n{ \"httpMethod\": \"GET\", \"baseUrl\": \"https://jsonplaceholder.typicode.com\", \"path\": \"/users/1\", \"authType\": \"BEARER\", \"headersList\": [ {\"key\": \"Authorization\", \"value\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"}, {\"key\": \"Accept\", \"value\": \"application/json\"} ], \"responseContentType\": \"application/json\", \"responseSchema\": { \"type\": \"object\", \"properties\": { \"id\": {\"type\": \"number\", \"title\": \"User ID\"}, \"name\": {\"type\": \"string\", \"title\": \"Full Name\"}, \"username\": {\"type\": \"string\", \"title\": \"Username\"}, \"email\": {\"type\": \"string\", \"title\": \"Email Address\"}, \"phone\": {\"type\": \"string\", \"title\": \"Phone Number\"} }, \"required\": [\"id\", \"name\", \"email\"] } }\n2. POST Request - Create New Customer:\n{ \"httpMethod\": \"POST\", \"baseUrl\": \"https://api.crm.company.com\", \"path\": \"/api/v1/customers\", \"requestContentType\": \"application/json\", \"responseContentType\": \"application/json\", \"bodySchema\": { \"type\": \"object\", \"properties\": { \"firstName\": {\"type\": \"string\", \"title\": \"First Name\"}, \"lastName\": {\"type\": \"string\", \"title\": \"Last Name\"}, \"email\": {\"type\": \"string\", \"title\": \"Email Address\"}, \"companyName\": {\"type\": \"string\", \"title\": \"Company Name\"}, \"phoneNumber\": {\"type\": \"string\", \"title\": \"Phone Number\"}, \"address\": { \"type\": \"object\", \"properties\": { \"street\": {\"type\": \"string\", \"title\": \"Street Address\"}, \"city\": {\"type\": \"string\", \"title\": \"City\"}, \"state\": {\"type\": \"string\", \"title\": \"State\"}, \"zipCode\": {\"type\": \"string\", \"title\": \"ZIP Code\"} }, \"title\": \"Address\" } }, \"required\": [\"firstName\", \"lastName\", \"email\"] }, \"headersList\": [ {\"key\": \"Content-Type\", \"value\": \"application/json\"}, {\"key\": \"X-API-Key\", \"value\": \"sk_live_abc123xyz789\"} ], \"queryParamsList\": [ {\"key\": \"source\", \"value\": \"web_portal\"}, {\"key\": \"campaign_id\", \"value\": \"summer_2024\"} ] }\n3. E-commerce Order Update with Proxy:\n{ \"httpMethod\": \"PUT\", \"baseUrl\": \"https://api.shopify.com\", \"path\": \"/admin/api/2023-04/orders/12345.json\", \"enableProxy\": true, \"proxySettings\": { \"host\": \"corporate-proxy.company.com\", \"port\": \"3128\", \"username\": \"employee_john\", \"password\": \"secure_proxy_pass\" }, \"authType\": \"CUSTOM\", \"headersList\": [ {\"key\": \"X-Shopify-Access-Token\", \"value\": \"shpat_1a2b3c4d5e6f7g8h9i0j\"}, {\"key\": \"Content-Type\", \"value\": \"application/json\"} ], \"bodySchema\": { \"type\": \"object\", \"properties\": { \"order\": { \"type\": \"object\", \"properties\": { \"fulfillment_status\": {\"type\": \"string\", \"title\": \"Fulfillment Status\"}, \"tracking_number\": {\"type\": \"string\", \"title\": \"Tracking Number\"}, \"shipping_carrier\": {\"type\": \"string\", \"title\": \"Shipping Carrier\"} }, \"title\": \"Order Details\" } }, \"required\": [\"order\"] } }\n4. Payment Processing with Comprehensive Error Handling:\n{ \"httpMethod\": \"POST\", \"baseUrl\": \"https://api.stripe.com\", \"path\": \"/v1/payment_intents\", \"requestTimeoutInSecs\": 30, \"authType\": \"BEARER\", \"sslVerify\": true, \"headersList\": [ {\"key\": \"Authorization\", \"value\": \"Bearer sk_test_payment_key_abc123\"}, {\"key\": \"Content-Type\", \"value\": \"application/x-www-form-urlencoded\"}, {\"key\": \"Stripe-Version\", \"value\": \"2023-10-16\"} ], \"queryParamsList\": [ {\"key\": \"expand[]\", \"value\": \"latest_charge\"} ], \"bodySchema\": { \"type\": \"object\", \"properties\": { \"amount\": {\"type\": \"number\", \"title\": \"Amount in Cents\"}, \"currency\": {\"type\": \"string\", \"title\": \"Currency Code\"}, \"customer_id\": {\"type\": \"string\", \"title\": \"Customer ID\"}, \"payment_method\": {\"type\": \"string\", \"title\": \"Payment Method ID\"}, \"description\": {\"type\": \"string\", \"title\": \"Payment Description\"} }, \"required\": [\"amount\", \"currency\"] }, \"responseHeaders\": [ \"Request-Id\", \"Stripe-Version\" ], \"errorResponseSchemas\": [ {\"status\": 400, \"schema\": {\"type\": \"object\", \"properties\": {\"error\": {\"type\": \"object\"}}}}, {\"status\": 401, \"schema\": {\"type\": \"object\", \"properties\": {\"error\": {\"type\": \"string\"}}}}, {\"status\": 402, \"schema\": {\"type\": \"object\", \"properties\": {\"error\": {\"type\": \"object\"}}}}, {\"status\": 429, \"schema\": {\"type\": \"object\", \"properties\": {\"error\": {\"type\": \"string\"}}}} ] }\n5.Weather API with Real-world Parameters:\n{ \"httpMethod\": \"GET\", \"baseUrl\": \"https://api.openweathermap.org\", \"path\": \"/data/2.5/weather\", \"authType\": \"API_KEY\", \"queryParamsList\": [ {\"key\": \"q\", \"value\": \"New York,NY,US\"}, {\"key\": \"appid\", \"value\": \"your_openweather_api_key\"}, {\"key\": \"units\", \"value\": \"imperial\"}, {\"key\": \"lang\", \"value\": \"en\"} ], \"headersList\": [ {\"key\": \"Accept\", \"value\": \"application/json\"}, {\"key\": \"User-Agent\", \"value\": \"WeatherApp/1.0\"} ], \"responseSchema\": { \"type\": \"object\", \"properties\": { \"weather\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"main\": {\"type\": \"string\", \"title\": \"Weather Main\"}, \"description\": {\"type\": \"string\", \"title\": \"Weather Description\"} } }, \"title\": \"Weather Conditions\" }, \"main\": { \"type\": \"object\", \"properties\": { \"temp\": {\"type\": \"number\", \"title\": \"Temperature\"}, \"humidity\": {\"type\": \"number\", \"title\": \"Humidity\"}, \"pressure\": {\"type\": \"number\", \"title\": \"Pressure\"} }, \"title\": \"Main Weather Data\" } }, \"required\": [\"weather\", \"main\"] } }"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@9",
			"id":"_puUvx@9",
			"index":18,
			"inputs":{
				"name":"Update Variable Action",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"variable_by_unifyapps_update_variables"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":436,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@9",
			"id":"n_zf5Ik",
			"index":19,
			"inputs":{
				"template_id":"e_6851010e982ea80210aded85"
			},
			"skip":false,
			"subTitle":"Template by UnifyApps",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":445,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@9",
			"id":"n_d6dKT",
			"index":20,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"{{ n_zf5Ik.outputs.output }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@10",
			"id":"_puUvx@10",
			"index":21,
			"inputs":{
				"name":"Return To Automation",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.appName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"callables"
							}
						},
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"callables_return_to_automation"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":346,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@10",
			"id":"_ncgL2",
			"index":22,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n{\n\"result\": { // Add your result fields here\n\"example_result_string\": { \"Example Result String\" },\n\"example_result_number\": { \"Example Result Number\" },\n\"example_result_boolean\": { \"Example Result Boolean\" },\n\"example_result_date\": { \"Example Result Date\" },\n\"example_result_object\": { \"type\": \"object\", \"properties\": { \"nested_field\": { \"type\": \"string\", \"title\":\n\"Nested Field\" } }, \"required\": [], \"title\": \"Example Result Object\" }\n\"example_result_array\": { \"source\": \"source\", \"ua:type\": \"mappedArray\", \"items\": {\"itemTitle\":\"value\" } }\n\"example_result_file\": { \"type\": \"string\", \"format\": \"file-input\", \"title\": \"Example Result File\" }, \n\"additionalProperties\": true, \"title\":\"Result\" }\n\n** [IMPORTANT] ALL FIELDS ADDED SHOULD MATCH EXACTLY THE RESULT SCHEMA OF THE TRIGGER NODE**\nIf the prompt only requires one string ONLY add that string with that name. DO NOT add anything else. Additionally,\nname all input and output schema appropriately. \n\n[IMPORTANT] If the user wants to return something from the automation, then you need to add what they are returning to the results. \n\n[IMPORTANT] HERE IS AN EXAMPLE OF A RESULT THAT HAS AN INPUT FROM BEFORE\n\"result\": { \"query\": \"{{ fUo41.outputs.double_open_bracket }}_9Ls5N.outputs.query {{ fUo41.outputs.double_close_bracket }}\" }\n\n\n**Instructions for use:**\n- Replace the example fields in each section (`result`) needed for your action. Example fields are placed for your reference. You need to add the fields inside the properties object only, same as the example.\n- Freely add custom fields\n- Use the result is for defining the expected output structure of your action.\n- The triggerInputCondition section can be used to define conditions that must be met for the action to trigger. \n- Do not name any output as 'example_setup_string' or name them appropriately as per the user query\n\n### Example\n{ \"result\": { \"query\": \"hello\" } }"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@11",
			"id":"_puUvx@11",
			"index":23,
			"inputs":{
				"name":"Callables From API",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.appName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"callabes"
							}
						},
						{
							"property":"{{ Im0zL.outputs.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"callables_from_api"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":346,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@11",
			"id":"_DjQVw",
			"index":24,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n{\"request\":{\"contentType\":\"CONTENT_TYPE\",\"pathParams\":{\"type\":\"object\",\"properties\":\n{\"example_property\":{\"type\":\"example_datatype\",\"title\":\"example_property_name\"}}, \"additionalProperties\":false,\"required\":[\"example_property\"]},\n\"queryParams\":{\"type\":\"object\",\"properties\": {\"example_property\":{\"type\":\"example_datatype\",\"title\":\"example_property_name\"}},\"additionalProperties\":false,\"required\":[\"example_property\"]},\n\"headers\":{\"type\":\"object\",\"properties\":{\"example_property\":{\"type\":\"example_datatype\",\"title\":\"example_property_name\"}},\"additionalProperties\":false,\"required\":[\"example_property\"]},\n\"body\":{\"type\":\"object\",\"properties\":{\"example_property\":{\"type\":\"example_datatype\",\"title\":\"example_property_name\"}},\"additionalProperties\":false,\"required\":[\"example_property\"]},\n\"cookies\":{\"type\":\"object\",\"properties\":{\"example_property\":{\"type\":\"example_datatype\",\"title\":\"example_property_name\"}},\"additionalProperties\":false,\"required\":[\"example_property\"]}},\n\n\"endpointType\":\"EXAMPLE_ENDPOINT_TYPE\",\n\n\"response\":[{\"status\":200,\"contentType\":\"application/json\",\"textBody\":{\"type\":\"string\"},\"name\":\"example_response_body_name\",\n\"headers\":{\"type\":\"object\",\"properties\":{\"example_property\":{\"type\":\"example_datatype\",\"title\":\"example_property_name\"}},\"additionalProperties\":false,\"required\":[\"example_property\"]},\n\"body\":{\"type\":\"object\",\"properties\":{\"example_property\":{\"type\":\"example_datatype\",\"title\":\"example_property_name\"}},\"additionalProperties\":false,\"required\":[\"example_property\"]}}],\n\n\"streamingResponse\":false,\n\"triggerInputCondition\":{\"type\":\"object\",\"properties\":{\"example_condition\":{\"type\":\"boolean\",\"title\":\"Example Condition\"}},\"additionalProperties\":true,\"title\":\"Trigger Input Condition\"}}<br>\n\n** [IMPORTANT] ONLY ADD THE FIELDS THAT ARE REQUIRED BY THE PROMPT**\nIf the prompt only requires one string ONLY add that string with that name. DO NOT add anything else. Additionally,\nname all input and output schema appropriately. \n\n#Rules\n-endpointType can one of  \"REST\" or \"SOAP\", should default to REST unless otherwise specified\n-streamingResponse should always be false\n-The content type for request and response can be one of JSON, XML, Form URL Encoded, Multipart, or File, should default to JSON unless otherwise specified\n- All property names should be appropriately named as per the user query\n\n**Instructions for use:**\n- Replace the example fields in each section (`setup`, `result`, `triggerInputCondition`) needed for your action. Example fields are placed for your reference. You need to add the fields inside the properties object only, same as the example.\n- Use the request section to define input parameters for your action, which is what is received from the api.\n- Use the e section to define the expected output structure of your action, which is what it sent back to the api.\n- The triggerInputCondition section can be used to define conditions that must be met for the action to trigger.\n- [IMPORTANT]: You must follow the pattern shown in the example below. Any field definition not wrapped under \"type\": \"object\" and \"properties\" will be considered invalid. Notice how the naming conventions correspond with the variables' function. \n- Do not name any output as 'example_setup_string' name them appropriately\n\n### Example\n{ \"help\": \"This action sends a notification to a specified user\", \"setup\": { \"type\": \"object\", \"properties\": { \"user_id\": { \"type\": \"string\", \"title\": \"User ID\" }, \"message\": { \"type\": \"string\", \"title\": \"Notification Message\" } }, \"required\": [\"user_id\", \"message\"] }, \"result\": { \"type\": \"object\", \"properties\": { \"success\": { \"type\": \"boolean\", \"title\": \"Success Status\" }, \"timestamp\": { \"type\": \"string\", \"format\": \"date-time\", \"title\": \"Timestamp\" } }, \"required\": [\"success\"] } }"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@12",
			"id":"_puUvx@12",
			"index":25,
			"inputs":{
				"name":"Branch Condition Block",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.appName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"branch_condition"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":345,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@12",
			"id":"_5ISit",
			"index":26,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n\"conditions\":\n{\n\"filters\": [\n{\n\"property\": \"string\",\n\"filter\": {\n\"operator\": \"Simple/ String-Specific/ DateTime/ Existence Check Operations\",\n\"value\": \"string\"\n}\n},\n...\n],\n\"operator\": \"AND/OR\"\n}\n}\n```\n\n** [IMPORTANT] ONLY ADD THE FIELDS THAT ARE REQUIRED BY THE PROMPT**\nIf the prompt only requires one string ONLY add that string with that name. DO NOT add anything else. Additionally,\nname all properties PROPERLY.\n\n** [IMPORTANT] SET THE BRANCH'S NAME APPROPRIATELY TO THE PROMPT**\n** [IMPORTANT] SETUP UP THE CONDITIONS VERY CAREFULLY ABIDING TO THE FORMAT IN THE PROMPT\n\n\n[IMPORTANT] THE MOST IMPORTANT EXAMPLE - FINAL OUTPUT SHOULD FOLLOW THE EXACT BELOW FORMAT IN ACCORDANCE WITH THE USER PROMPT\n\"name\": \"Bank\", \"conditions\": { \"filters\": [ { \"property\": \"{{ fUo41.outputs.double_open_bracket }} _K7wKu.outputs.query {{ fUo41.outputs.double_close_bracket }}\", \"filter\": { \"operator\": \"CONTAINS\", \"value\": \"bank\" } } ], \"operator\": \"AND\" }\n\n\nMAKE SURE THE CONDITIONS CONTAIN THE CORRECT PROPERTY - IT CAN BE MAPPED FROM A PREVIOUS STEP IN THE FORMAT ABOVE\n\n#### Simple Operations (Used to Compare Values)\n\n| OPERATION NAME | Datatypes Allowed | Descriptions |\n|----------------|-------------------|--------------|\n| EQUAL | int, string, float, list | Checks if two values are equal. |\n| NOT_EQUAL | int, string, float, list | Checks if two values are not equal. |\n| IN | string, list | Checks if a value is within a list of values. |\n| NOT_IN | string, list | Checks if a value is not within a list of values. |\n| LT | int, float | Checks if a value is less than another value. |\n| LTE | int, float | Checks if a value is less than or equal to another value. |\n| GT | int, float | Checks if a value is greater than another value. |\n| GTE | int, float | Checks if a value is greater than or equal to another value. |\n| BETWEEN | int, float | Checks if a value is within a range of values. |\n\n#### String-Specific Operations (For string checks or contains operations)\n\n| OPERATION NAME | Datatypes Allowed | Descriptions |\n|----------------|-------------------|--------------|\n| REGEX | string | Checks if a string matches a regular expression pattern. |\n| NOT_REGEX | string | Checks if a string does not match a regular expression pattern. |\n| STARTS_WITH | string | Checks if a string starts with a specified substring. |\n| ENDS_WITH | string | Checks if a string ends with a specified substring. |\n| CONTAINS | string | Checks if a string contains a specified substring. |\n| NOT_CONTAINS | string | Checks if a string does not contain a specified substring. |\n| IREGEX | string | Case-insensitive version of REGEX. |\n| NOT_IREGEX | string | Case-insensitive version of NOT_REGEX. |\n| ICONTAINS | string | Case-insensitive version of CONTAINS. |\n| NOT_ICONTAINS | string | Case-insensitive version of NOT_CONTAINS. |\n\n#### DateTime field allowed only below Operation\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| EQUAL | int, string, float, list | Checks if two dates are equal. |\n| LT | int, float | Checks if a date is less than another date. |\n| LTE | int, float | Checks if a date is less than or equal to another date. |\n| GT | int, float | Checks if a date is greater than another date. |\n| GTE | int, float | Checks if a date is greater than or equal to another date. |\n| BETWEEN | int, float | Checks if two dates is within a range of values. |\n\n#### Existence Check (For Checking Existence in a Table)\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| EXISTS | Checks if a field exists. |\n| MISSING | Checks if a field is missing. |\n\n#### Composite Operations (Used to Join Two Filters) (Should be only one)\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| AND (true) | Combines two filters and returns true if both filters are true. It is used to ensure that multiple conditions are met simultaneously. |\n| OR (true) | Combines two filters and returns true if at least one of the filters is true. It is used to allow multiple alternative conditions. |\n\n1. One of the elements mentioned in under the 'Fillable Inputs'\nExample:\n{\n\"conditions\": {\n\"filters\": [\n{\n\"property\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.email {{ fUo41.outputs.double_close_bracket }}\",\n\"filter\": {\n\"operator\": \"EQUAL\",\n\"value\": \"abc@gmail.com\"\n}\n}\n],\n\"operator\": \"AND\"\n}\n}\n\n2. Custom string/integer value can be given to any field in 'Application Input Schema'\nExample:\n{\n\"conditions\": {\n\"filters\": [\n{\n\"property\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.email {{ fUo41.outputs.double_close_bracket }}\",\n\"filter\": {\n\"operator\": \"EQUAL\",\n\"value\": \"abc@gmail.com\"\n}\n},\n{\n\"property\": \"20\",\n\"filter\": {\n\"operator\": \"GT\",\n\"value\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.age {{ fUo41.outputs.double_close_bracket }}\"\n}\n}\n],\n\"operator\": \"OR\"\n}\n}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@13",
			"id":"_puUvx@13",
			"index":27,
			"inputs":{
				"name":"Branch Block",
				"conditions":{
					"filters":[
						{
							"property":"{{ Im0zL.outputs.context.appName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"branch"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":51,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@13",
			"id":"n_wdE5f",
			"index":28,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n\"conditions\":\n{\n\"filters\": [\n{\n\"property\": \"string\",\n\"filter\": {\n\"operator\": \"Simple/ String-Specific/ DateTime/ Existence Check Operations\",\n\"value\": \"string\"\n}\n},\n...\n],\n\"operator\": \"AND/OR\"\n}\n}\n```\n\n** [IMPORTANT] ONLY ADD THE FIELDS THAT ARE REQUIRED BY THE PROMPT**\nIf the prompt only requires one condition ONLY add that condition. DO NOT add anything else. Additionally,\nname all properties PROPERLY.\n\n** [IMPORTANT] SET THE BRANCH'S NAME APPROPRIATELY TO THE PROMPT**\n\n\nExample Branch Schema (That Will Already be Present): \"branches\": [ { \"id\": \"1\" \"inputs\": { \"name\": \"Branch 1\" } }, { \"id\": \"2\", \"inputs\": { \"name\": \"Branch 2\" } }, { \"id\": \"default\" } ]\n# [IMPORTANT INSTRUCTIONS FOR USE] THE CONDITIONS THAT YOU GENERATE MUST BE ADDED TO INPUT FOR THAT SPECIFIC BRANCH - OTHERWISE THE CONDITION IS INVALID\n** [IMPORTANT] SETUP UP THE CONDITIONS VERY CAREFULLY ABIDING TO THE FORMAT IN THE PROMPT\n\n[IMPORTANT] THE MOST IMPORTANT EXAMPLE - FINAL OUTPUT SHOULD FOLLOW THE EXACT BELOW FORMAT IN ACCORDANCE WITH THE USER PROMPT\n\"inputs\": { \"branches\": [ { \"id\": \"1\", \"inputs\": { \"name\": \"UnifyApps\", \"conditions\": { \"filters\": [ { \"property\": \"{{ fUo41.outputs.double_open_bracket }} _Z87l6.outputs.query {{ fUo41.outputs.double_close_bracket }}\", \"filter\": { \"operator\": \"CONTAINS\", \"value\": \"unifyapps\" } } ], \"operator\": \"AND\" } } }, { \"id\": \"2\", \"inputs\": { \"name\": \"Bank\", \"conditions\": { \"filters\": [ { \"property\": \"{{ fUo41.outputs.double_open_bracket }} _Z87l6.outputs.query {{ fUo41.outputs.double_close_bracket }}\", \"filter\": { \"operator\": \"NOT_CONTAINS\", \"value\": \"work\" } } ], \"operator\": \"AND\" } } }, { \"id\": \"default\" } ] }\nMAKE SURE THE CONDITIONS CONTAIN THE CORRECT PROPERTY - IT CAN BE MAPPED FROM A PREVIOUS STEP IN THE FORMAT ABOVE\n[IMPORTANT] THE PROPERTY IS THE MOST IMPORTANT PART\n\n#### Simple Operations (Used to Compare Values)\n\n| OPERATION NAME | Datatypes Allowed | Descriptions |\n|----------------|-------------------|--------------|\n| EQUAL | int, string, float, list | Checks if two values are equal. |\n| NOT_EQUAL | int, string, float, list | Checks if two values are not equal. |\n| IN | string, list | Checks if a value is within a list of values. |\n| NOT_IN | string, list | Checks if a value is not within a list of values. |\n| LT | int, float | Checks if a value is less than another value. |\n| LTE | int, float | Checks if a value is less than or equal to another value. |\n| GT | int, float | Checks if a value is greater than another value. |\n| GTE | int, float | Checks if a value is greater than or equal to another value. |\n| BETWEEN | int, float | Checks if a value is within a range of values. |\n\n#### String-Specific Operations (For string checks or contains operations)\n\n| OPERATION NAME | Datatypes Allowed | Descriptions |\n|----------------|-------------------|--------------|\n| REGEX | string | Checks if a string matches a regular expression pattern. |\n| NOT_REGEX | string | Checks if a string does not match a regular expression pattern. |\n| STARTS_WITH | string | Checks if a string starts with a specified substring. |\n| ENDS_WITH | string | Checks if a string ends with a specified substring. |\n| CONTAINS | string | Checks if a string contains a specified substring. |\n| NOT_CONTAINS | string | Checks if a string does not contain a specified substring. |\n| IREGEX | string | Case-insensitive version of REGEX. |\n| NOT_IREGEX | string | Case-insensitive version of NOT_REGEX. |\n| ICONTAINS | string | Case-insensitive version of CONTAINS. |\n| NOT_ICONTAINS | string | Case-insensitive version of NOT_CONTAINS. |\n\n#### DateTime field allowed only below Operation\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| EQUAL | int, string, float, list | Checks if two dates are equal. |\n| LT | int, float | Checks if a date is less than another date. |\n| LTE | int, float | Checks if a date is less than or equal to another date. |\n| GT | int, float | Checks if a date is greater than another date. |\n| GTE | int, float | Checks if a date is greater than or equal to another date. |\n| BETWEEN | int, float | Checks if two dates is within a range of values. |\n\n#### Existence Check (For Checking Existence in a Table)\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| EXISTS | Checks if a field exists. |\n| MISSING | Checks if a field is missing. |\n\n#### Composite Operations (Used to Join Two Filters) (Should be only one)\n\n| OPERATION NAME | Descriptions |\n|----------------|--------------|\n| AND (true) | Combines two filters and returns true if both filters are true. It is used to ensure that multiple conditions are met simultaneously. |\n| OR (true) | Combines two filters and returns true if at least one of the filters is true. It is used to allow multiple alternative conditions. |\n\n1. One of the elements mentioned in under the 'Fillable Inputs'\nExample:\n{\n\"conditions\": {\n\"filters\": [\n{\n\"property\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.email {{ fUo41.outputs.double_close_bracket }}\",\n\"filter\": {\n\"operator\": \"EQUAL\",\n\"value\": \"abc@gmail.com\"\n}\n}\n],\n\"operator\": \"AND\"\n}\n}\n\n2. Custom string/integer value can be given to any field in 'Application Input Schema'\nExample:\n{\n\"conditions\": {\n\"filters\": [\n{\n\"property\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.email {{ fUo41.outputs.double_close_bracket }}\",\n\"filter\": {\n\"operator\": \"EQUAL\",\n\"value\": \"abc@gmail.com\"\n}\n},\n{\n\"property\": \"20\",\n\"filter\": {\n\"operator\": \"GT\",\n\"value\": \"{{ fUo41.outputs.double_open_bracket }} nodeId.path.user.age {{ fUo41.outputs.double_close_bracket }}\"\n}\n}\n],\n\"operator\": \"OR\"\n}\n}\n\n"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_application",
				"resourceVersion":14,
				"resourceName":"custom_application_fetch_input_schema",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@default",
			"id":"_QEoIB",
			"index":29,
			"inputs":{
				"context":"{{ Im0zL.outputs.context }}"
			},
			"skip":false,
			"subTitle":"Custom Application",
			"title":"Fetch Input Schema",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":345,
				"resourceName":"utility_by_unifyapps_to_json_string",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@default",
			"id":"UuiLa",
			"index":30,
			"inputs":{
				"object":"{{ _QEoIB.outputs.inputSchema }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Serialise object to JSON string",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":345,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@l5mht-1@default",
			"id":"gOMNS",
			"index":31,
			"inputs":{
				"variables":[
					{
						"source":"{{ fUo41.outputs.instructions }}",
						"value":"### Application Schema:\n```json\n{{ UuiLa.outputs.result }}\n```"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":350,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"l5mht-1",
			"id":"2RCJ1",
			"index":32,
			"inputs":{
				"result":{
					"instructions":"{{ fUo41.outputs.instructions }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":39717,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"Text_to_Workflow_v2"
	],
	"version":78
}