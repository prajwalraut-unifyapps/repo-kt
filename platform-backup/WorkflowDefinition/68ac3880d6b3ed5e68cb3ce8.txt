{
	"appsUsed":[
		
	],
	"createdTime":1756986925219,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243583668,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed3f5e003e08cdeb2f7f",
		"status":"DEPLOYED",
		"version":13,
		"workflowVersion":55
	},
	"edges":[
		{
			"fromNodeId":"_gqpbo",
			"priority":0,
			"skip":false,
			"toNodeId":"hCOtX",
			"type":"next"
		},
		{
			"fromNodeId":"hCOtX",
			"priority":0,
			"skip":false,
			"toNodeId":"dN8Mc",
			"type":"next"
		},
		{
			"fromNodeId":"dN8Mc",
			"priority":0,
			"skip":false,
			"toNodeId":"_xDINi",
			"type":"next"
		},
		{
			"fromNodeId":"_xDINi",
			"priority":0,
			"skip":false,
			"toNodeId":"_qJk0u",
			"type":"next"
		},
		{
			"fromNodeId":"_qJk0u",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_DLlOc",
			"type":"if"
		},
		{
			"fromNodeId":"n_DLlOc",
			"priority":0,
			"skip":false,
			"toNodeId":"_ouFon",
			"type":"next"
		},
		{
			"fromNodeId":"_ouFon",
			"priority":0,
			"skip":false,
			"toNodeId":"n_7ZvtX",
			"type":"next"
		},
		{
			"fromNodeId":"n_7ZvtX",
			"priority":0,
			"skip":false,
			"toNodeId":"_lLexZ",
			"type":"next"
		},
		{
			"fromNodeId":"_qJk0u",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_lLexZ",
			"type":"next"
		},
		{
			"fromNodeId":"_lLexZ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_J1dKH",
			"type":"if"
		},
		{
			"fromNodeId":"_J1dKH",
			"priority":0,
			"skip":false,
			"toNodeId":"_gUWdT",
			"type":"next"
		},
		{
			"fromNodeId":"_gUWdT",
			"priority":0,
			"skip":false,
			"toNodeId":"_AlzMQ",
			"type":"next"
		},
		{
			"fromNodeId":"_lLexZ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_AlzMQ",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68ac3880d6b3ed5e68cb3ce8",
	"lastModifiedBy":-1,
	"lcName":"llm stream processor",
	"modifiedTime":1759371903769,
	"name":"LLM Stream Processor",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"p6oDY@kQqTJ-1@l",
			"id":"_gqpbo",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"answer":{
							"type":"string",
							"title":"answer"
						},
						"messageState":{
							"type":"string",
							"title":"messageState"
						},
						"partialBuffer":{
							"type":"string",
							"title":"partialBuffer"
						},
						"currentState":{
							"type":"string",
							"title":"currentState"
						},
						"isLastSlash":{
							"type":"boolean",
							"title":"isLastSlash"
						},
						"signature_delta":{
							"type":"string",
							"title":"signature_delta"
						},
						"messageEnd":{
							"type":"boolean",
							"title":"messageEnd"
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"arguments":{
										"type":"string",
										"title":"arguments"
									},
									"toolId":{
										"type":"string",
										"title":"toolId"
									}
								},
								"additionalProperties":false
							},
							"title":"tools"
						},
						"errorMessage":{
							"type":"string",
							"title":"errorMessage"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"required":[],
					"type":"object",
					"properties":{
						"answer":{
							"type":"string",
							"title":"answer"
						},
						"currentState":{
							"type":"string",
							"title":"currentState"
						},
						"messageState":{
							"type":"string",
							"title":"messageState"
						},
						"isLastSlash":{
							"type":"boolean",
							"title":"isLastSlash"
						},
						"items":{
							"type":"array",
							"title":"tools",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"arguments":{
										"type":"string",
										"title":"arguments"
									},
									"toolId":{
										"type":"string",
										"title":"toolId"
									}
								},
								"required":[]
							}
						},
						"aiAgentId":{
							"type":"string",
							"title":"aiAgentId",
							"help":"Id of agent from where the query is asked."
						},
						"item":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false,
								"required":[]
							},
							"title":"item",
							"help":"Array of items at a turn that we receive while streaming."
						},
						"caseId":{
							"type":"string",
							"title":"caseId",
							"help":"Id representing session of the chat."
						},
						"signature_delta":{
							"type":"string",
							"title":"signature_delta"
						},
						"partial_buffer":{
							"type":"string",
							"title":"partial_buffer"
						},
						"errorMessage":{
							"type":"string",
							"title":"errorMessage"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":353,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"p6oDY@kQqTJ-1@l",
			"id":"hCOtX",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"messageState":{
							"type":"string",
							"title":"messageState"
						},
						"partialBuffer":{
							"type":"string",
							"title":"partialBuffer"
						},
						"isLastSlash":{
							"type":"boolean",
							"title":"isLastSlash"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"messageState":"{{ _gqpbo.outputs.messageState }}",
				"partialBuffer":"{{ _gqpbo.outputs.partial_buffer }}",
				"isLastSlash":"{{ _gqpbo.outputs.isLastSlash }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"messageState":{
							"type":"string",
							"title":"messageState"
						},
						"partialBuffer":{
							"type":"string",
							"title":"partialBuffer"
						},
						"isLastSlash":{
							"type":"boolean",
							"title":"isLastSlash"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"streamingVariables",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":77,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"p6oDY@kQqTJ-1@l",
			"id":"dN8Mc",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"name":{
											"type":"string",
											"title":"name"
										},
										"arguments":{
											"type":"string",
											"title":"arguments"
										},
										"toolId":{
											"type":"string",
											"title":"toolId"
										}
									},
									"additionalProperties":false,
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray",
					"items":{
						"name":"{{ _gqpbo.outputs.items[0].name }}",
						"arguments":"{{ _gqpbo.outputs.items[0].arguments }}",
						"toolId":"{{ _gqpbo.outputs.items[0].toolId }}"
					},
					"source":"{{ _gqpbo.outputs.items }}"
				},
				"ua:title":"tools",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"tools",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"arguments":{
										"type":"string",
										"title":"arguments"
									},
									"toolId":{
										"type":"string",
										"title":"toolId"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"tools",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{},
				"visibleOptionalFields":[
					"root.parameters.items.items",
					"root.parameters.tools.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":162,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"p6oDY@kQqTJ-1@l",
			"id":"_xDINi",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"currentAnswer":{
							"type":"string",
							"title":"currentAnswer"
						},
						"partialBuffer":{
							"type":"string",
							"title":"partialBuffer"
						},
						"currentState":{
							"type":"string",
							"title":"currentState"
						},
						"signature_delta":{
							"type":"string",
							"title":"signature_delta"
						},
						"message_end":{
							"type":"boolean",
							"title":"message_end"
						},
						"updatedTools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"toolId":{
										"type":"string",
										"title":"toolId"
									},
									"arguments":{
										"type":"string",
										"title":"arguments"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"updatedTools"
						},
						"errorMessage":{
							"type":"string",
							"title":"errorMessage"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"answer":{
							"type":"string",
							"title":"answer"
						},
						"partialBuffer":{
							"type":"string",
							"title":"partialBuffer"
						},
						"currentState":{
							"type":"string",
							"title":"currentState"
						},
						"items":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"items"
						},
						"signature_delta":{
							"type":"string",
							"title":"signature_delta"
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"tools"
						},
						"errorMessage":{
							"type":"string",
							"title":"errorMessage"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":true,
				"code":"// inputs\nList<Map<String, Object>> items = binding.hasVariable('items') ? (List<Map<String, Object>>) binding.getVariable('items') : Collections.<Map<String,Object>>emptyList()\nList<Map<String, Object>> updatedTools = binding.hasVariable(\"tools\") ? (List<Map<String, Object>>) binding.getVariable(\"tools\") : new ArrayList<>()\nString currentAnswer = binding.hasVariable('answer') ? (String) binding.getVariable('answer') : \"\"\nString partialBuffer = binding.hasVariable('partialBuffer') ? (String) binding.getVariable('partialBuffer') : \"\"\nString currentState = binding.hasVariable(\"currentState\") ? (String) binding.getVariable(\"currentState\") : \"MESSAGE_START\"\nString signature_delta = binding.hasVariable(\"signature_delta\") ? (String) binding.getVariable(\"signature_delta\") : \"\"\nString errorMessage = binding.hasVariable(\"errorMessage\") ? (String) binding.getVariable(\"errorMessage\") : \"\"\n\nboolean message_end = false\n\nfor (Object rawChunk : items) {\n    if (rawChunk instanceof String) {\n        errorMessage = errorMessage + \"\\n\" + rawChunk\n        continue\n    }\n    Map<String, Object> chunk = safeMap(rawChunk)\n\n    // ------------------------ text handling ---------------------------\n\n    String new_text = getNewText(chunk)\n    String reasoning_content = getReasoningContent(chunk)\n\n    // add think at the start for reasoning content\n    if (reasoning_content) {\n        if (currentState == \"MESSAGE_START\") {\n            reasoning_content = \"<think> \" + reasoning_content\n            currentState = \"THINKING\"\n        }\n    } else {\n        reasoning_content = \"\"\n    }\n\n    if (new_text) {\n        if (currentState == \"THINKING\") {\n            new_text = reasoning_content + \"</think>\\n\\n\" + new_text\n        }\n        currentState = \"FINAL_ANSWER\"\n    } else {\n        new_text = reasoning_content\n    }\n\n    if (new_text) {\n        currentAnswer += new_text\n        partialBuffer += new_text\n    }\n\n    Map<String, Object> delta = safeMap(chunk[\"delta\"])\n    // signature_delta\n    if (delta[\"type\"] == \"signature_delta\") {\n        signature_delta += delta[\"signature\"] as String\n    }\n\n    // --------------------- tool handling -------------------------\n\n    if (\"content_block_start\" == chunk[\"type\"]) {\n        Map<String, Object> block = safeMap(chunk[\"content_block\"])\n        if (block.containsKey(\"name\")) {\n            if (currentState == \"THINKING\") {\n                currentAnswer += \"</think>\\n\"\n            }\n            currentState = \"TOOL_CALL\"\n            updatedTools.add([\n                toolId    : block[\"id\"],\n                name      : block[\"name\"],\n                arguments : \"\"\n            ])\n        }\n    }\n\n    if (delta.containsKey(\"partial_json\")) {\n        if (!updatedTools.isEmpty()) {\n            Map<String, Object> lastTool = updatedTools.get(updatedTools.size() - 1)\n            lastTool[\"arguments\"] = (lastTool[\"arguments\"] as String ?: \"\") + (delta[\"partial_json\"] as String)\n        }\n    }\n\n    // ----------------------------- message stop ---------------------------------\n    Map<String, Object> messageStop = safeMap(chunk[\"messageStop\"])\n    if ((messageStop[\"stopReason\"] == \"end_turn\") ||\n            (chunk[\"choices\"] instanceof List && !((List) chunk[\"choices\"]).isEmpty()\n                    && safeMap(((List) chunk[\"choices\"])[((List) chunk[\"choices\"]).size() - 1])[\"stop_reason\"] == \"stop\") ||\n            chunk[\"type\"] == \"message_stop\") {\n        message_end = true\n    }\n}\n\nreturn [\n    currentAnswer   : currentAnswer,\n    partialBuffer   : partialBuffer,\n    currentState    : currentState,\n    message_end     : message_end,\n    signature_delta : signature_delta?:null,\n    updatedTools    : updatedTools,\n    errorMessage    : errorMessage?:null\n]\n\n// ------------------------------ functions --------------------------------------\n\nMap<String, Object> safeMap(Object obj) {\n    return (obj instanceof Map) ? (Map<String, Object>) obj : Collections.emptyMap()\n}\n\nString getNewText(Map<String, Object> chunk){\n    String new_text = chunk[\"generation\"] as String\n    if (!new_text && chunk[\"choices\"] instanceof List) {\n        List<Map<String, Object>> choices = (List<Map<String, Object>>) chunk[\"choices\"]\n        if (!choices.isEmpty()) {\n            Map<String, Object> choice = choices[0]\n            Map<String, Object> msg = safeMap(choice[\"message\"])\n            Map<String, Object> delta = safeMap(choice[\"delta\"])\n            new_text = msg[\"content\"] as String\n            if (!new_text) new_text = delta[\"content\"] as String\n        }\n    }\n\n    if (!new_text) new_text = safeMap(chunk[\"delta\"])[\"text\"] as String\n    if (!new_text) new_text = safeMap(chunk[\"contentBlockDelta\"])[\"delta\"] instanceof Map ? safeMap(safeMap(chunk[\"contentBlockDelta\"])[\"delta\"])[\"text\"] as String : null\n    if (!new_text) new_text = chunk[\"outputText\"] as String\n\n    return new_text?:null\n}\n\nString getReasoningContent(Map<String, Object> chunk){\n    String reasoning_content = null\n    if (chunk[\"choices\"] instanceof List) {\n        List<Map<String, Object>> choices = (List<Map<String, Object>>) chunk[\"choices\"]\n        if (!choices.isEmpty()) {\n            Map<String, Object> choice = choices[0]\n            Map<String, Object> msg = safeMap(choice[\"message\"])\n            Map<String, Object> delta = safeMap(choice[\"delta\"])\n            reasoning_content = msg[\"reasoning_content\"] as String\n            if (!reasoning_content) reasoning_content = delta[\"reasoning_content\"] as String\n        }\n    }\n\n    if (!reasoning_content) reasoning_content = safeMap(chunk[\"delta\"])[\"thinking\"] as String\n    if (!reasoning_content) reasoning_content = safeMap(chunk[\"content_block\"])[\"thinking\"] as String\n\n    return reasoning_content?:null\n}",
				"parameters":{
					"items":{
						"ua:type":"mappedArray",
						"source":"{{ _gqpbo.outputs.item  }}",
						"items":"{{ _gqpbo.outputs.item[0]  }}"
					},
					"tools":{
						"source":"{{ dN8Mc.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ dN8Mc.outputs.items[0] }}"
					},
					"partialBuffer":"{{ hCOtX.outputs.partialBuffer }}",
					"answer":"{{ _gqpbo.outputs.answer }}",
					"currentState":"{{ _gqpbo.outputs.currentState }}",
					"signature_delta":"{{ _gqpbo.outputs.signature_delta }}",
					"errorMessage":"{{ _gqpbo.outputs.errorMessage }}"
				}
			},
			"skip":false,
			"subTitle":"process items",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":75,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"p6oDY@kQqTJ-1@l",
			"id":"_qJk0u",
			"index":5,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ _xDINi.outputs.result.updatedTools }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"tools Present ?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":450,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_qJk0u@p6oDY@kQqTJ-1@l@y",
			"id":"n_DLlOc",
			"index":6,
			"inputs":{
				"listName":"{{ dN8Mc.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"tools",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.name",
					"root.itemsToAdd.items.arguments",
					"root.itemsToAdd.items.toolId"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":75,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_qJk0u@p6oDY@kQqTJ-1@l@y",
			"id":"_ouFon",
			"index":7,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"items":{
						"name":"{{ _xDINi.outputs.result.updatedTools[0].name }}",
						"arguments":"{{ _xDINi.outputs.result.updatedTools[0].arguments }}",
						"toolId":"{{ _xDINi.outputs.result.updatedTools[0].toolId }}"
					},
					"source":"{{ _xDINi.outputs.result.updatedTools }}"
				},
				"listName":"{{ dN8Mc.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"tools",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_qJk0u@p6oDY@kQqTJ-1@l@y",
			"id":"n_7ZvtX",
			"index":8,
			"inputs":{
				"result":{
					"messageEnd":false,
					"answer":"{{ _xDINi.outputs.result.currentAnswer }}",
					"currentState":"{{ _xDINi.outputs.result.currentState }}",
					"signature_delta":"{{ _xDINi.outputs.result.signature_delta }}",
					"tools":{
						"source":"{{ dN8Mc.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"name":"{{ dN8Mc.outputs.items[0].name }}",
							"arguments":"{{ dN8Mc.outputs.items[0].arguments }}",
							"toolId":"{{ dN8Mc.outputs.items[0].toolId }}"
						}
					},
					"messageState":"{{ hCOtX.outputs.messageState }}",
					"partialBuffer":"{{ hCOtX.outputs.partialBuffer }}",
					"isLastSlash":"{{ hCOtX.outputs.isLastSlash }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":159,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"p6oDY@kQqTJ-1@l",
			"id":"_lLexZ",
			"index":9,
			"inputs":{
				"filters":[
					{
						"property":"{{ _gqpbo.outputs.messageState  }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"TOOL_CALL"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"msg_state!=TOOL_CALL",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lLexZ@p6oDY@kQqTJ-1@l@y",
			"id":"_J1dKH",
			"index":10,
			"inputs":{
				"automationId":"67e70e734827981dba0472c0",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"messageState":"{{ _gqpbo.outputs.messageState  }}",
					"sessionId":"{{ _gqpbo.outputs.sessionId  }}",
					"currentBuffer":"{{ _xDINi.outputs.result.partialBuffer }}",
					"isLastSlash":"{{ _gqpbo.outputs.isLastSlash  }}",
					"aiAgentId":"{{ _gqpbo.outputs.aiAgentId  }}"
				}
			},
			"skip":false,
			"subTitle":"JSON Parse and Stream Content | AI Agent",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":162,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lLexZ@p6oDY@kQqTJ-1@l@y",
			"id":"_gUWdT",
			"index":11,
			"inputs":{
				"variables":[
					{
						"source":"{{ hCOtX.outputs.partialBuffer }}",
						"value":"{{ _J1dKH.outputs.partialBuffer }}"
					},
					{
						"source":"{{ hCOtX.outputs.messageState }}",
						"value":"{{ _J1dKH.outputs.updatedMessageState }}"
					},
					{
						"source":"{{ hCOtX.outputs.isLastSlash }}",
						"value":"{{ _J1dKH.outputs.isLastSlashModified }}"
					}
				]
			},
			"skip":false,
			"subTitle":"partial buffer",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"p6oDY@kQqTJ-1@l",
			"id":"_AlzMQ",
			"index":12,
			"inputs":{
				"result":{
					"answer":"{{ _xDINi.outputs.result.currentAnswer }}",
					"currentState":"{{ _xDINi.outputs.result.currentState }}",
					"signature_delta":"{{ _xDINi.outputs.result.signature_delta }}",
					"tools":{
						"source":"{{ dN8Mc.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"name":"{{ dN8Mc.outputs.items[0].name }}",
							"arguments":"{{ dN8Mc.outputs.items[0].arguments }}",
							"toolId":"{{ dN8Mc.outputs.items[0].toolId }}"
						}
					},
					"messageState":"{{ hCOtX.outputs.messageState }}",
					"partialBuffer":"{{ hCOtX.outputs.partialBuffer }}",
					"isLastSlash":"{{ hCOtX.outputs.isLastSlash }}",
					"messageEnd":"{{ _xDINi.outputs.result.message_end }}",
					"errorMessage":"{{ _xDINi.outputs.result.errorMessage }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":45768,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":56
}