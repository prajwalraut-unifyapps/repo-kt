{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1738062233486,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243664243,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed9023e6682b9a51edd2",
		"status":"DEPLOYED",
		"version":77,
		"workflowVersion":104
	},
	"edges":[
		{
			"fromNodeId":"PPF3R",
			"priority":0,
			"skip":false,
			"toNodeId":"locRU",
			"type":"next"
		},
		{
			"fromNodeId":"locRU",
			"priority":0,
			"skip":false,
			"toNodeId":"bO6OR",
			"type":"next"
		},
		{
			"fromNodeId":"bO6OR",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"zx1QI",
			"type":"if"
		},
		{
			"fromNodeId":"zx1QI",
			"priority":0,
			"skip":false,
			"toNodeId":"OWCLS",
			"type":"next"
		},
		{
			"fromNodeId":"OWCLS",
			"priority":0,
			"skip":false,
			"toNodeId":"KrMQT",
			"type":"next"
		},
		{
			"fromNodeId":"bO6OR",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"KrMQT",
			"type":"next"
		},
		{
			"fromNodeId":"KrMQT",
			"priority":0,
			"skip":false,
			"toNodeId":"pe1Mu",
			"type":"next"
		},
		{
			"fromNodeId":"pe1Mu",
			"priority":0,
			"skip":false,
			"toNodeId":"_edCXr",
			"type":"next"
		},
		{
			"fromNodeId":"_edCXr",
			"priority":0,
			"skip":false,
			"toNodeId":"MLflq",
			"type":"next"
		},
		{
			"fromNodeId":"MLflq",
			"priority":0,
			"skip":false,
			"toNodeId":"6uxFX",
			"type":"next"
		},
		{
			"fromNodeId":"6uxFX",
			"priority":0,
			"skip":false,
			"toNodeId":"UkaLa",
			"type":"next"
		},
		{
			"fromNodeId":"UkaLa",
			"priority":0,
			"skip":false,
			"toNodeId":"1Fp3U",
			"type":"next"
		},
		{
			"fromNodeId":"1Fp3U",
			"priority":0,
			"skip":false,
			"toNodeId":"RjB1U",
			"type":"next"
		},
		{
			"fromNodeId":"RjB1U",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"OValh",
			"type":"if"
		},
		{
			"fromNodeId":"OValh",
			"priority":0,
			"skip":false,
			"toNodeId":"kgcmN",
			"type":"next"
		},
		{
			"fromNodeId":"xjLwT",
			"priority":0,
			"skip":false,
			"toNodeId":"kgcmN",
			"type":"next"
		},
		{
			"fromNodeId":"lEf1N",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"kgcmN",
			"type":"next"
		},
		{
			"fromNodeId":"n_KfFB4",
			"priority":0,
			"skip":false,
			"toNodeId":"kgcmN",
			"type":"next"
		},
		{
			"fromNodeId":"GAKwj",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"kgcmN",
			"type":"next"
		},
		{
			"fromNodeId":"RjB1U",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"kgcmN",
			"type":"next"
		},
		{
			"fromNodeId":"kgcmN",
			"priority":0,
			"skip":false,
			"toNodeId":"_jnRdQ",
			"type":"loop"
		},
		{
			"fromNodeId":"_jnRdQ",
			"priority":0,
			"skip":false,
			"toNodeId":"E7OwA",
			"type":"next"
		},
		{
			"fromNodeId":"E7OwA",
			"priority":0,
			"skip":false,
			"toNodeId":"3A1nC",
			"type":"next"
		},
		{
			"fromNodeId":"3A1nC",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1iUrG",
			"type":"if"
		},
		{
			"fromNodeId":"n_1iUrG",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_FmGbE",
			"type":"next"
		},
		{
			"fromNodeId":"n_1iUrG",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"UMfmT",
			"type":"if"
		},
		{
			"fromNodeId":"n_FmGbE",
			"priority":0,
			"skip":false,
			"toNodeId":"UMfmT",
			"type":"next"
		},
		{
			"fromNodeId":"UMfmT",
			"priority":0,
			"skip":false,
			"toNodeId":"_lPykW",
			"type":"next"
		},
		{
			"fromNodeId":"_lPykW",
			"priority":0,
			"skip":false,
			"toNodeId":"n_08NQf",
			"type":"next"
		},
		{
			"fromNodeId":"n_08NQf",
			"priority":0,
			"skip":false,
			"toNodeId":"8wBWX",
			"type":"next"
		},
		{
			"fromNodeId":"8wBWX",
			"priority":0,
			"skip":false,
			"toNodeId":"7jEcB",
			"type":"loop"
		},
		{
			"fromNodeId":"7jEcB",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"7jEcB@1",
			"type":"branch"
		},
		{
			"fromNodeId":"7jEcB@1",
			"priority":0,
			"skip":false,
			"toNodeId":"_WMmOD",
			"type":"next"
		},
		{
			"fromNodeId":"7jEcB",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"7jEcB@2",
			"type":"branch"
		},
		{
			"fromNodeId":"7jEcB@2",
			"priority":0,
			"skip":false,
			"toNodeId":"DG1RY",
			"type":"next"
		},
		{
			"fromNodeId":"7jEcB",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"7jEcB@3",
			"type":"branch"
		},
		{
			"fromNodeId":"7jEcB@3",
			"priority":0,
			"skip":false,
			"toNodeId":"IUwLu",
			"type":"next"
		},
		{
			"fromNodeId":"7jEcB",
			"name":"4",
			"priority":0,
			"skip":false,
			"toNodeId":"7jEcB@4",
			"type":"branch"
		},
		{
			"fromNodeId":"7jEcB@4",
			"priority":0,
			"skip":false,
			"toNodeId":"wd839",
			"type":"next"
		},
		{
			"fromNodeId":"7jEcB",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zTX2C",
			"type":"branch"
		},
		{
			"fromNodeId":"_WMmOD",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"8wBWX",
			"type":"next"
		},
		{
			"fromNodeId":"DG1RY",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"8wBWX",
			"type":"next"
		},
		{
			"fromNodeId":"IUwLu",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"8wBWX",
			"type":"next"
		},
		{
			"fromNodeId":"wd839",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"8wBWX",
			"type":"next"
		},
		{
			"fromNodeId":"n_zTX2C",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"8wBWX",
			"type":"next"
		},
		{
			"fromNodeId":"8wBWX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Z3tMw",
			"type":"next"
		},
		{
			"fromNodeId":"n_Z3tMw",
			"priority":0,
			"skip":false,
			"toNodeId":"0Cbyc",
			"type":"next"
		},
		{
			"fromNodeId":"0Cbyc",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"Sh4mp",
			"type":"if"
		},
		{
			"fromNodeId":"Sh4mp",
			"priority":0,
			"skip":false,
			"toNodeId":"lEf1N",
			"type":"next"
		},
		{
			"fromNodeId":"0Cbyc",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"lEf1N",
			"type":"next"
		},
		{
			"fromNodeId":"lEf1N",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"xjLwT",
			"type":"if"
		},
		{
			"fromNodeId":"3A1nC",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_gFnr2",
			"type":"next"
		},
		{
			"fromNodeId":"n_gFnr2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lJJJt",
			"type":"next"
		},
		{
			"fromNodeId":"n_lJJJt",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_c1XL9",
			"type":"if"
		},
		{
			"fromNodeId":"n_c1XL9",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ecTJc",
			"type":"next"
		},
		{
			"fromNodeId":"n_ecTJc",
			"priority":0,
			"skip":false,
			"toNodeId":"zFyPX",
			"type":"next"
		},
		{
			"fromNodeId":"n_lJJJt",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"zFyPX",
			"type":"next"
		},
		{
			"fromNodeId":"zFyPX",
			"priority":0,
			"skip":false,
			"toNodeId":"IKgYH",
			"type":"next"
		},
		{
			"fromNodeId":"IKgYH",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_s0LcK",
			"type":"if"
		},
		{
			"fromNodeId":"n_s0LcK",
			"priority":0,
			"skip":false,
			"toNodeId":"GAKwj",
			"type":"next"
		},
		{
			"fromNodeId":"IKgYH",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"GAKwj",
			"type":"next"
		},
		{
			"fromNodeId":"GAKwj",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_KfFB4",
			"type":"if"
		},
		{
			"fromNodeId":"kgcmN",
			"priority":0,
			"skip":false,
			"toNodeId":"DMb2V",
			"type":"next"
		},
		{
			"fromNodeId":"DMb2V",
			"priority":0,
			"skip":false,
			"toNodeId":"n_jTzvF",
			"type":"next"
		},
		{
			"fromNodeId":"n_jTzvF",
			"priority":0,
			"skip":false,
			"toNodeId":"78rsa",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"679629c41a248f0b3415c3b1",
	"lastModifiedBy":-1,
	"lcName":"user/assistant prompt builder",
	"modifiedTime":1759371981445,
	"name":"User/Assistant Prompt Builder",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":11,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"PPF3R",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"required":[]
										},
										"title":"content"
									},
									"timestamp":{
										"type":"string",
										"title":"timestamp"
									}
								},
								"additionalProperties":false
							},
							"title":"messages"
						}
					},
					"additionalProperties":false,
					"dynamic":true
				},
				"setup":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						},
						"modelId":{
							"type":"string",
							"title":"modelId"
						}
					},
					"additionalProperties":false,
					"required":[
						"caseId",
						"aiAgentId"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":180,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"locRU",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						},
						"lastFanMessageInPrompt":{
							"type":"string",
							"title":"Last Fan Message In Prompt"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"aiAgentId":"{{ PPF3R.outputs.aiAgentId }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						},
						"lastFanMessageInPrompt":{
							"type":"string",
							"title":"Last Fan Message In Prompt"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":176,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"bO6OR",
			"index":3,
			"inputs":{
				"filters":[
					{
						"property":"{{ locRU.outputs.aiAgentId }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":179,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"bO6OR@VnH37-1@y",
			"id":"zx1QI",
			"index":4,
			"inputs":{
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"id":"{{ PPF3R.outputs.caseId }}",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":179,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"bO6OR@VnH37-1@y",
			"id":"OWCLS",
			"index":5,
			"inputs":{
				"variables":[
					{
						"source":"{{ locRU.outputs.aiAgentId }}",
						"value":"{{ zx1QI.outputs.properties.currentAIAgentId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"KrMQT",
			"index":6,
			"inputs":{
				"automationId":"67e2d58d94875751e6bc1066",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"modelId":"{{ PPF3R.outputs.modelId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":7,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"pe1Mu",
			"index":7,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"role":{
											"type":"string",
											"title":"role"
										},
										"content":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{},
												"additionalProperties":false,
												"required":[]
											},
											"title":"content"
										},
										"timestamp":{
											"type":"string",
											"title":"Timestamp"
										},
										"channelCreatedTime":{
											"type":"integer",
											"title":"Channel Created Time"
										}
									},
									"additionalProperties":false,
									"required":[
										"content"
									]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"messages",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"messages",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"required":[]
										},
										"title":"content"
									},
									"timestamp":{
										"type":"string",
										"title":"Timestamp"
									},
									"channelCreatedTime":{
										"type":"integer",
										"title":"Channel Created Time"
									}
								},
								"required":[
									"content"
								]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"messages",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":1,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"_edCXr",
			"index":8,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"filter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Filter"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"currentAIAgentId"
					],
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"currentAIAgentId":{
							"type":"string",
							"title":"Current AI Agent Id"
						}
					}
				},
				"code":"def childFilters = []\ndef caseFilter = [\n        field: 'properties.caseId',\n        op: 'IN',\n        values: [caseId]\n    ] \nchildFilters.add(caseFilter) \n\nif(binding.hasVariable('currentAIAgentId')) {\ndef agentFilter = [\n    op: 'OR',\n    values : [\n        [\n            field: 'properties.additional.temporaryMessage',\n            op: 'NOT_EQUAL',\n            values: [true]\n        ],\n        [\n            op: 'AND',\n            values:[\n                [\n                    field: 'properties.additional.temporaryMessage',\n                    op: 'EQUAL',\n                    values: [true]\n                ],\n                [\n                    field: 'properties.fromCustomerUserId',\n                    op: 'EQUAL',\n                    values: [currentAIAgentId]\n                ]\n            ]\n        ]\n    ]\n]\nchildFilters.add(agentFilter)\n}\n\n\ndef toReturn= [:]\n\ntoReturn << [\"filter\":[\n        op: 'AND',\n        values : childFilters\n    ]]\n\nreturn toReturn\n\n\n// internal messageType != thought || internal messageType == thought & ",
				"compile_static":false,
				"isAsync":false,
				"captureStdOutput":false,
				"parameters":{
					"caseId":"{{ PPF3R.outputs.caseId }}",
					"currentAIAgentId":"{{ PPF3R.outputs.aiAgentId }}"
				}
			},
			"skip":false,
			"subTitle":"prepare filter",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1817,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"MLflq",
			"index":9,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"resolvedFilter":{
								"filter":"{{ _edCXr.outputs.result.filter }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"DESC"
					}
				],
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":2000,
					"offset":0
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Messages",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"6uxFX",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"sortedMessages"
					],
					"properties":{
						"sortedMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"properties":{
										"type":"object",
										"properties":{
											"hasAttachments":{
												"type":"boolean",
												"title":"Has Attachments"
											},
											"messageId":{
												"type":"string",
												"title":"Message Id"
											},
											"additional":{
												"type":"object",
												"properties":{
													"parallelToolCallEnabled":{
														"type":"boolean",
														"title":"Parallel Tool Call Enabled"
													}
												},
												"additionalProperties":false,
												"title":"Additional",
												"required":[]
											},
											"channelCreatedTime":{
												"type":"integer",
												"title":"Channel Created Time"
											}
										},
										"additionalProperties":false,
										"title":"Properties",
										"required":[
											"messageId"
										]
									},
									"createdTime":{
										"type":"string",
										"title":"Created Time"
									},
									"id":{
										"type":"string",
										"title":"Id"
									}
								},
								"additionalProperties":false,
								"required":[
									"properties",
									"createdTime"
								]
							},
							"title":"Sorted Messages"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"messages"
					],
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Messages"
						}
					}
				},
				"code":"if(!binding.hasVariable('messages')) {\n  return [\"sortedMessages\": []]\n}\nreturn [\"sortedMessages\": messages.sort{it.createdTime}]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"messages":{
						"source":"{{ MLflq.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ MLflq.outputs.objects[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"sort ",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":371,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"VnH37-1",
			"id":"UkaLa",
			"index":11,
			"inputs":{
				"automationId":"682c6f948d04422e007feda1",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":131,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"1Fp3U",
			"index":12,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"contentBlock":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Content Block"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"timezone"
					],
					"properties":{
						"context":{
							"type":"string",
							"title":"Context"
						},
						"timezone":{
							"type":"string",
							"title":"Timezone"
						}
					}
				},
				"code":"import java.text.SimpleDateFormat\nimport java.util.Date\nimport java.util.TimeZone\n\ndef context = binding.hasVariable(\"context\") ? binding.getVariable(\"context\") : \"\"\ndef readableTime = getReadableTime()\n\nreturn [\"contentBlock\": [\n  \"type\" : \"text\",\n  \"text\" : \"This is a hidden message not visible to user, containing the additional details to keep in mind: \" + context + \" The current date and time is \" + readableTime + \". Please consider this timestamp while generating responses to ensure accuracy and relevance to the present moment.\"\n]]\n\nString getReadableTime() {\n  // Get timezone from environment variable, default to UTC if not set\n  String timezoneId = \"UTC\"\n  if(binding.hasVariable(\"timezone\"))\n  timezoneId =  binding.getVariable(\"timezone\")\n  \n  try {\n    // Get the current timestamp in milliseconds\n    long currentTimestamp = System.currentTimeMillis()\n    \n    // Convert timestamp to Date\n    Date date = new Date(currentTimestamp)\n    \n    // Create timezone object\n    TimeZone timezone = TimeZone.getTimeZone(timezoneId)\n    \n    // Format date into a more descriptive format\n    SimpleDateFormat sdf = new SimpleDateFormat(\"d'st' 'of' MMMM, 'Year' yyyy. EEEE. 'Time:' HH:mm:ss z\")\n    sdf.setTimeZone(timezone)\n    \n    // Create a custom suffix for the day\n    String day = new SimpleDateFormat(\"d\").format(date)\n    String suffix = getDaySuffix(Integer.parseInt(day))\n    \n    // Apply the custom suffix and include timezone info\n    String formattedTime = sdf.format(date).replace(\"st\", suffix)\n    \n    return formattedTime + \" (Timezone: \" + timezoneId + \")\"\n    \n  } catch (Exception e) {\n    // Fallback to UTC if there's any error with the timezone\n    String utcTime = getReadableTimeUTC()\n    return utcTime + \" (Fallback to UTC due to invalid timezone: \" + timezoneId + \")\"\n  }\n}\n\nString getDaySuffix(int day) {\n  if (day >= 11 && day <= 13) {\n    return \"th\"\n  }\n  switch (day % 10) {\n    case 1: return \"st\"\n    case 2: return \"nd\"\n    case 3: return \"rd\"\n    default: return \"th\"\n  }\n}\n\nString getReadableTimeUTC() {\n  long currentTimestamp = System.currentTimeMillis()\n  Date date = new Date(currentTimestamp)\n  \n  SimpleDateFormat sdf = new SimpleDateFormat(\"d'st' 'of' MMMM, 'Year' yyyy. EEEE. 'Time:' HH:mm:ss z\")\n  sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"))\n  \n  String day = new SimpleDateFormat(\"d\").format(date)\n  String suffix = getDaySuffix(Integer.parseInt(day))\n  \n  return sdf.format(date).replace(\"st\", suffix)\n}",
				"compile_static":true,
				"captureStdOutput":false,
				"parameters":{
					"context":"{{ UkaLa.outputs.context }}",
					"timezone":"{{ __ENV__.outputs.TIMEZONE_ID }}"
				}
			},
			"skip":false,
			"subTitle":"Add time details in user context",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":0,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"RjB1U",
			"index":13,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ 1Fp3U.outputs.result.contentBlock.text }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.role",
					"root.itemsToAdd.items.timestamp",
					"root.itemsToAdd.items.channelCreatedTime"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"RjB1U@VnH37-1@y",
			"id":"OValh",
			"index":14,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"items":{
						"role":"user",
						"timestamp":"0",
						"content":{
							"items":"{{ 1Fp3U.outputs.result.contentBlock }}",
							"ua:type":"mappedArray"
						},
						"channelCreatedTime":0
					}
				},
				"listName":"{{ pe1Mu.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":7,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"kgcmN",
			"index":15,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ 6uxFX.outputs.result.sortedMessages }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":458,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kgcmN@VnH37-1@l",
			"id":"_jnRdQ",
			"index":16,
			"inputs":{
				"automationId":"66e598f208d0f101e7cd4734",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"messageId":"{{ kgcmN.outputs.item.properties.messageId }}",
					"base64":false,
					"hasAttachments":"{{ kgcmN.outputs.item.properties.hasAttachments }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.inputModality.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":7,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kgcmN@VnH37-1@l",
			"id":"E7OwA",
			"index":17,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"messageContent":{
							"type":"string",
							"title":"messageContent"
						},
						"attachmentsList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"fileType":{
										"type":"string",
										"title":"fileType"
									},
									"fileDetailsSource":{
										"type":"string",
										"title":"fileDetailsSource"
									},
									"fileDetailsSourceType":{
										"type":"string",
										"title":"fileDetailsSourceType"
									},
									"size":{
										"type":"string",
										"title":"Size"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"attachmentsList"
						},
						"fileList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"mimeType":{
										"type":"string",
										"title":"Mime Type"
									},
									"fileObj":{
										"type":"object",
										"properties":{
											"fileType":{
												"type":"string",
												"title":"fileType"
											},
											"sourceType":{
												"type":"string",
												"title":"sourceType"
											},
											"name":{
												"type":"string",
												"title":"name"
											},
											"source":{
												"type":"string",
												"title":"source"
											},
											"size":{
												"type":"string",
												"title":"Size"
											}
										},
										"additionalProperties":false,
										"required":[]
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"File List"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"message",
						"attachments"
					],
					"properties":{
						"message":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Message"
						},
						"attachments":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Attachments"
						},
						"inputModality":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Input Modality"
						}
					}
				},
				"code":"def toReturn = [:]\ndef fileList = []\ndef inputModalities = []\n\nif (binding.hasVariable(\"inputModality\")) {\n    def im = binding.getVariable(\"inputModality\")\n    // Ensure inputModalities is a list\n    inputModalities = im instanceof List ? im : [im]\n}\n\ndef addToFileList = { attachment, modalities ->\n    def mimeType = attachment?.mimeType?.toLowerCase()\n    try {\n        if (attachment?.fileDetails?.size?.toInteger() > 4000000) return false\n    } catch (Exception e) {\n        return false\n    }\n    if (!mimeType) return false\n    for (modality in modalities) {\n        if (mimeType.contains(modality?.toLowerCase())) {\n            return true\n        }\n    }\n    return false\n}\n\ndef msg = message?.additional?.rephrasedUserMessage\ntoReturn['messageContent'] = msg ?: message?.content?.text\n\nif (binding.hasVariable('attachments')) {\n    def attachments = binding.getVariable('attachments')\n    def attachmentsList = []\n\n    def hasImages = false\n    for (attachment in attachments) {\n        if (attachment?.images) {\n            for (imageItem in attachment.images) {\n                def imageFileObj = imageItem?.file ?: imageItem?.fileObj\n                if (imageFileObj && imageItem?.mimeType) {\n                    if (addToFileList(imageItem, inputModalities)){\n                        hasImages = true\n                        fileList.add([\n                            \"mimeType\": imageItem.mimeType,\n                            \"fileObj\": [\n                                \"name\": imageFileObj.name,\n                                \"fileType\": imageFileObj.type,\n                                \"source\": imageFileObj.source,\n                                \"sourceType\": imageFileObj.sourceType,\n                                \"size\": null\n                            ]\n                        ])\n                    }\n                }\n            }\n        }\n        \n        def attMap = [\n            \"name\": attachment?.name,\n            \"fileType\": attachment?.fileType,\n            \"fileDetailsSource\": attachment?.fileDetails?.source,\n            \"fileDetailsSourceType\": attachment?.fileDetails?.sourceType,\n            \"size\": attachment?.fileDetails?.size\n        ]\n        \n        if (!hasImages && addToFileList(attachment, inputModalities)) {\n            fileList.add([\n                \"mimeType\": attachment?.mimeType,\n                \"fileObj\": [\n                    \"name\": attachment?.name,\n                    \"fileType\": attachment?.fileType,\n                    \"source\": attachment?.fileDetails?.source,\n                    \"sourceType\": attachment?.fileDetails?.sourceType,\n                    \"size\": attachment?.fileDetails?.size\n                ]\n            ])\n        }\n        attachmentsList.add(attMap)\n    }\n    \n    toReturn['attachmentsList'] = attachmentsList\n}\n\ntoReturn['fileList'] = fileList\nreturn toReturn",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"message":"{{ kgcmN.outputs.item.properties }}",
					"attachments":{
						"ua:type":"mappedArray",
						"source":"{{ _jnRdQ.outputs.attachments }}",
						"items":"{{ _jnRdQ.outputs.attachments[0] }}"
					},
					"inputModality":{
						"source":"{{ KrMQT.outputs.inputModality }}",
						"ua:type":"mappedArray",
						"items":"{{ KrMQT.outputs.inputModality[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"user prompt Inputs",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":7,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kgcmN@VnH37-1@l",
			"id":"3A1nC",
			"index":18,
			"inputs":{
				"filters":[
					{
						"property":"=MAPGET({{ kgcmN.outputs.item.properties }},\"type\")",
						"filter":{
							"operator":"EQUAL",
							"value":"fan"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"fan Message ?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"n_1iUrG",
			"index":19,
			"inputs":{
				"filters":[
					{
						"property":"{{ kgcmN.outputs.item.properties.additional.internalMessageType }}",
						"filter":{
							"operator":"EQUAL",
							"value":"AGENT_INTERNAL_RESPONSE"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Internal message?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":447,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_1iUrG@3A1nC@kgcmN@VnH37-1@l@y@n",
			"id":"n_FmGbE",
			"index":20,
			"inputs":{
				"variables":[
					{
						"source":"{{ locRU.outputs.lastFanMessageInPrompt }}",
						"value":"{{ kgcmN.outputs.item.id }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Last fan message",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":73,
				"resourceName":"utility_by_unifyapps_from_html_to_plain_text",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"UMfmT",
			"index":21,
			"inputs":{
				"conversionType":"plainText",
				"htmlString":"{{ E7OwA.outputs.result.messageContent }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Convert HTML to text",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"_lPykW",
			"index":22,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":"object",
									"properties":{
										"source":{
											"type":"object",
											"properties":{
												"media_type":{
													"type":"string",
													"title":"media_type"
												},
												"image_data":{
													"type":"string",
													"title":"Image Data"
												},
												"image_type":{
													"type":"string",
													"title":"Image Type"
												}
											},
											"additionalProperties":false,
											"title":"source",
											"required":[]
										},
										"text":{
											"type":"string",
											"title":"text"
										},
										"type":{
											"type":"string",
											"title":"type"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"content",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"content",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"source":{
										"type":"object",
										"properties":{
											"media_type":{
												"type":"string",
												"title":"media_type"
											},
											"image_data":{
												"type":"string",
												"title":"Image Data"
											},
											"image_type":{
												"type":"string",
												"title":"Image Type"
											}
										},
										"additionalProperties":false,
										"title":"source",
										"required":[]
									},
									"text":{
										"type":"string",
										"title":"text"
									},
									"type":{
										"type":"string",
										"title":"type"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.attachmentsList.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":87,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"n_08NQf",
			"index":23,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"output"
					],
					"properties":{
						"output":{
							"type":"string",
							"title":"Output"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"messageContent":{
							"type":"string",
							"title":"Message Content"
						},
						"attachmentsList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Attachments List"
						}
					}
				},
				"code":"def output = new StringBuilder()\n\nif (binding.hasVariable('messageContent')) {\n    output.append(binding.getVariable('messageContent')).append(\"\\n\")\n}\n\nif (binding.hasVariable('attachmentsList') && binding.getVariable('attachmentsList') != null) {\n    def attachments = binding.getVariable('attachmentsList')\n    output.append(\"Here are the list of Files Uploaded along with this Message :\\n\")\n    attachments.each { attachment ->\n        output.append(\"FileName: \")\n               .append(attachment.name)\n               .append(\" , FileType: \")\n               .append(attachment.fileType)\n               .append(\" , FileDetailsSource: \")\n               .append(attachment.fileDetailsSource)\n               .append(\" , FileDetailsSourceType: \")\n               .append(attachment.fileDetailsSourceType)\n               .append(\" , size: \")\n               .append(attachment.size)\n               .append(\"\\n\")\n    }\n}\n\nreturn ['output': output.toString()]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"messageContent":"{{ UMfmT.outputs.convertedText }}",
					"attachmentsList":{
						"source":"{{ E7OwA.outputs.result.attachmentsList }}",
						"ua:type":"mappedArray",
						"items":"{{ E7OwA.outputs.result.attachmentsList[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":351,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"8wBWX",
			"index":24,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ E7OwA.outputs.result.fileList }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l",
			"id":"7jEcB",
			"index":25,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"PDF",
							"conditions":{
								"filters":[
									{
										"property":"{{ 8wBWX.outputs.item.mimeType }}",
										"filter":{
											"operator":"CONTAINS",
											"value":"pdf"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"Image",
							"conditions":{
								"filters":[
									{
										"property":"{{ 8wBWX.outputs.item.mimeType }}",
										"filter":{
											"operator":"CONTAINS",
											"value":"image"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"audio",
							"conditions":{
								"filters":[
									{
										"property":"{{ 8wBWX.outputs.item.mimeType }}",
										"filter":{
											"operator":"CONTAINS",
											"value":"audio"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"4",
						"inputs":{
							"name":"video",
							"conditions":{
								"filters":[
									{
										"property":"{{ 8wBWX.outputs.item.mimeType }}",
										"filter":{
											"operator":"CONTAINS",
											"value":"video"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@1",
			"id":"7jEcB@1",
			"index":26,
			"inputs":{
				"name":"PDF",
				"conditions":{
					"filters":[
						{
							"property":"{{ 8wBWX.outputs.item.mimeType }}",
							"filter":{
								"operator":"CONTAINS",
								"value":"pdf"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.source.media_type",
					"root.itemToAdd.source.image_data",
					"root.itemToAdd.source.image_type"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":349,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@1",
			"id":"_WMmOD",
			"index":27,
			"inputs":{
				"itemToAdd":{
					"source":{
						"image_type":"file_object",
						"media_type":"{{ 8wBWX.outputs.item.mimeType }}",
						"image_data":"{{ 8wBWX.outputs.item.fileObj }}"
					},
					"type":"pdf"
				},
				"insertLocation":"END",
				"listName":"{{ _lPykW.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@2",
			"id":"7jEcB@2",
			"index":28,
			"inputs":{
				"name":"Image",
				"conditions":{
					"filters":[
						{
							"property":"{{ 8wBWX.outputs.item.mimeType }}",
							"filter":{
								"operator":"CONTAINS",
								"value":"image"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.source.media_type",
					"root.itemToAdd.source.image_data",
					"root.itemToAdd.source.image_type"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":349,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@2",
			"id":"DG1RY",
			"index":29,
			"inputs":{
				"itemToAdd":{
					"type":"image",
					"source":{
						"image_type":"file_object",
						"media_type":"{{ 8wBWX.outputs.item.mimeType }}",
						"image_data":"{{ 8wBWX.outputs.item.fileObj }}"
					}
				},
				"insertLocation":"END",
				"listName":"{{ _lPykW.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@3",
			"id":"7jEcB@3",
			"index":30,
			"inputs":{
				"name":"audio",
				"conditions":{
					"filters":[
						{
							"property":"{{ 8wBWX.outputs.item.mimeType }}",
							"filter":{
								"operator":"CONTAINS",
								"value":"audio"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.source.media_type",
					"root.itemToAdd.source.image_data",
					"root.itemToAdd.source.image_type"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":349,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@3",
			"id":"IUwLu",
			"index":31,
			"inputs":{
				"itemToAdd":{
					"type":"audio",
					"source":{
						"image_type":"file_object",
						"media_type":"{{ 8wBWX.outputs.item.mimeType }}",
						"image_data":"{{ 8wBWX.outputs.item.fileObj }}"
					}
				},
				"insertLocation":"END",
				"listName":"{{ _lPykW.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@4",
			"id":"7jEcB@4",
			"index":32,
			"inputs":{
				"name":"video",
				"conditions":{
					"filters":[
						{
							"property":"{{ 8wBWX.outputs.item.mimeType }}",
							"filter":{
								"operator":"CONTAINS",
								"value":"video"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.source.media_type",
					"root.itemToAdd.source.image_data",
					"root.itemToAdd.source.image_type"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":349,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@4",
			"id":"wd839",
			"index":33,
			"inputs":{
				"itemToAdd":{
					"type":"video",
					"source":{
						"image_type":"file_object",
						"media_type":"{{ 8wBWX.outputs.item.mimeType }}",
						"image_data":"{{ 8wBWX.outputs.item.fileObj }}"
					}
				},
				"insertLocation":"END",
				"listName":"{{ _lPykW.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":457,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7jEcB@8wBWX@3A1nC@kgcmN@VnH37-1@l@y@l@default",
			"id":"n_zTX2C",
			"index":34,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"temp":{
							"type":"string",
							"title":"Temp"
						}
					},
					"required":[
						"temp"
					]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"temp":{
							"type":"string",
							"title":"Temp"
						}
					},
					"required":[
						"temp"
					]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":41,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"n_Z3tMw",
			"index":35,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"isValid":{
							"type":"boolean",
							"title":"Is Valid"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"output":{
							"type":"string",
							"title":"Output"
						}
					}
				},
				"code":"def isValid=false\n\nif(binding.hasVariable('output') && output != null && output.toString().trim())\n{\n  isValid=true\n}\nelse{\n  isValid=false\n}\n\nreturn ['isValid':isValid]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"output":"{{ n_08NQf.outputs.result.output }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":17,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"0Cbyc",
			"index":36,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_Z3tMw.outputs.result.isValid }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":349,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"0Cbyc@3A1nC@kgcmN@VnH37-1@l@y@y",
			"id":"Sh4mp",
			"index":37,
			"inputs":{
				"itemToAdd":{
					"type":"text",
					"text":"{{ n_08NQf.outputs.result.output }}"
				},
				"insertLocation":"END",
				"listName":"{{ _lPykW.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":341,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@y",
			"id":"lEf1N",
			"index":38,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ _lPykW.outputs.items }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":7,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"lEf1N@3A1nC@kgcmN@VnH37-1@l@y@y",
			"id":"xjLwT",
			"index":39,
			"inputs":{
				"itemToAdd":{
					"role":"user",
					"content":{
						"ua:type":"mappedArray",
						"source":"{{ _lPykW.outputs.items }}",
						"items":"{{ _lPykW.outputs.items[0] }}"
					},
					"timestamp":"{{ kgcmN.outputs.item.createdTime }}",
					"channelCreatedTime":"{{ kgcmN.outputs.item.properties.channelCreatedTime }}"
				},
				"insertLocation":"END",
				"listName":"{{ pe1Mu.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"add to messages",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@n",
			"id":"n_gFnr2",
			"index":40,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"toolId":{
											"type":"string",
											"title":"toolId"
										},
										"toolName":{
											"type":"string",
											"title":"toolName"
										},
										"toolInput":{
											"type":"object",
											"title":"toolInput"
										},
										"toolResponseTime":{
											"type":"integer",
											"title":"toolResponseTime"
										},
										"toolExecutionStatus":{
											"type":"boolean",
											"title":"toolExecutionStatus"
										},
										"toolOutput":{
											"type":"string",
											"title":"toolOutput"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"tools",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"tools",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"toolId":{
										"type":"string",
										"title":"toolId"
									},
									"toolName":{
										"type":"string",
										"title":"toolName"
									},
									"toolInput":{
										"type":"object",
										"title":"toolInput"
									},
									"toolResponseTime":{
										"type":"integer",
										"title":"toolResponseTime"
									},
									"toolExecutionStatus":{
										"type":"boolean",
										"title":"toolExecutionStatus"
									},
									"toolOutput":{
										"type":"string",
										"title":"toolOutput"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":437,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@n",
			"id":"n_lJJJt",
			"index":41,
			"inputs":{
				"filters":[
					{
						"property":"{{ kgcmN.outputs.item.properties.additional.parallelToolCallEnabled }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":457,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_lJJJt@3A1nC@kgcmN@VnH37-1@l@n@y",
			"id":"n_c1XL9",
			"index":42,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_serviceHubMessageId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ kgcmN.outputs.item.id }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_message_tool_use_detail",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.toolId",
					"root.itemsToAdd.items.toolName",
					"root.itemsToAdd.items.toolInput",
					"root.itemsToAdd.items.toolResponseTime",
					"root.itemsToAdd.items.toolExecutionStatus",
					"root.itemsToAdd.items.toolOutput"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_lJJJt@3A1nC@kgcmN@VnH37-1@l@n@y",
			"id":"n_ecTJc",
			"index":43,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ n_c1XL9.outputs.objects }}",
					"items":{
						"toolId":"{{ n_c1XL9.outputs.objects[0].properties.toolId }}",
						"toolName":"{{ n_c1XL9.outputs.objects[0].properties.toolName }}",
						"toolInput":"{{ n_c1XL9.outputs.objects[0].properties.toolInput }}",
						"toolResponseTime":"{{ n_c1XL9.outputs.objects[0].properties.toolResponseTime }}",
						"toolExecutionStatus":"{{ n_c1XL9.outputs.objects[0].properties.toolExecutionStatus }}",
						"toolOutput":"{{ n_c1XL9.outputs.objects[0].properties.toolOutput }}"
					}
				},
				"listName":"{{ n_gFnr2.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root.output":{}
				},
				"visibleOptionalFields":[
					"root.parameters.tools.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":7,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@n",
			"id":"zFyPX",
			"index":44,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"userMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"userMessages"
						},
						"assistantMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"assistantMessages"
						},
						"toolResponseTime":{
							"type":"string",
							"title":"Tool Response Time"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"message"
					],
					"properties":{
						"message":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Message"
						},
						"modelName":{
							"type":"string",
							"title":"modelName"
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Tools"
						}
					}
				},
				"code":"List<Map<String, Object>> assistantMessages = []\nList<Map<String, Object>> userMessages = []\nObject toolResponseTime = null\nList<String> toolUseMessageBlockedTools = ['think','ClarifyFromUser','PublishCitations']\nList<Map<String, Object>> tools = binding.hasVariable(\"tools\") ? (List<Map<String, Object>>) binding.getVariable(\"tools\") : []\n\nMap<String, Object> message = safeMap(binding.getVariable(\"message\"))\nMap<String, Object> content = safeMap(message[\"content\"])\nMap<String, Object> agentResponse = safeMap(content[\"agentResponse\"])\nMap<String, Object> toolUseDetails = safeMap(agentResponse[\"toolUseDetails\"])\n\nif (toolUseDetails[\"toolId\"] != null) {\n    String toolId = toolUseDetails[\"toolId\"] as String\n    String toolName = toolUseDetails[\"toolName\"] as String\n    Map<String, Object> input = safeMap(toolUseDetails[\"toolInput\"])\n\n    if (toolName == \"PublishCitations\") {\n        assistantMessages.add([\n            type: \"text\",\n            text: \"Thought: I now know the answer\\nFinalAnswer: \" + (content[\"text\"] ?: \"\"),\n            final_answer: (content[\"text\"] ?: \"\")\n        ])\n    } else if (toolName == \"think\") {\n        if (input[\"thought\"] != null) {\n            assistantMessages.add([\n                type: \"text\",\n                text: input[\"thought\"],\n                thought: input[\"thought\"]\n            ])\n        }\n    } else {\n        String text = content[\"text\"] as String\n        String thinkingSignature = agentResponse[\"thinkingSignature\"] as String\n        if (text) {\n            assistantMessages.add([\n                type: \"text\",\n                text: \"Thought: \" + text,\n                thought: text,\n                thinkingSignature: thinkingSignature\n            ])\n        } else {\n            List<Map<String, Object>> blocks = safeMap(content[\"coPilotBlocks\"])[\"blocks\"] as List<Map<String, Object>>\n            for (Map<String, Object> block : blocks) {\n                if ((block[\"blockType\"] as String) == \"Typography\") {\n                    Map<String, Object> data = safeMap(block[\"data\"])\n                    assistantMessages.add([\n                        type: \"text\",\n                        text: \"Thought: \" + (data[\"text\"] ?: \"\"),\n                        thought: (data[\"text\"] ?: \"\")\n                    ])\n                }\n            }\n        }\n    }\n\n    if (!toolUseMessageBlockedTools.contains(toolName)) {\n        assistantMessages.add([\n            type: \"tool_use\",\n            id: toolId,\n            name: getSanitizedName(toolName),\n            input: input\n        ])\n        userMessages.add([\n            type: \"tool_result\",\n            tool_use_id: toolId,\n            content: toolUseDetails[\"toolOutput\"],\n            name: getSanitizedName(toolName),\n        ])\n    }\n    toolResponseTime = toolUseDetails[\"toolResponseTime\"]\n\n} else if (!tools.isEmpty()) {\n    String text = content[\"text\"] as String\n    String thinkingSignature = agentResponse[\"thinkingSignature\"] as String\n    boolean isPublishCitation = false\n    for (Map<String, Object> tool : tools) {\n        String toolName = tool[\"toolName\"] as String\n        String toolId = tool[\"toolId\"] as String\n        Map<String, Object> input = safeMap(tool[\"toolInput\"])\n\n        if (toolName == \"PublishCitations\") {\n            assistantMessages.add([\n                type: \"text\",\n                text: \"Thought: I now know the answer\\nFinalAnswer: \" + (content[\"text\"] ?: \"\"),\n                final_answer: (content[\"text\"] ?: \"\")\n            ])\n            isPublishCitation = true\n        } else if (toolName == \"think\") {\n            if (input[\"thought\"] != null) {\n                assistantMessages.add([\n                    type: \"text\",\n                    text: input[\"thought\"],\n                    thought: input[\"thought\"]\n                ])\n            }\n            isPublishCitation = true\n        }\n\n        if (!toolUseMessageBlockedTools.contains(toolName)) {\n            assistantMessages.add([\n                type: \"tool_use\",\n                id: toolId,\n                name: getSanitizedName(toolName),\n                input: input\n            ])\n            userMessages.add([\n                type: \"tool_result\",\n                tool_use_id: toolId,\n                content: tool[\"toolOutput\"],\n                name: getSanitizedName(toolName)\n            ])\n        }\n        toolResponseTime = tool[\"toolResponseTime\"]\n    }\n    if (text) {\n        if(!isPublishCitation){\n            assistantMessages.add([\n                type: \"text\",\n                text: \"Thought: \" + text,\n                thought: text,\n                thinkingSignature: thinkingSignature\n            ])\n        }\n    } else {\n        List<Map<String, Object>> blocks = safeMap(content[\"coPilotBlocks\"])[\"blocks\"] as List<Map<String, Object>>\n        for (Map<String, Object> block : blocks) {\n            if ((block[\"blockType\"] as String) == \"Typography\") {\n                Map<String, Object> data = safeMap(block[\"data\"])\n                assistantMessages.add([\n                    type: \"text\",\n                    text: \"Thought: \" + (data[\"text\"] ?: \"\"),\n                    thought: (data[\"text\"] ?: \"\")\n                ])\n            }\n        }\n    }\n\n} else if (agentResponse[\"rawLLMResponse\"] != null || agentResponse[\"observation\"] != null)  {\n    String rawLLMResponse = agentResponse[\"rawLLMResponse\"] as String\n    String observation = agentResponse[\"observation\"] as String\n    if(rawLLMResponse != '')\n        assistantMessages.add([type: \"text\", text: rawLLMResponse, rawLLMResponse: rawLLMResponse])\n     userMessages.add([type: \"text\", text: observation ?: \"Thought:\"])\n\n} else {\n    Map<String, Object> additional = safeMap(message[\"additional\"])\n    if ((additional[\"internalMessageType\"] ?: \"\") != \"THOUGHT\") {\n        if (content[\"text\"] != null) {\n            assistantMessages.add([\n                type: \"text\",\n                text: \"Thought: I now know the answer\\nFinalAnswer: \" + content[\"text\"],\n                final_answer: content[\"text\"]\n            ])\n        } else if (safeMap(content[\"interfaceDetails\"])[\"interfaceDescription\"] != null) {\n            assistantMessages.add([\n                type: \"text\",\n                text: \"Thought: I now know the answer\\nFinalAnswer: \" + safeMap(content[\"interfaceDetails\"])[\"interfaceDescription\"],\n                final_answer: safeMap(content[\"interfaceDetails\"])[\"interfaceDescription\"]\n            ])\n        } else {\n            List<Map<String, Object>> blocks = safeMap(content[\"coPilotBlocks\"])[\"blocks\"] as List<Map<String, Object>>\n            for (Map<String, Object> block : blocks) {\n                if ((block[\"blockType\"] as String) == \"Typography\") {\n                    Map<String, Object> data = safeMap(block[\"data\"])\n                    assistantMessages.add([\n                        type: \"text\",\n                        text: \"Thought: I now know the answer\\nFinalAnswer: \" + (data[\"text\"] ?: \"\"),\n                        final_answer: (data[\"text\"] ?: \"\")\n                    ])\n                }\n            }\n        }\n    }\n}\n\nreturn [\n    assistantMessages: assistantMessages,\n    userMessages     : userMessages,\n    toolResponseTime : toolResponseTime\n]\n\n\nstatic Map<String, Object> safeMap(Object obj) {\n    return (obj instanceof Map) ? (Map<String, Object>) obj : Collections.emptyMap()\n}\n\nstatic String getSanitizedName(String header) {\n    StringBuilder sb = new StringBuilder()\n    for (char c : header.toCharArray()) {\n        sb.append(c.isLetterOrDigit() ? c : \"_\")\n    }\n    return sb.toString()\n}\n",
				"compile_static":true,
				"captureStdOutput":false,
				"parameters":{
					"message":"{{ kgcmN.outputs.item.properties }}",
					"modelName":"{{ KrMQT.outputs.modelName }}",
					"tools":{
						"source":"{{ n_gFnr2.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ n_gFnr2.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"extract params",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":5,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@n",
			"id":"IKgYH",
			"index":45,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ zFyPX.outputs.result.assistantMessages }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"assistant messages present ",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IKgYH@3A1nC@kgcmN@VnH37-1@l@n@y",
			"id":"n_s0LcK",
			"index":46,
			"inputs":{
				"itemToAdd":{
					"role":"assistant",
					"content":{
						"source":"{{ zFyPX.outputs.result.assistantMessages }}",
						"ua:type":"mappedArray",
						"items":"{{ zFyPX.outputs.result.assistantMessages[0] }}"
					},
					"timestamp":"{{ kgcmN.outputs.item.createdTime }}",
					"channelCreatedTime":"{{ kgcmN.outputs.item.properties.channelCreatedTime }}"
				},
				"insertLocation":"END",
				"listName":"{{ pe1Mu.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":5,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3A1nC@kgcmN@VnH37-1@l@n",
			"id":"GAKwj",
			"index":47,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ zFyPX.outputs.result.userMessages }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"user messages present ",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"GAKwj@3A1nC@kgcmN@VnH37-1@l@n@y",
			"id":"n_KfFB4",
			"index":48,
			"inputs":{
				"itemToAdd":{
					"content":{
						"source":"{{ zFyPX.outputs.result.userMessages }}",
						"ua:type":"mappedArray",
						"items":"{{ zFyPX.outputs.result.userMessages[0] }}"
					},
					"role":"user",
					"timestamp":"=IF(ISBLANK({{ zFyPX.outputs.result.toolResponseTime }}),{{ kgcmN.outputs.item.createdTime }},{{ zFyPX.outputs.result.toolResponseTime }})",
					"channelCreatedTime":"=IF(ISBLANK({{ zFyPX.outputs.result.toolResponseTime }}),{{ kgcmN.outputs.item.properties.channelCreatedTime }},{{ zFyPX.outputs.result.toolResponseTime }})"
				},
				"insertLocation":"END",
				"listName":"{{ pe1Mu.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.messages.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"DMb2V",
			"index":49,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sortedMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"Role"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Content"
									},
									"timeStamp":{
										"type":"string",
										"title":"Time Stamp"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Sorted Messages"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Messages"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if (!binding.hasVariable('messages')) {\n  return [:]\n}\ndef lastMessageRole = \"\";\n\ndef messagesClone = com.unifyapps.infra.utils.JsonUtils.fromJson(com.unifyapps.infra.utils.JsonUtils.toJson(messages),List.class)\n\nfor(message in messages) {\n  if(message?.content != null && message.content.size() > 0) {\n     for(contentBlock in message.content) {\n      if(contentBlock?.text != null) {\n        contentBlock.text = contentBlock.text.trim()\n      }\n     }\n  }\n  lastMessageRole = message.role\n}\n\ndef sortField = messages.every { it.channelCreatedTime != null } ? 'channelCreatedTime' : 'timestamp'\nmessages = messages.sort { it[sortField] }\n\n\n// Added all conversation in tool_result\ndef modifiedMessages = []\ndef toolMessage = \"\"\nString toolUseId = null\nboolean toolUsed = false\nfor (message in messages) {\n    for (contentBlock in message.content) {\n        if (contentBlock.type == \"tool_use\") {\n            // ignoring tool use inside another tool use blocks\n            if(toolUseId != null) {\n                continue;\n            }\n            toolUseId = contentBlock.id\n            toolUsed = true\n        } else if (contentBlock.type == \"tool_result\" && contentBlock.tool_use_id == toolUseId) {\n            contentBlock.content = toolMessage + contentBlock.content\n            toolUseId = null\n            toolMessage = \"\"\n        } else {\n            if (toolUseId != null && contentBlock.type == \"text\") {\n                toolMessage += message.role + \":\" + contentBlock.text  + \", \"\n            } \n        }\n   } \n    if (toolUseId == null || toolUsed) {\n        modifiedMessages << message\n    }\n    toolUsed = false\n}\nmessages = messagesClone // actual input retain \n\n\nif(modifiedMessages.size() > 0 && modifiedMessages[-1].role == \"assistant\") {\n  modifiedMessages.add([\"role\":\"user\", \"content\":[[\"type\":\"text\", \"text\": \"Lets continue..\"]]])\n}\nreturn ['sortedMessages': modifiedMessages]\n\n",
				"parameters":{
					"messages":{
						"source":"{{ pe1Mu.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ pe1Mu.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_set_session_variable",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"n_jTzvF",
			"index":50,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"lastFanMessageInPrompt":{
							"type":"string",
							"title":"Last Fan Message In Prompt"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"lastFanMessageInPrompt":"{{ locRU.outputs.lastFanMessageInPrompt }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"lastFanMessageInPrompt":{
							"type":"string",
							"title":"Last Fan Message In Prompt"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Set Session Variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.result.messages.source",
					"root.result.messages.ua:type",
					"root.result.messages.items.role",
					"root.result.messages.items.content.source",
					"root.result.messages.items.content.ua:type",
					"root.result.messages.items.content.items.text",
					"root.result.messages.items.content.items.type",
					"root.result.messages.items.timestamp"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":11,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"VnH37-1",
			"id":"78rsa",
			"index":51,
			"inputs":{
				"result":{
					"messages":{
						"ua:type":"mappedArray",
						"items":{
							"content":{
								"ua:type":"mappedArray",
								"source":"{{ DMb2V.outputs.result.sortedMessages[0].content }}",
								"items":"{{ DMb2V.outputs.result.sortedMessages[0].content[0] }}"
							},
							"role":"{{ DMb2V.outputs.result.sortedMessages[0].role }}",
							"timestamp":"{{ DMb2V.outputs.result.sortedMessages[0].timeStamp }}"
						},
						"source":"{{ DMb2V.outputs.result.sortedMessages }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1866,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent",
		"Team"
	],
	"version":105
}