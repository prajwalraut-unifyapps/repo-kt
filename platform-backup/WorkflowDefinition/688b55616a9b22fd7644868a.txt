{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1756473910444,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1758646551525,
		"deployedBy":0,
		"deployedDefinitionId":"68d2d117bd00df618e363d1e",
		"status":"DEPLOYED",
		"version":15,
		"workflowVersion":45
	},
	"edges":[
		{
			"fromNodeId":"Zbdng",
			"priority":0,
			"skip":false,
			"toNodeId":"n_s9OiN",
			"type":"next"
		},
		{
			"fromNodeId":"n_s9OiN",
			"priority":0,
			"skip":false,
			"toNodeId":"n_NJ7s4",
			"type":"next"
		},
		{
			"fromNodeId":"n_NJ7s4",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ZKoI6",
			"type":"next"
		},
		{
			"fromNodeId":"n_ZKoI6",
			"priority":0,
			"skip":false,
			"toNodeId":"VwaUy",
			"type":"next"
		},
		{
			"fromNodeId":"VwaUy",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aAJuW",
			"type":"next"
		},
		{
			"fromNodeId":"n_aAJuW",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aAJuW@1",
			"type":"branch"
		},
		{
			"fromNodeId":"n_aAJuW@1",
			"priority":0,
			"skip":false,
			"toNodeId":"cUU1W",
			"type":"next"
		},
		{
			"fromNodeId":"n_aAJuW",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aAJuW@2",
			"type":"branch"
		},
		{
			"fromNodeId":"n_aAJuW@2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Cs7fi",
			"type":"next"
		},
		{
			"fromNodeId":"n_Cs7fi",
			"priority":0,
			"skip":false,
			"toNodeId":"n_g8WzL",
			"type":"next"
		},
		{
			"fromNodeId":"cUU1W",
			"priority":0,
			"skip":false,
			"toNodeId":"DKuhl",
			"type":"next"
		},
		{
			"fromNodeId":"n_g8WzL",
			"priority":0,
			"skip":false,
			"toNodeId":"DKuhl",
			"type":"next"
		},
		{
			"fromNodeId":"n_aAJuW",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"DKuhl",
			"type":"branch"
		},
		{
			"fromNodeId":"DKuhl",
			"priority":0,
			"skip":false,
			"toNodeId":"XWiUu",
			"type":"next"
		},
		{
			"fromNodeId":"XWiUu",
			"priority":0,
			"skip":false,
			"toNodeId":"2t2pg",
			"type":"next"
		},
		{
			"fromNodeId":"2t2pg",
			"priority":0,
			"skip":false,
			"toNodeId":"Ov5or",
			"type":"next"
		},
		{
			"fromNodeId":"Ov5or",
			"priority":0,
			"skip":false,
			"toNodeId":"PXUiF",
			"type":"next"
		},
		{
			"fromNodeId":"PXUiF",
			"priority":0,
			"skip":false,
			"toNodeId":"dsa85",
			"type":"next"
		},
		{
			"fromNodeId":"dsa85",
			"priority":0,
			"skip":false,
			"toNodeId":"3VIIw",
			"type":"loop"
		},
		{
			"fromNodeId":"3VIIw",
			"priority":0,
			"skip":false,
			"toNodeId":"4IIfo",
			"type":"next"
		},
		{
			"fromNodeId":"4IIfo",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"dsa85",
			"type":"next"
		},
		{
			"fromNodeId":"dsa85",
			"priority":0,
			"skip":false,
			"toNodeId":"HyE7E",
			"type":"next"
		},
		{
			"fromNodeId":"HyE7E",
			"priority":0,
			"skip":false,
			"toNodeId":"q9zTf",
			"type":"next"
		},
		{
			"fromNodeId":"q9zTf",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"WXx2P",
			"type":"if"
		},
		{
			"fromNodeId":"q9zTf",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"I1BEf",
			"type":"next"
		},
		{
			"fromNodeId":"I1BEf",
			"priority":0,
			"skip":false,
			"toNodeId":"mxyBG",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"688b55616a9b22fd7644868a",
	"lastModifiedBy":0,
	"lcName":"query ppr | graphrag (v2)",
	"modifiedTime":1758655372787,
	"name":"Query PPR | GraphRAG (v2)",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":195,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"Zbdng",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"response":{
							"type":"string",
							"title":"response"
						},
						"chunks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"content":{
										"type":"string",
										"title":"Content"
									},
									"chunk_metadata":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Chunk Metadata"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"chunks"
						}
					},
					"additionalProperties":false,
					"required":[
						"response",
						"chunks"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"query"
						},
						"graphId":{
							"type":"string",
							"title":"graphId"
						},
						"limitPageRankNodes":{
							"type":"integer",
							"title":"limitPageRankNodes",
							"default":"30"
						},
						"limitSeedNodes":{
							"type":"integer",
							"title":"limitSeedNodes",
							"default":"20"
						},
						"limitChunks":{
							"type":"integer",
							"title":"limitChunks",
							"default":"8"
						},
						"userEmail":{
							"type":"string",
							"title":"User Email"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						},
						"enableBFS":{
							"type":"boolean",
							"title":"Enable BFS",
							"default":"true"
						},
						"enablePPR":{
							"type":"boolean",
							"title":"Enable PPR",
							"default":"true"
						}
					},
					"additionalProperties":false,
					"required":[
						"query"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":105,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"n_s9OiN",
			"index":2,
			"inputs":{
				"automationId":"688b78d66a9b22fd7647b56e",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"numMaxRelationships":"10",
					"query":"{{ Zbdng.outputs.query }}",
					"GraphID":"{{ Zbdng.outputs.graphId }}"
				}
			},
			"skip":false,
			"subTitle":"Triple Extraction",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.relationships.items.relationshipID",
					"root.parameters.relationships.items.score"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"n_NJ7s4",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"cypherQuery":{
							"type":"string",
							"title":"Cypher Query"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"graphID":{
							"type":"string",
							"title":"Graph ID"
						},
						"relationships":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"relationshipID":{
										"type":"string",
										"title":"Relationship ID"
									},
									"score":{
										"type":"number",
										"title":"Score"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Relationships"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def buildRelationshipQuery(List<Map> relationships, String graphID) {\n    // relationships is now a list of objects: [ [relationshipID: \"…\", score: 1.23], … ]\n    def relItems = (relationships ?: []).collect { rel ->\n        def rid   = (rel.relationshipID ?: \"\").toString().replace(\"'\", \"\\\\'\")\n        def score = (rel.score != null ? rel.score : 0)\n        \"{relationshipID: '${rid}', score: ${score}}\"\n    }.join(\", \")\n\n    def relLabel = (graphID + '_REL').toString()\n\n    // Build Cypher query\n    def query = \"\"\"\\\nWITH [${relItems}] AS relList\nUNWIND relList AS item\nWITH item.relationshipID AS relId, item.score AS relScore\nMATCH (src)-[r:${relLabel}]->(dst)\nWHERE r.id = relId\nWITH\n  collect({n: src, s: relScore}) +\n  collect({n: dst, s: relScore}) AS nodeScorePairs\nUNWIND nodeScorePairs AS row\nWITH row.n AS node, row.s AS s\nWITH toString(ID(node)) AS nodeID, node, sum(s) AS totalScore\nWITH collect({nodeId: nodeID, simScore: totalScore}) AS scoredNodes\nUNWIND scoredNodes AS entry\nMATCH (n) WHERE toString(ID(n)) = entry.nodeId\nWITH ID(n) AS nodeId,\n     entry.simScore AS simScore,\n     n.name AS name,\n     CASE WHEN size(n.sourceChunkID) > 0\n          THEN 1.0 / size(n.sourceChunkID)\n          ELSE 1.0\n     END AS nodeSpecificity\nRETURN nodeId, simScore, name, nodeSpecificity\nORDER BY simScore DESC, nodeId ASC\n\"\"\".stripIndent()\n\n    return query\n}\nreturn [cypherQuery: buildRelationshipQuery(relationships, graphID)]",
				"parameters":{
					"graphID":"{{ Zbdng.outputs.graphId }}",
					"relationships":{
						"source":"{{ n_s9OiN.outputs.triples }}",
						"ua:type":"mappedArray",
						"items":{
							"relationshipID":"{{ n_s9OiN.outputs.triples[0].relationshipID }}",
							"score":"{{ n_s9OiN.outputs.triples[0].score }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Cypher for Seed Nodes",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":105,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"n_ZKoI6",
			"index":4,
			"inputs":{
				"automationId":"67a9e903bdf95a2dab1df8cb",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"cypherQuery":"{{ n_NJ7s4.outputs.result.cypherQuery }}"
				}
			},
			"skip":false,
			"subTitle":"Query all Nodes",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.nodes.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":393,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"VwaUy",
			"index":5,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"nodeIDs":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"nodeIDs"
						},
						"simScores":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"simScores"
						},
						"nodeSpecificities":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"nodeSpecificities"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Nodes"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def nodeIDs = nodes.collect { it.nodeId }\ndef simScores = nodes.collect { it.simScore }\ndef nodeSpecificities = nodes.collect { it.nodeSpecificity }\nreturn [\n    nodeIDs  : nodeIDs,\n    simScores: simScores,\n    nodeSpecificities : nodeSpecificities\n]",
				"parameters":{
					"nodes":{
						"ua:type":"mappedArray",
						"source":"{{ n_ZKoI6.outputs.blocks }}",
						"items":"{{ n_ZKoI6.outputs.blocks[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Extract Node IDs and specificity",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"n_aAJuW",
			"index":6,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"Enable PPR",
							"conditions":{
								"filters":[
									{
										"property":"{{ Zbdng.outputs.enablePPR }}",
										"filter":{
											"operator":"EQUAL",
											"value":"true"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"Enable BFS",
							"conditions":{
								"filters":[
									{
										"property":"{{ Zbdng.outputs.enableBFS }}",
										"filter":{
											"operator":"EQUAL",
											"value":"true"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_aAJuW@9DRJN-1@1",
			"id":"n_aAJuW@1",
			"index":7,
			"inputs":{
				"name":"Enable PPR",
				"conditions":{
					"filters":[
						{
							"property":"{{ Zbdng.outputs.enablePPR }}",
							"filter":{
								"operator":"EQUAL",
								"value":"true"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":211,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_aAJuW@9DRJN-1@1",
			"id":"cUU1W",
			"index":8,
			"inputs":{
				"automationId":"678f7985ea6abd513c727a08",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"limitNodes":"{{ Zbdng.outputs.limitPageRankNodes }}",
					"graphId":"{{ Zbdng.outputs.graphId }}",
					"seedNodes":{
						"source":"{{ VwaUy.outputs.result.nodeIDs }}",
						"ua:type":"mappedArray",
						"items":"{{ VwaUy.outputs.result.nodeIDs[0] }}"
					},
					"simScores":{
						"source":"{{ VwaUy.outputs.result.simScores }}",
						"ua:type":"mappedArray",
						"items":"{{ VwaUy.outputs.result.simScores[0] }}"
					},
					"nodeSpecificities":{
						"source":"{{ VwaUy.outputs.result.nodeSpecificities }}",
						"ua:type":"mappedArray",
						"items":"{{ VwaUy.outputs.result.nodeSpecificities[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"PPR",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_aAJuW@9DRJN-1@2",
			"id":"n_aAJuW@2",
			"index":9,
			"inputs":{
				"name":"Enable BFS",
				"conditions":{
					"filters":[
						{
							"property":"{{ Zbdng.outputs.enableBFS }}",
							"filter":{
								"operator":"EQUAL",
								"value":"true"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.nodeIds.items",
					"root.parameters.scores.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_aAJuW@9DRJN-1@2",
			"id":"n_Cs7fi",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"cypherQuery":{
							"type":"string",
							"title":"Cypher Query"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"nodeIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Node Ids"
						},
						"graphID":{
							"type":"string",
							"title":"Graph ID"
						},
						"scores":{
							"type":"array",
							"items":{
								"type":"number"
							},
							"title":"Scores"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"// Build query using three inputs: nodeIds (String[]), scores (Number[]), graphID (String)\n// Assumes scores[i] corresponds to nodeIds[i]. Non-seed nodes default to 0 seed score.\n\ndef idItems = (nodeIds ?: []).collect { id ->\n    \"'${(id ?: '').toString().replace(\"'\", \"\\\\'\")}'\"\n}.join(\", \")\n\ndef scoreItems = (scores ?: []).collect { s ->\n    (s == null ? \"0.0\" : s.toString())\n}.join(\", \")\n\ndef relLabel = ((graphID ?: '') + '_REL').toString()\n\ndef query = \"\"\"\\\n    WITH [${idItems}] AS nodeIds, [${scoreItems}] AS scores\n    UNWIND nodeIds AS seedId\n    MATCH (s)\n    WHERE toString(id(s)) = seedId\n    WITH collect(DISTINCT s) AS seeds, nodeIds, scores\n\n    // layer 0 = seeds, layer 1 = neighbors of seeds\n    WITH seeds, nodeIds, scores, [n IN seeds | {nodeId: toString(id(n)), depth: 0}] AS layer0\n    UNWIND seeds AS s\n    OPTIONAL MATCH (s)-[:${relLabel}]-(n1)\n    WITH layer0, nodeIds, scores, collect(DISTINCT n1) AS nbrs\n    WITH layer0 + [n IN nbrs | {nodeId: toString(id(n)), depth: 1}] AS layers, nodeIds, scores\n\n    UNWIND layers AS entry\n    MATCH (n)\n    WHERE toString(id(n)) = entry.nodeId\n\n    // Compute seed_score(n) from (nodeIds, scores) alignment\n    WITH n, entry.depth AS depth, nodeIds, scores,\n         coalesce(\n             head([x IN range(0, size(nodeIds)-1)\n                   WHERE nodeIds[x] = toString(id(n))\n                   | toFloat(scores[x])]),\n             0.0\n         ) AS seed_score\n\n    // Sum neighbor seed scores (only neighbors that are in nodeIds contribute)\n    OPTIONAL MATCH (n)-[:${relLabel}]-(nbr)\n    WITH n, depth, seed_score, nodeIds, scores, collect(DISTINCT nbr) AS neighbors\n    WITH n, depth, seed_score,\n         reduce(acc = 0.0, nb IN neighbors |\n             acc + coalesce(\n                 head([x IN range(0, size(nodeIds)-1)\n                       WHERE nodeIds[x] = toString(id(nb))\n                       | toFloat(scores[x])]),\n                 0.0\n             )\n         ) AS neighb_seed_sum\n\n    WITH n, depth, seed_score, neighb_seed_sum,\n         seed_score + (neighb_seed_sum / 2.0) AS bfs_score\n    RETURN id(n) AS nodeId, depth, n.name AS name, seed_score, bfs_score\n    ORDER BY depth ASC, nodeId ASC\n\"\"\".stripIndent()\n\nreturn [cypherQuery: query]",
				"parameters":{
					"nodeIds":{
						"source":"{{ VwaUy.outputs.result.nodeIDs }}",
						"ua:type":"mappedArray",
						"items":"{{ VwaUy.outputs.result.nodeIDs[0] }}"
					},
					"graphID":"{{ Zbdng.outputs.graphId }}",
					"scores":{
						"source":"{{ VwaUy.outputs.result.simScores }}",
						"ua:type":"mappedArray",
						"items":"{{ VwaUy.outputs.result.simScores[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"BFS Cypher",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":464,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_aAJuW@9DRJN-1@2",
			"id":"n_g8WzL",
			"index":11,
			"inputs":{
				"automationId":"67a9e903bdf95a2dab1df8cb",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"cypherQuery":"{{ n_Cs7fi.outputs.result.cypherQuery }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":263,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"DKuhl",
			"index":12,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"chunk_content":{
											"type":"string",
											"title":"Chunk Content"
										},
										"chunk_metadata":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Chunk Metadata"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"chunkList",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"chunkList",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"chunk_content":{
										"type":"string",
										"title":"Chunk Content"
									},
									"chunk_metadata":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Chunk Metadata"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Chunks",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.nodes.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":393,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"XWiUu",
			"index":13,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"chunkIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"chunkIds"
						},
						"chunkIdsWithScores":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"chunkIdsWithScores"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"nodes":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"nodes"
						},
						"limitChunks":{
							"type":"integer",
							"title":"limitChunks"
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"def mapChunkIdsToScores = [:]\ndef chunkIdsWithScores = []\n\nnodes.each { node ->\n    // 1) Skip if 'chunkID' key does not exist or is null\n    if (!node.containsKey('chunkID') || node['chunkID'] == null) {\n        return\n    }\n    def chunkIds = node['chunkID']\n    // 2) Handle empty chunkIds (skip)\n    if (!chunkIds || chunkIds.size() == 0) {\n        return\n    }\n    def chunkScore = node['score']\n    def normalizedScore = chunkScore / chunkIds.size()\n    chunkIds.each { chunkId ->\n        if (!mapChunkIdsToScores.containsKey(chunkId)) {\n            mapChunkIdsToScores[chunkId] = 0\n        }\n        mapChunkIdsToScores[chunkId] += normalizedScore\n    }\n}\n\nmapChunkIdsToScores.each { key, val ->\n    chunkIdsWithScores << [key, val]\n}\n\nchunkIdsWithScores = chunkIdsWithScores.sort { -it[1] }\n\ndef chunkIds = []\nchunkIdsWithScores = chunkIdsWithScores.take(limitChunks as int)\n\nchunkIdsWithScores.each { chunk ->\n    chunkIds << chunk[0]\n}\n\ndef result = [\n    chunkIds: chunkIds,\n    chunkIdsWithScores: chunkIdsWithScores\n]",
				"parameters":{
					"nodes":{
						"source":"{{ cUU1W.outputs.rankedNodes }}",
						"ua:type":"mappedArray",
						"items":"{{ cUU1W.outputs.rankedNodes[0] }}"
					},
					"limitChunks":"{{ Zbdng.outputs.limitChunks }}"
				}
			},
			"skip":false,
			"subTitle":"Chunk Ranking",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":20,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"2t2pg",
			"index":14,
			"inputs":{
				"automationId":"679c6123a6583456a71988d2",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ Zbdng.outputs.caseId }}",
					"aiAgentId":"{{ Zbdng.outputs.aiAgentId }}"
				}
			},
			"skip":false,
			"subTitle":"Fetch applicable knowledges",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":382,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"Ov5or",
			"index":15,
			"inputs":{
				"automationId":"6704f23182227947dd32e79c",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"knowledgeIds":{
						"source":"{{ 2t2pg.outputs.knowledges }}",
						"ua:type":"mappedArray",
						"items":"=MAPGET({{ 2t2pg.outputs.knowledges }},\"id\")"
					},
					"userEmailAddress":"{{ Zbdng.outputs.userEmail }}"
				}
			},
			"skip":false,
			"subTitle":"RBAC",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.sharedWithIds.items",
					"root.parameters.knowledgeList.items.id",
					"root.parameters.knowledgeList.items.version",
					"root.parameters.knowledgeList.items.sourceType"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":52,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"PXUiF",
			"index":16,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"filter":{
							"type":"object",
							"title":"filter"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"sharedWithIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"sharedWithIds"
						},
						"additionalFilter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Additional Filter"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def combinedFilter = [\n    op: 'AND',\n    values: []\n]\n\ndef sharedFilter = null\nif (binding.hasVariable('sharedWithIds')) {\n    sharedFilter = [\n        field: 'properties.sharedWithIds',\n        op: 'IN',\n        values: sharedWithIds\n    ]    \n    combinedFilter['values'].add(sharedFilter)\n}\n\nif(binding.hasVariable('additionalFilter') && additionalFilter != null){\n   combinedFilter['values'].add(additionalFilter)\n}\n\nreturn ['filter': combinedFilter['values'].size() > 0 ? combinedFilter : null]\n",
				"isAsync":false,
				"parameters":{
					"sharedWithIds":{
						"ua:type":"mappedArray",
						"source":"{{ Ov5or.outputs.sharedWithIds }}",
						"items":"{{ Ov5or.outputs.sharedWithIds[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Rbacfilter",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":230,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"dsa85",
			"index":17,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ XWiUu.outputs.result.chunkIds }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2187,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"dsa85@9DRJN-1@l",
			"id":"3VIIw",
			"index":18,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ dsa85.outputs.item }}"
							}
						},
						{
							"resolvedFilter":{
								"filter":"{{ PXUiF.outputs.result.filter }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"ai_agent_chunk",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":204,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"dsa85@9DRJN-1@l",
			"id":"4IIfo",
			"index":19,
			"inputs":{
				"itemToAdd":{
					"chunk_content":"{{ 3VIIw.outputs.properties.text }}",
					"chunk_metadata":"{{ 3VIIw.outputs.properties.chunkMetadata }}"
				},
				"insertLocation":"END",
				"listName":"{{ DKuhl.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.chunks.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":380,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"HyE7E",
			"index":20,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalChunks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"content":{
										"type":"string",
										"title":"Content"
									},
									"metadata":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Metadata"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Final Chunks"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"chunks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Chunks"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"List transform(List chunks) {\n\n    /* 0. keep only the chunks that actually contain chunk_metadata  */\n    List validChunks = chunks.findAll { chunk ->\n        chunk?.chunk_metadata                      // present & not null\n    }\n\n    /* 1-3. transform the remaining chunks                           */\n    return validChunks.collect { chunk ->\n\n        /* 1. defensive copy of the existing metadata                */\n        Map meta = [:] + chunk.chunk_metadata\n\n        /* 2. add the new key whose value is a one-element list      */\n        meta.chunkContents = [ chunk.chunk_content ]\n\n        /* 3. build the transformed element                          */\n        [\n            content : chunk.chunk_content,\n            metadata: meta\n        ]\n    }\n}\n\nreturn [\n    finalChunks: transform(chunks)\n]",
				"parameters":{
					"chunks":{
						"source":"{{ DKuhl.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ DKuhl.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Chunk List Formatting",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":264,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9DRJN-1",
			"id":"q9zTf",
			"index":21,
			"inputs":{
				"filters":[
					{
						"property":"1",
						"filter":{
							"operator":"EQUAL",
							"value":"1"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"RetrieverMode?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":183,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"q9zTf@9DRJN-1@y",
			"id":"WXx2P",
			"index":22,
			"inputs":{
				"result":{
					"response":"dummy",
					"chunks":{
						"source":"{{ HyE7E.outputs.result.finalChunks }}",
						"ua:type":"mappedArray",
						"items":{
							"content":"{{ HyE7E.outputs.result.finalChunks[0].content }}",
							"chunk_metadata":"{{ HyE7E.outputs.result.finalChunks[0].metadata }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":211,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"q9zTf@9DRJN-1@n",
			"id":"I1BEf",
			"index":23,
			"inputs":{
				"automationId":"678f914b4a762011ccfae8c1",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"entities":{
						"source":"{{ cUU1W.outputs.rankedNodes }}",
						"ua:type":"mappedArray",
						"items":"{{ cUU1W.outputs.rankedNodes[0] }}"
					},
					"relationships":{
						"source":"{{ cUU1W.outputs.rankedRelationships }}",
						"ua:type":"mappedArray",
						"items":"{{ cUU1W.outputs.rankedRelationships[0] }}"
					},
					"chunks":{
						"source":"{{ DKuhl.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ DKuhl.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Context Aggr.",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":183,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"q9zTf@9DRJN-1@n",
			"id":"mxyBG",
			"index":24,
			"inputs":{
				"result":{
					"chunks":{
						"ua:type":"mappedArray",
						"source":"{{ DKuhl.outputs.items }}",
						"items":{
							"content":"{{ DKuhl.outputs.items[0].chunk_content }}",
							"chunk_metadata":"{{ DKuhl.outputs.items[0].chunk_metadata }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":-1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":46
}