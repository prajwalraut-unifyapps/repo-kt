{
	"appsUsed":[
		
	],
	"createdTime":1743153433360,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243595297,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed4b23e6682b9a51ec2d",
		"status":"DEPLOYED",
		"version":53,
		"workflowVersion":71
	},
	"edges":[
		{
			"fromNodeId":"kY6ms",
			"priority":0,
			"skip":false,
			"toNodeId":"urVzy",
			"type":"next"
		},
		{
			"fromNodeId":"urVzy",
			"priority":0,
			"skip":false,
			"toNodeId":"aTGC4",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"67e669196b919460b368dce2",
	"lastModifiedBy":-1,
	"lcName":"mask knowledge chunk via regex",
	"modifiedTime":1759371914676,
	"name":"Mask Knowledge Chunk via Regex",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":428,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Lin0X-1",
			"id":"kY6ms",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						},
						"proceed":{
							"type":"boolean",
							"title":"Proceed"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"text":{
							"type":"string",
							"title":"text"
						},
						"regexPatterns":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"pattern":{
										"type":"string",
										"title":"pattern"
									},
									"behaviour":{
										"type":"string",
										"title":"behaviour"
									}
								},
								"additionalProperties":false
							},
							"title":"regexPatterns"
						}
					},
					"additionalProperties":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.regexPatterns.items.Name",
					"root.parameters.regexPatterns.items.behaviour",
					"root.parameters.regexPatterns.items.pattern"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":52,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Lin0X-1",
			"id":"urVzy",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"text",
						"proceed"
					],
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						},
						"proceed":{
							"type":"boolean",
							"title":"Proceed"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"text"
					],
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						},
						"regexPatterns":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"Name":{
										"type":"string",
										"title":"Name"
									},
									"behaviour":{
										"type":"string",
										"title":"Behaviour"
									},
									"pattern":{
										"type":"string",
										"title":"Pattern"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Regex Patterns"
						}
					}
				},
				"code":"def process(List regexPatterns, String text) {\n    def proceed = true\n    def result = text\n\n    regexPatterns.each { pattern ->\n        def rawPattern = pattern.pattern?.replace(\"*\", \"\\\\\\\\d+\") // '*' becomes '\\\\d+'\n        def behavior = pattern.behaviour\n\n        if (rawPattern && behavior) {\n            def caseInsensitiveRegex = \"(?i)${rawPattern}\"\n            def regex = ~caseInsensitiveRegex  // Compile regex\n\n            if (behavior == \"mask\") {\n                result = result.replaceAll(regex) { match ->\n                    // Use match[0] to get the full match string when there are capturing groups\n                    def matchString = match instanceof List ? match[0] : match\n                    return \"*\" * matchString.length()\n                }\n            } else if (behavior == \"block\") {\n                def newResult = result.replaceAll(regex, \"\")\n                if (newResult != result) {\n                    proceed = false\n                    return [text: result, proceed: proceed] // Early exit\n                }\n            }\n        }\n    }\n\n    return [text: result, proceed: proceed]\n}\n\nreturn process(regexPatterns, text)",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"text":"{{ kY6ms.outputs.text }}",
					"regexPatterns":{
						"source":"{{ kY6ms.outputs.regexPatterns }}",
						"ua:type":"mappedArray",
						"items":{
							"Name":"{{ kY6ms.outputs.regexPatterns[0].name }}",
							"behaviour":"{{ kY6ms.outputs.regexPatterns[0].behaviour }}",
							"pattern":"{{ kY6ms.outputs.regexPatterns[0].pattern }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":430,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Lin0X-1",
			"id":"aTGC4",
			"index":3,
			"inputs":{
				"result":{
					"text":"{{ urVzy.outputs.result.text }}",
					"proceed":"{{ urVzy.outputs.result.proceed }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":311,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"PII"
	],
	"version":72
}