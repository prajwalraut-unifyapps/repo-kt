{
	"appsUsed":[
		"google_secret_manager",
		"smtp",
		"sqlserver"
	],
	"createdTime":1759405181722,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759405193694,
		"deployedBy":39713,
		"deployedDefinitionId":"68de6489ed7fcc6978211568",
		"status":"DEPLOYED",
		"version":1,
		"workflowVersion":88
	},
	"edges":[
		{
			"fromNodeId":"n_uTqRM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_SfvVU",
			"type":"next"
		},
		{
			"fromNodeId":"n_SfvVU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_YfolL",
			"type":"next"
		},
		{
			"fromNodeId":"n_YfolL",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LXt0d",
			"type":"next"
		},
		{
			"fromNodeId":"n_LXt0d",
			"priority":0,
			"skip":false,
			"toNodeId":"_qXrpM",
			"type":"next"
		},
		{
			"fromNodeId":"_qXrpM",
			"priority":0,
			"skip":false,
			"toNodeId":"_9UV8d",
			"type":"next"
		},
		{
			"fromNodeId":"_9UV8d",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Bna9a",
			"type":"next"
		},
		{
			"fromNodeId":"n_Bna9a",
			"priority":0,
			"skip":false,
			"toNodeId":"n_uMRn9",
			"type":"next"
		},
		{
			"fromNodeId":"n_uMRn9",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bq1nF",
			"type":"next"
		},
		{
			"fromNodeId":"n_bq1nF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LKl7q",
			"type":"next"
		},
		{
			"fromNodeId":"n_LKl7q",
			"priority":0,
			"skip":false,
			"toNodeId":"_rqL19",
			"type":"next"
		},
		{
			"fromNodeId":"_rqL19",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nCiyP",
			"type":"next"
		},
		{
			"fromNodeId":"n_nCiyP",
			"priority":0,
			"skip":false,
			"toNodeId":"_kTmbj",
			"type":"scope"
		},
		{
			"fromNodeId":"_kTmbj",
			"priority":0,
			"skip":false,
			"toNodeId":"_DAty3",
			"type":"next"
		},
		{
			"fromNodeId":"_DAty3",
			"priority":0,
			"skip":false,
			"toNodeId":"_oEhdn",
			"type":"next"
		},
		{
			"fromNodeId":"_oEhdn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_BC05g",
			"type":"loop"
		},
		{
			"fromNodeId":"n_BC05g",
			"priority":0,
			"skip":false,
			"toNodeId":"_0G8fn",
			"type":"next"
		},
		{
			"fromNodeId":"_0G8fn",
			"priority":0,
			"skip":false,
			"toNodeId":"_elQrM",
			"type":"next"
		},
		{
			"fromNodeId":"_elQrM",
			"priority":0,
			"skip":false,
			"toNodeId":"_O1gR8",
			"type":"next"
		},
		{
			"fromNodeId":"_O1gR8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GuFti",
			"type":"next"
		},
		{
			"fromNodeId":"n_GuFti",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZMYmr",
			"type":"next"
		},
		{
			"fromNodeId":"_ZMYmr",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZMYmr@1",
			"type":"branch"
		},
		{
			"fromNodeId":"_ZMYmr",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZMYmr@2",
			"type":"branch"
		},
		{
			"fromNodeId":"_ZMYmr",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZMYmr@3",
			"type":"branch"
		},
		{
			"fromNodeId":"_ZMYmr@3",
			"priority":0,
			"skip":false,
			"toNodeId":"_MDoLA",
			"type":"next"
		},
		{
			"fromNodeId":"_MDoLA",
			"priority":0,
			"skip":false,
			"toNodeId":"_yVa2Y",
			"type":"next"
		},
		{
			"fromNodeId":"_ZMYmr",
			"name":"4",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZMYmr@4",
			"type":"branch"
		},
		{
			"fromNodeId":"_ZMYmr@4",
			"priority":0,
			"skip":false,
			"toNodeId":"_1mdiA",
			"type":"next"
		},
		{
			"fromNodeId":"_1mdiA",
			"priority":0,
			"skip":false,
			"toNodeId":"_2g3Rh",
			"type":"next"
		},
		{
			"fromNodeId":"_ZMYmr",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"_SliyU",
			"type":"branch"
		},
		{
			"fromNodeId":"_SliyU",
			"priority":0,
			"skip":false,
			"toNodeId":"_C4Rl3",
			"type":"next"
		},
		{
			"fromNodeId":"_ZMYmr@1",
			"priority":0,
			"skip":false,
			"toNodeId":"_1gAmi",
			"type":"next"
		},
		{
			"fromNodeId":"_ZMYmr@2",
			"priority":0,
			"skip":false,
			"toNodeId":"_1gAmi",
			"type":"next"
		},
		{
			"fromNodeId":"_yVa2Y",
			"priority":0,
			"skip":false,
			"toNodeId":"_1gAmi",
			"type":"next"
		},
		{
			"fromNodeId":"_2g3Rh",
			"priority":0,
			"skip":false,
			"toNodeId":"_1gAmi",
			"type":"next"
		},
		{
			"fromNodeId":"_C4Rl3",
			"priority":0,
			"skip":false,
			"toNodeId":"_1gAmi",
			"type":"next"
		},
		{
			"fromNodeId":"_1gAmi",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_oEhdn",
			"type":"next"
		},
		{
			"fromNodeId":"_oEhdn",
			"priority":0,
			"skip":false,
			"toNodeId":"_QDycD",
			"type":"next"
		},
		{
			"fromNodeId":"_QDycD",
			"priority":0,
			"skip":false,
			"toNodeId":"_L2kjN",
			"type":"loop"
		},
		{
			"fromNodeId":"_L2kjN",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_QDycD",
			"type":"next"
		},
		{
			"fromNodeId":"_QDycD",
			"priority":0,
			"skip":false,
			"toNodeId":"_YhpLP",
			"type":"next"
		},
		{
			"fromNodeId":"_YhpLP",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_JhWJE",
			"type":"if"
		},
		{
			"fromNodeId":"_JhWJE",
			"priority":0,
			"skip":false,
			"toNodeId":"_wdBa9",
			"type":"next"
		},
		{
			"fromNodeId":"_wdBa9",
			"priority":0,
			"skip":false,
			"toNodeId":"_Sv3bB",
			"type":"next"
		},
		{
			"fromNodeId":"_YhpLP",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_OgXoo",
			"type":"next"
		},
		{
			"fromNodeId":"_OgXoo",
			"priority":0,
			"skip":false,
			"toNodeId":"_SxOTY",
			"type":"next"
		},
		{
			"fromNodeId":"_SxOTY",
			"priority":0,
			"skip":false,
			"toNodeId":"_4srCA",
			"type":"next"
		},
		{
			"fromNodeId":"_Sv3bB",
			"name":"scope-loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nCiyP",
			"type":"next"
		},
		{
			"fromNodeId":"_4srCA",
			"name":"scope-loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nCiyP",
			"type":"next"
		},
		{
			"fromNodeId":"n_nCiyP",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"_bi76K",
			"type":"error"
		},
		{
			"fromNodeId":"_bi76K",
			"priority":0,
			"skip":false,
			"toNodeId":"_eeocw",
			"type":"next"
		},
		{
			"fromNodeId":"_eeocw",
			"priority":0,
			"skip":false,
			"toNodeId":"_t0edP",
			"type":"next"
		},
		{
			"fromNodeId":"n_nCiyP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_X8X0p",
			"type":"next"
		},
		{
			"fromNodeId":"_t0edP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_X8X0p",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"VIEW_RUNS",
					"V"
				],
				"principalIds":[
					"39713"
				],
				"principalType":"USER"
			}
		]
	},
	"id":"68bac84bda9aba59405ce936",
	"lastModifiedBy":39713,
	"lcName":"test",
	"modifiedTime":1759405228017,
	"name":"test",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":36,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_uTqRM",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json",
					"body":{
						"type":"object",
						"properties":{
							"ComponentId":{
								"type":"integer",
								"title":"ComponentId"
							},
							"ProcessType":{
								"type":"integer",
								"title":"ProcessType"
							}
						},
						"additionalProperties":false
					}
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":32,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_SfvVU",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"logicAppRunID":{
							"type":"string",
							"title":"Logic App Run ID"
						},
						"current_time":{
							"type":"string",
							"title":"Current Time"
						},
						"currenttime":{
							"type":"string",
							"title":"Currenttime"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"currenttime":"=TEXT(NOW(), \"dd mmm yyyy hh:mm AM/PM\")",
				"logicAppRunID":"68bac84bda9aba59405ce936",
				"current_time":"=TEXT(NOW(),\"yyyy-mm-dd\\THH:MM:SS\") & \".\" & TEXT((NOW()-INT(NOW()))*1000,\"000\") & \"Z\""
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"logicAppRunID":{
							"type":"string",
							"title":"Logic App Run ID"
						},
						"current_time":{
							"type":"string",
							"title":"Current Time"
						},
						"currenttime":{
							"type":"string",
							"title":"Currenttime"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"google_secret_manager",
				"resourceVersion":7,
				"connectionId":"68bebc3633981e263cd82977",
				"resourceName":"google_secret_manager_get_secret_value",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_YfolL",
			"index":3,
			"inputs":{
				"project":"virtusa-eag-devtest-202773",
				"secretId":"dp-scrt-pbiappid-dev1",
				"version":"latest"
			},
			"skip":false,
			"subTitle":"get client id",
			"title":"Get secret value",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_decode_base64_text",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_LXt0d",
			"index":4,
			"inputs":{
				"charset":"UTF-8",
				"encodedText":"{{ n_YfolL.outputs.payload.data }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Decode base64 text",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"google_secret_manager",
				"resourceVersion":7,
				"connectionId":"68bebc3633981e263cd82977",
				"resourceName":"google_secret_manager_get_secret_value",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"_qXrpM",
			"index":5,
			"inputs":{
				"project":"virtusa-eag-devtest-202773",
				"secretId":"dp-scrt-pbiappscrtkey-dev1",
				"version":"latest"
			},
			"skip":false,
			"subTitle":"get client secret",
			"title":"Get secret value",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_decode_base64_text",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"_9UV8d",
			"index":6,
			"inputs":{
				"charset":"UTF-8",
				"encodedText":"{{ _qXrpM.outputs.payload.data }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Decode base64 text",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd62bba7330557a04b16f",
				"resourceName":"sqlserver_insert_row",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_Bna9a",
			"index":7,
			"inputs":{
				"record":{
					"PROCESS_STATUS":"IN PROGRESS",
					"START_TIME":"{{ n_SfvVU.outputs.current_time }}",
					"RUN_ID":"{{ n_SfvVU.outputs.logicAppRunID }}",
					"MODEL":"{{ __ENV__.outputs.datasetname_delivery }}"
				},
				"objectId":"SEMANTIC_MODEL_PROCESS_LOG"
			},
			"skip":false,
			"subTitle":"Insert row (V2) - Logic App Status - InProgress",
			"title":"Insert row",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":32,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_uMRn9",
			"index":8,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"vrtueagdp-dataset-hr-prod":{
							"type":"boolean",
							"title":"Vrtueagdp Dataset Hr Prod"
						},
						"processingWasSuccessful":{
							"type":"boolean",
							"title":"Processing Was Successful"
						},
						"errorMessage":{
							"type":"string",
							"title":"Error Message"
						},
						"processingFinished":{
							"type":"boolean",
							"title":"Processing Finished"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"vrtueagdp-dataset-hr-prod":false,
				"processingFinished":false,
				"processingWasSuccessful":false
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"vrtueagdp-dataset-hr-prod":{
							"type":"boolean",
							"title":"Vrtueagdp Dataset Hr Prod"
						},
						"processingWasSuccessful":{
							"type":"boolean",
							"title":"Processing Was Successful"
						},
						"errorMessage":{
							"type":"string",
							"title":"Error Message"
						},
						"processingFinished":{
							"type":"boolean",
							"title":"Processing Finished"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd75924bb8e6ce4bc49f6",
				"resourceName":"sqlserver_execute_stored_procedure",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_bq1nF",
			"index":9,
			"inputs":{
				"objectSourceResourceName":"sqlserver_fetch_stored_procedure_metadata",
				"record":{
					"ProcessType":"{{ n_uTqRM.outputs.body.ProcessType }}"
				},
				"output_schema":{
					"type":"object",
					"properties":{
						"result_1":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ProcessType":{
										"type":"string",
										"title":"ProcessType"
									},
									"ProcessList":{
										"type":"string",
										"title":"ProcessList"
									},
									"ComponentName":{
										"type":"string",
										"title":"ComponentName"
									},
									"ComponentId":{
										"type":"integer",
										"title":"ComponentId"
									}
								},
								"additionalProperties":false
							},
							"title":"result_1"
						}
					},
					"additionalProperties":false
				},
				"objectId":"USP_NG_DELIVERY_GET_SEMANTIC_ENTITY_TOBE_PROCESSED"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Execute stored procedure (V2) - Get tables to process",
			"title":"Execute stored procedure",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_LKl7q",
			"index":10,
			"inputs":{
				"jsonSchema":{
					"type":"array",
					"items":{
						"type":"object",
						"properties":{
							"Partition":{
								"type":"string",
								"title":"Partition"
							},
							"database":{
								"type":"string",
								"title":"database"
							},
							"table":{
								"type":"string",
								"title":"table"
							}
						},
						"additionalProperties":false
					}
				},
				"jsonString":"{{ n_bq1nF.outputs.result_1[0].ProcessList }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_http_endpoint",
				"resourceVersion":6,
				"resourceName":"custom_http_endpoint_execute_multipart",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"_rqL19",
			"index":11,
			"inputs":{
				"isAsync":false,
				"enableProxy":false,
				"requestTimeoutInSecs":-1,
				"httpMethod":"POST",
				"body":{
					"grant_type":"client_credentials",
					"scope":"https://analysis.windows.net/powerbi/api/.default",
					"client_secret":"{{ _9UV8d.outputs.decodedText }}",
					"client_id":"{{ n_LXt0d.outputs.decodedText }}"
				},
				"connectionType":"DIRECT",
				"sslVerify":false,
				"responseSchema":{
					"type":"object",
					"properties":{
						"token_type":{
							"type":"string",
							"title":"token_type"
						},
						"expires_in":{
							"type":"integer",
							"title":"expires_in"
						},
						"ext_expires_in":{
							"type":"integer",
							"title":"ext_expires_in"
						},
						"access_token":{
							"type":"string",
							"title":"access_token"
						}
					},
					"additionalProperties":false
				},
				"path":"/{{ __ENV__.outputs.tenantId }}/oauth2/v2.0/token",
				"baseUrl":"https://login.microsoftonline.com",
				"bodySchema":{
					"type":"object",
					"properties":{
						"client_id":{
							"type":"string",
							"title":"client_id"
						},
						"client_secret":{
							"type":"string",
							"title":"client_secret"
						},
						"grant_type":{
							"type":"string",
							"title":"grant_type"
						},
						"scope":{
							"type":"string",
							"title":"Scope"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"responseContentType":"application/json",
				"headersList":[],
				"authType":"CUSTOM",
				"requestContentType":"application/x-www-form-urlencoded",
				"ignoreTrailingSlashes":false
			},
			"skip":false,
			"subTitle":"Authorization",
			"title":"Execute REST multipart request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"scope",
				"resourceVersion":36,
				"resourceName":"scope_trigger_scope",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"_bi1v1-1",
			"id":"n_nCiyP",
			"index":12,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"1",
							"filter":{
								"operator":"EQUAL",
								"value":"1"
							}
						}
					],
					"operator":"AND"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Scope",
			"title":"Trigger Scope",
			"type":"SCOPE"
		},
		{
			"context":{
				"appName":"custom_http_endpoint",
				"resourceVersion":37,
				"resourceName":"custom_http_endpoint_execute",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@s",
			"id":"_kTmbj",
			"index":13,
			"inputs":{
				"isAsync":false,
				"enableProxy":false,
				"requestTimeoutInSecs":-1,
				"httpMethod":"POST",
				"body":{
					"CommitMode":"Transactional",
					"RetryCount":2,
					"Type":"Full",
					"Objects":{
						"ua:type":"mappedArray",
						"items":{
							"Partition":"{{ n_LKl7q.outputs.result[0].Partition }}",
							"table":"{{ n_LKl7q.outputs.result[0].table }}",
							"database":"{{ n_LKl7q.outputs.result[0].database }}"
						},
						"source":"{{ n_LKl7q.outputs.result }}"
					},
					"MaxParallelism":4
				},
				"connectionType":"DIRECT",
				"sslVerify":false,
				"path":"/",
				"baseUrl":"{{ __ENV__.outputs.pbidataset_refresh_url_delivery }}",
				"responseHeaders":[
					"date",
					"transfer-encoding",
					"x-ms-root-activity-id",
					"x-frame-options",
					"home-cluster-uri",
					"request-redirected",
					"pragma",
					"location",
					null
				],
				"bodySchema":{
					"type":"object",
					"properties":{
						"CommitMode":{
							"type":"string",
							"title":"CommitMode"
						},
						"MaxParallelism":{
							"type":"integer",
							"title":"MaxParallelism"
						},
						"RetryCount":{
							"type":"integer",
							"title":"RetryCount"
						},
						"Type":{
							"type":"string",
							"title":"Type"
						},
						"Objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"database":{
										"type":"string",
										"title":"database"
									},
									"table":{
										"type":"string",
										"title":"table"
									},
									"Partition":{
										"type":"string",
										"title":"Partition"
									}
								},
								"additionalProperties":false
							},
							"title":"Objects"
						}
					},
					"additionalProperties":false
				},
				"responseContentType":"application/json",
				"headersList":[
					{
						"key":"Authorization",
						"value":"Bearer {{ _rqL19.outputs.result.access_token }}"
					}
				],
				"authType":"CUSTOM",
				"requestContentType":"application/json",
				"ignoreTrailingSlashes":false
			},
			"skip":false,
			"subTitle":"Request PBI Dataset refresh",
			"title":"Execute REST request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@s",
			"id":"_DAty3",
			"index":14,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"whileloop1":{
							"type":"number",
							"title":"Whileloop 1"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"whileloop1":5000
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"whileloop1":{
							"type":"number",
							"title":"Whileloop 1"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Whileloop1",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":0,
				"resourceName":"loop_while",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@s",
			"id":"_oEhdn",
			"index":15,
			"inputs":{
				"condition":{
					"filters":[
						{
							"property":"{{ n_uMRn9.outputs.processingFinished }}",
							"filter":{
								"operator":"NOT_EQUAL",
								"value":"true"
							}
						},
						{
							"property":"{{ _DAty3.outputs.whileloop1 }}",
							"filter":{
								"operator":"GT",
								"value":"0"
							}
						}
					],
					"operator":"AND"
				},
				"captureIterations":true
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"While loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":66,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_oEhdn@n_nCiyP@_bi1v1-1@s@l",
			"id":"n_BC05g",
			"index":16,
			"inputs":{
				"code":"Thread.sleep(300000)",
				"compile_static":false,
				"captureStdOutput":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"delay",
				"resourceVersion":32,
				"resourceName":"delay_for",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_oEhdn@n_nCiyP@_bi1v1-1@s@l",
			"id":"_0G8fn",
			"index":17,
			"inputs":{
				"duration":5,
				"unit":"MINUTES"
			},
			"skip":false,
			"subTitle":"Delay",
			"title":"Set delay duration",
			"type":"DELAY"
		},
		{
			"context":{
				"appName":"custom_http_endpoint",
				"resourceVersion":6,
				"resourceName":"custom_http_endpoint_execute_multipart",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_oEhdn@n_nCiyP@_bi1v1-1@s@l",
			"id":"_elQrM",
			"index":18,
			"inputs":{
				"isAsync":false,
				"enableProxy":false,
				"requestTimeoutInSecs":-1,
				"httpMethod":"POST",
				"body":{
					"grant_type":"client_credentials",
					"scope":"https://analysis.windows.net/powerbi/api/.default",
					"client_secret":"{{ _9UV8d.outputs.decodedText }}",
					"client_id":"{{ n_LXt0d.outputs.decodedText }}"
				},
				"connectionType":"DIRECT",
				"sslVerify":false,
				"responseSchema":{
					"type":"object",
					"properties":{
						"token_type":{
							"type":"string",
							"title":"token_type"
						},
						"expires_in":{
							"type":"integer",
							"title":"expires_in"
						},
						"ext_expires_in":{
							"type":"integer",
							"title":"ext_expires_in"
						},
						"access_token":{
							"type":"string",
							"title":"access_token"
						}
					},
					"additionalProperties":false
				},
				"path":"/{{ __ENV__.outputs.tenantId }}/oauth2/v2.0/token",
				"baseUrl":"https://login.microsoftonline.com",
				"bodySchema":{
					"type":"object",
					"properties":{
						"client_id":{
							"type":"string",
							"title":"client_id"
						},
						"client_secret":{
							"type":"string",
							"title":"client_secret"
						},
						"grant_type":{
							"type":"string",
							"title":"grant_type"
						},
						"scope":{
							"type":"string",
							"title":"Scope"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"responseContentType":"application/json",
				"headersList":[],
				"authType":"CUSTOM",
				"requestContentType":"application/x-www-form-urlencoded",
				"ignoreTrailingSlashes":false
			},
			"skip":false,
			"subTitle":"Authorization",
			"title":"Execute REST multipart request",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"custom_http_endpoint",
				"resourceVersion":33,
				"resourceName":"custom_http_endpoint_execute",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_oEhdn@n_nCiyP@_bi1v1-1@s@l",
			"id":"_O1gR8",
			"index":19,
			"inputs":{
				"isAsync":false,
				"enableProxy":false,
				"requestTimeoutInSecs":-1,
				"httpMethod":"GET",
				"connectionType":"DIRECT",
				"sslVerify":false,
				"path":"/",
				"responseSchema":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"startTime":{
							"type":"string",
							"title":"startTime"
						},
						"endTime":{
							"type":"string",
							"title":"endTime"
						},
						"type":{
							"type":"string",
							"title":"type"
						},
						"commitMode":{
							"type":"string",
							"title":"commitMode"
						},
						"status":{
							"type":"string",
							"title":"status"
						},
						"extendedStatus":{
							"type":"string",
							"title":"extendedStatus"
						},
						"currentRefreshType":{
							"type":"string",
							"title":"currentRefreshType"
						},
						"numberOfAttempts":{
							"type":"integer",
							"title":"numberOfAttempts"
						},
						"objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"table":{
										"type":"string",
										"title":"table"
									},
									"partition":{
										"type":"string",
										"title":"partition"
									},
									"status":{
										"type":"string",
										"title":"status"
									}
								},
								"additionalProperties":false
							},
							"title":"objects"
						},
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"message":{
										"type":"string",
										"title":"message"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"code":{
										"type":"string",
										"title":"code"
									},
									"location":{
										"type":"object",
										"properties":{
											"StartLine":{
												"type":"integer",
												"title":"StartLine"
											},
											"StartColumn":{
												"type":"integer",
												"title":"StartColumn"
											},
											"EndLine":{
												"type":"integer",
												"title":"EndLine"
											},
											"EndColumn":{
												"type":"integer",
												"title":"EndColumn"
											},
											"LineOffset":{
												"type":"integer",
												"title":"LineOffset"
											},
											"TextLength":{
												"type":"integer",
												"title":"TextLength"
											},
											"RowNumber":{
												"type":"integer",
												"title":"RowNumber"
											},
											"SourceObject":{
												"type":"object",
												"properties":{
													"Table":{
														"type":"string",
														"title":"Table"
													},
													"Partition":{
														"type":"string",
														"title":"Partition"
													},
													"Column":{
														"type":"string",
														"title":"Column"
													},
													"Measure":{
														"type":"string",
														"title":"Measure"
													},
													"Role":{
														"type":"string",
														"title":"Role"
													}
												},
												"title":"SourceObject",
												"additionalProperties":false
											}
										},
										"title":"location",
										"additionalProperties":false
									}
								},
								"additionalProperties":false
							},
							"title":"messages"
						},
						"refreshAttempts":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"attemptId":{
										"type":"integer",
										"title":"attemptId"
									},
									"startTime":{
										"type":"string",
										"title":"startTime"
									},
									"endTime":{
										"type":"string",
										"title":"endTime"
									},
									"type":{
										"type":"integer",
										"title":"type"
									},
									"serviceExceptionJson":{
										"type":"string",
										"title":"serviceExceptionJson"
									}
								},
								"additionalProperties":false
							},
							"title":"refreshAttempts"
						}
					}
				},
				"baseUrl":"{{ _kTmbj.outputs.headers.location[0] }}",
				"httpVersion":"HTTP_2",
				"responseContentType":"application/json",
				"headersList":[
					{
						"key":"Authorization",
						"value":"Bearer {{ _elQrM.outputs.result.access_token }}"
					}
				],
				"authType":"CUSTOM",
				"requestContentType":"application/json",
				"ignoreTrailingSlashes":false,
				"certificateType":"CERT_STRING"
			},
			"skip":false,
			"subTitle":"Get PBI Dataset refresh status",
			"title":"Execute REST request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":56,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_oEhdn@n_nCiyP@_bi1v1-1@s@l",
			"id":"n_GuFti",
			"index":20,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"code":{
											"type":"string",
											"title":"code"
										},
										"message":{
											"type":"string",
											"title":"message"
										},
										"type":{
											"type":"string",
											"title":"type"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray",
					"source":"{{ _O1gR8.outputs.result.messages }}",
					"items":{
						"code":"{{ _O1gR8.outputs.result.messages[0].code }}",
						"message":"{{ _O1gR8.outputs.result.messages[0].message }}",
						"type":"{{ _O1gR8.outputs.result.messages[0].type }}"
					}
				},
				"ua:title":"processMessage",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"processMessage",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"code":{
										"type":"string",
										"title":"code"
									},
									"message":{
										"type":"string",
										"title":"message"
									},
									"type":{
										"type":"string",
										"title":"type"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"processMessage",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_oEhdn@n_nCiyP@_bi1v1-1@s@l",
			"id":"_ZMYmr",
			"index":21,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"Case: in progress",
							"conditions":{
								"filters":[
									{
										"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
										"filter":{
											"operator":"EQUAL",
											"value":"InProgress"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"Case: not started",
							"conditions":{
								"filters":[
									{
										"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
										"filter":{
											"operator":"EQUAL",
											"value":"NotStarted"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"Case: success",
							"conditions":{
								"filters":[
									{
										"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
										"filter":{
											"operator":"EQUAL",
											"value":"Completed"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"4",
						"inputs":{
							"name":"Case : failed",
							"conditions":{
								"filters":[
									{
										"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
										"filter":{
											"operator":"EQUAL",
											"value":"Failed"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@1",
			"id":"_ZMYmr@1",
			"index":22,
			"inputs":{
				"name":"Case: in progress",
				"conditions":{
					"filters":[
						{
							"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
							"filter":{
								"operator":"EQUAL",
								"value":"InProgress"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Case: in progress",
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@2",
			"id":"_ZMYmr@2",
			"index":23,
			"inputs":{
				"name":"Case: not started",
				"conditions":{
					"filters":[
						{
							"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
							"filter":{
								"operator":"EQUAL",
								"value":"NotStarted"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Case: not started",
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@3",
			"id":"_ZMYmr@3",
			"index":24,
			"inputs":{
				"name":"Case: success",
				"conditions":{
					"filters":[
						{
							"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
							"filter":{
								"operator":"EQUAL",
								"value":"Completed"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Case: success",
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@3",
			"id":"_MDoLA",
			"index":25,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_uMRn9.outputs.processingFinished }}",
						"value":true
					}
				]
			},
			"skip":false,
			"subTitle":"Set processingFinished variable to true",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@3",
			"id":"_yVa2Y",
			"index":26,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_uMRn9.outputs.processingWasSuccessful }}",
						"value":true
					}
				]
			},
			"skip":false,
			"subTitle":"Set processingWasSuccessful to true",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@4",
			"id":"_ZMYmr@4",
			"index":27,
			"inputs":{
				"name":"Case : failed",
				"conditions":{
					"filters":[
						{
							"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
							"filter":{
								"operator":"EQUAL",
								"value":"Failed"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Case : failed",
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@4",
			"id":"_1mdiA",
			"index":28,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_uMRn9.outputs.processingFinished }}",
						"value":true
					}
				]
			},
			"skip":false,
			"subTitle":"Set processingFinished variable to true",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@4",
			"id":"_2g3Rh",
			"index":29,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_uMRn9.outputs.processingWasSuccessful }}",
						"value":false
					}
				]
			},
			"skip":false,
			"subTitle":"Set processingWasSuccessful to false",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@default",
			"id":"_SliyU",
			"index":30,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_uMRn9.outputs.processingFinished }}",
						"value":true
					}
				]
			},
			"skip":false,
			"subTitle":"Set processingFinished to true after unknown status",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ZMYmr@_oEhdn@n_nCiyP@_bi1v1-1@s@l@default",
			"id":"_C4Rl3",
			"index":31,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_uMRn9.outputs.processingWasSuccessful }}",
						"value":false
					}
				]
			},
			"skip":false,
			"subTitle":"Set processingWasSuccessful to false",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_oEhdn@n_nCiyP@_bi1v1-1@s@l",
			"id":"_1gAmi",
			"index":32,
			"inputs":{
				"variables":[
					{
						"source":"{{ _DAty3.outputs.whileloop1 }}",
						"value":"=({{ _DAty3.outputs.whileloop1 }}-1)"
					}
				]
			},
			"skip":false,
			"subTitle":"Update Whileloop1",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":0,
				"resourceName":"loop_for_each",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@s",
			"id":"_QDycD",
			"index":33,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_GuFti.outputs.items }}",
				"captureIterations":true
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_QDycD@n_nCiyP@_bi1v1-1@s@l",
			"id":"_L2kjN",
			"index":34,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_uMRn9.outputs.errorMessage }}",
						"value":"=IF({{ n_uMRn9.outputs.errorMessage }}=\"\", {{ _QDycD.outputs.item.message }}, {{ n_uMRn9.outputs.errorMessage }} & \",\" & {{ _QDycD.outputs.item.message }})"
					}
				]
			},
			"skip":false,
			"subTitle":"update error message",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":32,
				"resourceName":"if_else_condition",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@s",
			"id":"_YhpLP",
			"index":35,
			"inputs":{
				"filters":[
					{
						"property":"{{ _O1gR8.outputs.result.extendedStatus }}",
						"filter":{
							"operator":"EQUAL",
							"value":"Completed"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd62bba7330557a04b16f",
				"resourceName":"sqlserver_execute_stored_procedure",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YhpLP@n_nCiyP@_bi1v1-1@s@y",
			"id":"_JhWJE",
			"index":36,
			"inputs":{
				"objectSourceResourceName":"sqlserver_fetch_stored_procedure_metadata",
				"record":{
					"ENDTIME":"{{ n_SfvVU.outputs.current_time }}",
					"PROCESSSTATUS":"SUCCESS",
					"RUNID":"{{ n_SfvVU.outputs.logicAppRunID }}",
					"MODEL":"{{ __ENV__.outputs.datasetname_delivery }}",
					"PROCESSTYPE":"{{ _O1gR8.outputs.result.type }}",
					"PROCESSERRORMESSAGE":"{{ n_uMRn9.outputs.errorMessage }}",
					"PROCESSREQUEST":"{{ n_bq1nF.outputs.result_1[0].ProcessList }}"
				},
				"objectId":"USP_INSERT_SEMANTIC_MODEL_PROCESS_LOGICAPP_STATUS_LOG"
			},
			"skip":false,
			"subTitle":"Microsoft SQL Server",
			"title":"Execute stored procedure",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd75924bb8e6ce4bc49f6",
				"resourceName":"sqlserver_execute_sql",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YhpLP@n_nCiyP@_bi1v1-1@s@y",
			"id":"_wdBa9",
			"index":37,
			"inputs":{
				"performAsync":false,
				"objectSourceResourceName":"sqlserver_execute_sql_metadata",
				"response_schema":{
					"type":"object",
					"properties":{
						"MAIL_TO":{
							"type":"string",
							"title":"MAIL TO"
						},
						"NOTIFICATION":{
							"type":"string",
							"title":"NOTIFICATION"
						},
						"NOTIFICATION_SUBJECT":{
							"type":"string",
							"title":"NOTIFICATION SUBJECT"
						},
						"ETL_START_DATE":{
							"type":"string",
							"title":"ETL START DATE"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"sql":"SELECT\r\n    NG.NOTIFICATION_SUBJECT,\r\n    NG.NOTIFICATION,\r\n    CONVERT(VARCHAR, NG.ETL_START_DATE) AS ETL_START_DATE,\r\n\r\n    -- Mail To\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'TO'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_TO,\r\n\r\n    -- Mail CC\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'CC'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_CC,\r\n\r\n    -- Mail BCC\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'BCC'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_BCC\r\n\r\nFROM [config].[NG_ANALYTICS_EMAIL_NOTIFICATION_CONGIFURATION] NG\r\nWHERE NG.NOTIFICATION_ID = {{ __ENV__.outputs.SuccessNotificationIDValue_delivery }}\r\n  AND NG.IS_ACTIVE = 1;\r\n"
			},
			"skip":false,
			"subTitle":"Microsoft SQL Server",
			"title":"Execute a SQL statement",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"smtp",
				"resourceVersion":193,
				"connectionId":"68bc05f02207e44db12109d5",
				"resourceName":"smtp_send_email",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YhpLP@n_nCiyP@_bi1v1-1@s@y",
			"id":"_Sv3bB",
			"index":38,
			"inputs":{
				"subject":"{{ _wdBa9.outputs.rows[0].NOTIFICATION_SUBJECT }}",
				"body":"Hi Team, \n\n{{ _wdBa9.outputs.rows[0].NOTIFICATION }} refresh completed successfully and the data available in BI for the date as of {{ _wdBa9.outputs.rows[0].ETL_START_DATE }} \n\nETL Started Time : {{ _wdBa9.outputs.rows[0].ETL_START_DATE }}\n{{ _wdBa9.outputs.rows[0].NOTIFICATION }} Dataset Refresh Completion Time :  {{ n_SfvVU.outputs.currenttime }}\n\nThanks",
				"toEmail":"{{ _wdBa9.outputs.rows[0].MAIL_TO }}",
				"fromEmail":"notificationadmintest@virtusa.com"
			},
			"skip":false,
			"subTitle":"SMTP",
			"title":"Send email",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd62bba7330557a04b16f",
				"resourceName":"sqlserver_execute_stored_procedure",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YhpLP@n_nCiyP@_bi1v1-1@s@n",
			"id":"_OgXoo",
			"index":39,
			"inputs":{
				"objectSourceResourceName":"sqlserver_fetch_stored_procedure_metadata",
				"record":{
					"ENDTIME":"{{ n_SfvVU.outputs.current_time }}",
					"RUNID":"{{ n_SfvVU.outputs.logicAppRunID }}",
					"PROCESSSTATUS":"FAILED",
					"MODEL":"{{ __ENV__.outputs.datasetname_finance }}",
					"PROCESSTYPE":"{{ _O1gR8.outputs.result.type }}",
					"PROCESSERRORMESSAGE":"=IF({{ n_uMRn9.outputs.errorMessage }}<>\"\", {{ n_uMRn9.outputs.errorMessage }}, \"\")",
					"PROCESSREQUEST":"{{ n_bq1nF.outputs.result_1[0].ProcessList }}"
				},
				"objectId":"USP_INSERT_SEMANTIC_MODEL_PROCESS_LOGICAPP_STATUS_LOG"
			},
			"skip":false,
			"subTitle":"Microsoft SQL Server",
			"title":"Execute stored procedure",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd75924bb8e6ce4bc49f6",
				"resourceName":"sqlserver_execute_sql",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YhpLP@n_nCiyP@_bi1v1-1@s@n",
			"id":"_SxOTY",
			"index":40,
			"inputs":{
				"performAsync":false,
				"objectSourceResourceName":"sqlserver_execute_sql_metadata",
				"response_schema":{
					"type":"object",
					"properties":{
						"MAIL_TO":{
							"type":"string",
							"title":"MAIL TO"
						},
						"NOTIFICATION":{
							"type":"string",
							"title":"NOTIFICATION"
						},
						"NOTIFICATION_SUBJECT":{
							"type":"string",
							"title":"NOTIFICATION SUBJECT"
						},
						"ETL_START_DATE":{
							"type":"string",
							"title":"ETL START DATE"
						},
						"MAIL_CC":{
							"type":"string",
							"title":"MAIL CC"
						},
						"MAIL_BCC":{
							"type":"string",
							"title":"MAIL BCC"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"sql":"SELECT\r\n    NG.NOTIFICATION_SUBJECT,\r\n    NG.NOTIFICATION,\r\n    CONVERT(VARCHAR, NG.ETL_START_DATE) AS ETL_START_DATE,\r\n\r\n    -- Mail To\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'TO'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_TO,\r\n\r\n    -- Mail CC\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'CC'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_CC,\r\n\r\n    -- Mail BCC\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'BCC'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_BCC\r\n\r\nFROM [config].[NG_ANALYTICS_EMAIL_NOTIFICATION_CONGIFURATION] NG\r\nWHERE NG.NOTIFICATION_ID = {{ __ENV__.outputs.FailureNotificationIDValue_delivery }}\r\n  AND NG.IS_ACTIVE = 1;\r\n"
			},
			"skip":false,
			"subTitle":"Microsoft SQL Server",
			"title":"Execute a SQL statement",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[]
			},
			"context":{
				"appName":"smtp",
				"resourceVersion":198,
				"connectionId":"68bc05f02207e44db12109d5",
				"resourceName":"smtp_send_email",
				"type":"APPLICATION",
				"scopeNodeId":"n_nCiyP"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YhpLP@n_nCiyP@_bi1v1-1@s@n",
			"id":"_4srCA",
			"index":41,
			"inputs":{
				"cc":"{{ _SxOTY.outputs.rows[0].MAIL_CC }}",
				"bcc":"{{ _SxOTY.outputs.rows[0].MAIL_BCC }}",
				"subject":"{{ _SxOTY.outputs.rows[0].NOTIFICATION_SUBJECT }}",
				"body":"Hi Team, \n\n{{ _SxOTY.outputs.rows[0].NOTIFICATION }} refresh failed for the ETL started as of {{ _SxOTY.outputs.rows[0].ETL_START_DATE }}\n\nETL Started Time : {{ _SxOTY.outputs.rows[0].ETL_START_DATE }}\nError Message : {{ n_uMRn9.outputs.errorMessage }}\n\nThanks",
				"toEmail":"{{ _SxOTY.outputs.rows[0].MAIL_TO }}",
				"fromEmail":"notificationadmintest@virtusa.com"
			},
			"skip":false,
			"subTitle":"SMTP",
			"title":"Send email",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":37,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bi1v1-1",
			"id":"n_X8X0p",
			"index":42,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_undefined",
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd62bba7330557a04b16f",
				"resourceName":"sqlserver_execute_stored_procedure",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@error",
			"id":"_bi76K",
			"index":43,
			"inputs":{
				"objectSourceResourceName":"sqlserver_fetch_stored_procedure_metadata",
				"record":{
					"ENDTIME":"{{ n_SfvVU.outputs.current_time }}",
					"RUNID":"{{ n_SfvVU.outputs.logicAppRunID }}",
					"PROCESSSTATUS":"FAILED",
					"PROCESSTYPE":"N/A",
					"MODEL":"{{ __ENV__.outputs.datasetname_delivery }}",
					"PROCESSERRORMESSAGE":"=IF({{ n_uMRn9.outputs.errorMessage }}<>\"\", {{ n_uMRn9.outputs.errorMessage }}, \"\")",
					"PROCESSREQUEST":"{{ n_bq1nF.outputs.result_1[0].ProcessList }}"
				},
				"objectId":"USP_INSERT_SEMANTIC_MODEL_PROCESS_LOGICAPP_STATUS_LOG"
			},
			"skip":false,
			"subTitle":"Microsoft SQL Server",
			"title":"Execute stored procedure",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"sqlserver",
				"resourceVersion":848,
				"connectionId":"68bbd75924bb8e6ce4bc49f6",
				"resourceName":"sqlserver_execute_sql",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@error",
			"id":"_eeocw",
			"index":44,
			"inputs":{
				"performAsync":false,
				"objectSourceResourceName":"sqlserver_execute_sql_metadata",
				"response_schema":{
					"type":"object",
					"properties":{
						"MAIL_TO":{
							"type":"string",
							"title":"MAIL TO"
						},
						"NOTIFICATION":{
							"type":"string",
							"title":"NOTIFICATION"
						},
						"NOTIFICATION_SUBJECT":{
							"type":"string",
							"title":"NOTIFICATION SUBJECT"
						},
						"ETL_START_DATE":{
							"type":"string",
							"title":"ETL START DATE"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"sql":"SELECT\r\n    NG.NOTIFICATION_SUBJECT,\r\n    NG.NOTIFICATION,\r\n    CONVERT(VARCHAR, NG.ETL_START_DATE) AS ETL_START_DATE,\r\n\r\n    -- Mail To\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'TO'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_TO,\r\n\r\n    -- Mail CC\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'CC'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_CC,\r\n\r\n    -- Mail BCC\r\n    (\r\n        SELECT STUFF(\r\n            (\r\n                SELECT DISTINCT ',' + RC.TO_RECIPIENT\r\n                FROM config.EMAIL_NOTIFICATION_RECIPIENT_CONFIGURATION RC\r\n                WHERE RC.RECIPIENT_TYPE = 'BCC'\r\n                  AND RC.NOTIFICATION_ID = NG.NOTIFICATION_ID\r\n                  AND RC.IS_ACTIVE = NG.IS_ACTIVE\r\n                FOR XML PATH(''), TYPE\r\n            ).value('.', 'NVARCHAR(MAX)')\r\n        ,1,1,'')\r\n    ) AS MAIL_BCC\r\n\r\nFROM [config].[NG_ANALYTICS_EMAIL_NOTIFICATION_CONGIFURATION] NG\r\nWHERE NG.NOTIFICATION_ID = {{ __ENV__.outputs.FailureNotificationIDValue_delivery }}\r\n  AND NG.IS_ACTIVE = 1;\r\n"
			},
			"skip":false,
			"subTitle":"Microsoft SQL Server",
			"title":"Execute a SQL statement",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[]
			},
			"context":{
				"appName":"smtp",
				"resourceVersion":198,
				"connectionId":"68bc05f02207e44db12109d5",
				"resourceName":"smtp_send_email",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_nCiyP@_bi1v1-1@error",
			"id":"_t0edP",
			"index":45,
			"inputs":{
				"subject":"{{ _eeocw.outputs.rows[0].NOTIFICATION_SUBJECT }}",
				"body":"Hi Team, \n\n{{ _eeocw.outputs.rows[0].NOTIFICATION }} refresh has been failed for the ETL started as of {{ _eeocw.outputs.rows[0].ETL_START_DATE }}\n\nETL Started Time : {{ _eeocw.outputs.rows[0].ETL_START_DATE }}\nError Message : Logic App Activity Failed\n\nThanks",
				"toEmail":"{{ _eeocw.outputs.rows[0].MAIL_TO }}",
				"fromEmail":"notificationadmintest@virtusa.com"
			},
			"skip":false,
			"subTitle":"SMTP",
			"title":"Send email",
			"type":"ACTION"
		}
	],
	"ownerUserId":39713,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":90
}