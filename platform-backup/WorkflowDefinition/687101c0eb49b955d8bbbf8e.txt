{
	"appsUsed":[
		
	],
	"createdTime":1752842410006,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243652779,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed8423e6682b9a51edb3",
		"status":"DEPLOYED",
		"version":32,
		"workflowVersion":89
	},
	"edges":[
		{
			"fromNodeId":"n_ilaDX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vQYkh",
			"type":"next"
		},
		{
			"fromNodeId":"n_vQYkh",
			"priority":0,
			"skip":false,
			"toNodeId":"n_pV1bn",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"687101c0eb49b955d8bbbf8e",
	"lastModifiedBy":-1,
	"lcName":"text to workflow v2 | batch input actions",
	"modifiedTime":1759371970493,
	"name":"Text to Workflow v2 | Batch Input Actions",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":445,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_RYh6p-1",
			"id":"n_ilaDX",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"dynamicSchemas":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"context":{
										"type":"object",
										"properties":{
											"appName":{
												"type":"string",
												"title":"appName"
											},
											"resourceName":{
												"type":"string",
												"title":"resourceName"
											},
											"type":{
												"type":"string",
												"title":"Type"
											}
										},
										"title":"context",
										"additionalProperties":false,
										"required":[]
									},
									"debug":{
										"type":"boolean",
										"title":"debug"
									},
									"dirty":{
										"type":"boolean",
										"title":"dirty"
									},
									"fallbackMode":{
										"type":"string",
										"title":"fallbackMode"
									},
									"groupId":{
										"type":"string",
										"title":"groupId"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"inputs":{
										"type":"object",
										"title":"inputs"
									},
									"skip":{
										"type":"boolean",
										"title":"skip"
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"trigger":{
										"type":"object",
										"properties":{
											"type":{
												"type":"string",
												"title":"type"
											}
										},
										"title":"trigger",
										"additionalProperties":false
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"subTitle":{
										"type":"string",
										"title":"subTitle"
									},
									"instructions":{
										"type":"string",
										"title":"Instructions"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"dynamicSchemas"
						},
						"hasCycle":{
							"type":"boolean",
							"title":"Has Cycle"
						},
						"nonDynamicSchemas":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"context":{
										"type":"object",
										"properties":{
											"appName":{
												"type":"string",
												"title":"appName"
											},
											"resourceName":{
												"type":"string",
												"title":"resourceName"
											},
											"type":{
												"type":"string",
												"title":"Type"
											}
										},
										"title":"context",
										"additionalProperties":false,
										"required":[]
									},
									"debug":{
										"type":"boolean",
										"title":"debug"
									},
									"dirty":{
										"type":"boolean",
										"title":"dirty"
									},
									"fallbackMode":{
										"type":"string",
										"title":"fallbackMode"
									},
									"groupId":{
										"type":"string",
										"title":"groupId"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"inputs":{
										"type":"object",
										"properties":{},
										"title":"inputs",
										"additionalProperties":false,
										"required":[]
									},
									"skip":{
										"type":"boolean",
										"title":"skip"
									},
									"subTitle":{
										"type":"string",
										"title":"subTitle"
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"hidden":{
										"type":"boolean",
										"title":"hidden"
									},
									"trigger":{
										"type":"object",
										"properties":{
											"type":{
												"type":"string",
												"title":"Type"
											}
										},
										"additionalProperties":false,
										"title":"Trigger",
										"required":[]
									},
									"instructions":{
										"type":"string",
										"title":"Instructions"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"nonDynamicSchemas"
						}
					},
					"additionalProperties":false,
					"required":[
						"hasCycle"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"workflowGraph":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Graph"
						},
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"Id"
									},
									"instructions":{
										"type":"string",
										"title":"Instructions"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Nodes"
						}
					},
					"additionalProperties":false,
					"required":[
						"workflowGraph"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.workflow_graph.edges.items.fromNodeId",
					"root.parameters.workflow_graph.edges.items.priority",
					"root.parameters.workflow_graph.edges.items.skip",
					"root.parameters.workflow_graph.edges.items.toNodeId",
					"root.parameters.workflow_graph.edges.items.type",
					"root.parameters.workflow_graph.edges.items.name",
					"root.parameters.workflow_graph.nodes.items.context.appName",
					"root.parameters.workflow_graph.nodes.items.context.resourceName",
					"root.parameters.workflow_graph.nodes.items.debug",
					"root.parameters.workflow_graph.nodes.items.dirty",
					"root.parameters.workflow_graph.nodes.items.fallbackMode",
					"root.parameters.workflow_graph.nodes.items.groupId",
					"root.parameters.workflow_graph.nodes.items.id",
					"root.parameters.workflow_graph.nodes.items.inputs.branches.items.id",
					"root.parameters.workflow_graph.nodes.items.inputs.branches.items.inputs.name",
					"root.parameters.workflow_graph.nodes.items.inputs.name",
					"root.parameters.workflow_graph.nodes.items.skip",
					"root.parameters.workflow_graph.nodes.items.title",
					"root.parameters.workflow_graph.nodes.items.trigger.type",
					"root.parameters.workflow_graph.nodes.items.type",
					"root.parameters.workflow_graph.nodes.items.subTitle",
					"root.parameters.workflow_graph.nodes.items.hidden"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_RYh6p-1",
			"id":"n_vQYkh",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"dynamicSchemas":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"context":{
										"type":"object",
										"properties":{
											"appName":{
												"type":"string",
												"title":"appName"
											},
											"resourceName":{
												"type":"string",
												"title":"resourceName"
											},
											"type":{
												"type":"string",
												"title":"Type"
											}
										},
										"title":"context",
										"additionalProperties":false,
										"required":[
											"type"
										]
									},
									"debug":{
										"type":"boolean",
										"title":"debug"
									},
									"dirty":{
										"type":"boolean",
										"title":"dirty"
									},
									"fallbackMode":{
										"type":"string",
										"title":"fallbackMode"
									},
									"groupId":{
										"type":"string",
										"title":"groupId"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"inputs":{
										"type":"object",
										"title":"inputs"
									},
									"skip":{
										"type":"boolean",
										"title":"skip"
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"trigger":{
										"type":"object",
										"properties":{
											"type":{
												"type":"string",
												"title":"type"
											}
										},
										"title":"trigger",
										"additionalProperties":false
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"subTitle":{
										"type":"string",
										"title":"subTitle"
									},
									"instructions":{
										"type":"string",
										"title":"Instructions"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"dynamicSchemas"
						},
						"hasCycle":{
							"type":"string",
							"title":"Has Cycle"
						},
						"nonDynamicSchemas":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"context":{
										"type":"object",
										"properties":{
											"appName":{
												"type":"string",
												"title":"appName"
											},
											"resourceName":{
												"type":"string",
												"title":"resourceName"
											},
											"type":{
												"type":"string",
												"title":"Type"
											}
										},
										"title":"context",
										"additionalProperties":false,
										"required":[
											"type"
										]
									},
									"debug":{
										"type":"boolean",
										"title":"debug"
									},
									"dirty":{
										"type":"boolean",
										"title":"dirty"
									},
									"fallbackMode":{
										"type":"string",
										"title":"fallbackMode"
									},
									"groupId":{
										"type":"string",
										"title":"groupId"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"inputs":{
										"type":"object",
										"properties":{},
										"title":"inputs",
										"additionalProperties":false,
										"required":[]
									},
									"skip":{
										"type":"boolean",
										"title":"skip"
									},
									"subTitle":{
										"type":"string",
										"title":"subTitle"
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"hidden":{
										"type":"boolean",
										"title":"hidden"
									},
									"trigger":{
										"type":"object",
										"properties":{
											"type":{
												"type":"string",
												"title":"Type"
											}
										},
										"additionalProperties":false,
										"title":"Trigger",
										"required":[]
									},
									"instructions":{
										"type":"string",
										"title":"Instructions"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"nonDynamicSchemas"
						}
					},
					"additionalProperties":false,
					"required":[
						"hasCycle"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"workflowGraph":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Graph"
						},
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"instructions":{
										"type":"string",
										"title":"Instructions"
									},
									"id":{
										"type":"string",
										"title":"Id"
									}
								},
								"additionalProperties":false,
								"required":[
									"instructions",
									"id"
								]
							},
							"title":"Nodes"
						}
					},
					"additionalProperties":false,
					"required":[
						"workflowGraph",
						"nodes"
					]
				},
				"compile_static":false,
				"code":"// ------------------------------------------------------------\n// inputs:\n//   workflowGraph  – a map with .nodes and .edges\n//   nodes          – a list of { id, instructions }\n// ------------------------------------------------------------\n\ndef nodesList        = workflowGraph.nodes ?: []\ndef edgesList        = workflowGraph.edges ?: []\ndef instructionNodes = nodes ?: []   // list of { id, instructions }\n\n// 1) Build lookup maps\ndef id2Node = nodesList.collectEntries { node -> [(node.id): node] }\ndef id2Instructions = instructionNodes.collectEntries { instr -> [(instr.id): instr.instructions] }\n\n// 2) Build adjacency list + in-degree\ndef adjacency = [:].withDefault { [] }\ndef inDegree  = [:].withDefault { 0 }\nnodesList.each { n -> inDegree[n.id] = 0 }\nedgesList.each { e ->\n    adjacency[e.fromNodeId] << e.toNodeId\n    inDegree[e.toNodeId] = (inDegree[e.toNodeId] ?: 0) + 1\n}\n\n// 3) Kahn’s algorithm → topoOrder\ndef queue     = new LinkedList<String>()\ninDegree.each { id, deg -> if (deg == 0) queue.add(id) }\ndef topoOrder = []\nwhile (!queue.isEmpty()) {\n    def curr = queue.poll()\n    topoOrder << curr\n    adjacency[curr].each { neigh ->\n        inDegree[neigh] = (inDegree[neigh] ?: 0) - 1\n        if (inDegree[neigh] == 0) queue.add(neigh)\n    }\n}\n\n// 4) Detect a cycle\ndef hasCycle = (topoOrder.size() < nodesList.size())\n\n// 5) Attach instructions to _every_ node up front\ntopoOrder.each { nodeId ->\n    def node = id2Node[nodeId]\n    if (!node) return\n    node.instructions = id2Instructions[nodeId] ?: node.instructions\n}\ndef dynamicSchemasList    = []\ndef nonDynamicSchemasList = []\ndef dynamicAppNames       = []  \n\ntopoOrder.each { nodeId ->\n    def node = id2Node[nodeId]\n    if (!node) return\n\n    def appName      = node?.context?.appName\n    def resourceName = node?.context?.resourceName\n\n    boolean isDynamic\n\n    if (appName == \"callables\") {\n        isDynamic = (resourceName == \"callables_from_automation\")\n    } \n    else if (appName == \"variable_by_unifyapps\"){\n        isDynamic = (resourceName == \"variable_by_unifyapps_create_variables\")\n    } else {\n        isDynamic = dynamicAppNames.contains(appName)\n    }\n\n    (isDynamic ? dynamicSchemasList : nonDynamicSchemasList) << node\n}\n\n// 7) Return only the result map\nreturn [\n    dynamicSchemas    : dynamicSchemasList,\n    nonDynamicSchemas : nonDynamicSchemasList,\n    hasCycle          : hasCycle\n]",
				"parameters":{
					"workflowGraph":"{{ n_ilaDX.outputs.workflowGraph }}",
					"nodes":{
						"source":"{{ n_ilaDX.outputs.nodes }}",
						"ua:type":"mappedArray",
						"items":{
							"instructions":"{{ n_ilaDX.outputs.nodes[0].instructions }}",
							"id":"{{ n_ilaDX.outputs.nodes[0].id }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":455,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_RYh6p-1",
			"id":"n_pV1bn",
			"index":3,
			"inputs":{
				"result":{
					"dynamicSchemas":{
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].id }}",
							"context":{
								"appName":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].context.appName }}",
								"resourceName":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].context.resourceName }}",
								"type":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].context.type }}"
							},
							"debug":false,
							"dirty":false,
							"fallbackMode":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].fallbackMode }}",
							"groupId":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].groupId }}",
							"inputs":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].inputs }}",
							"skip":false,
							"title":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].title }}",
							"trigger":{
								"type":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].trigger.type }}"
							},
							"type":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].type }}",
							"subTitle":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].subTitle }}",
							"instructions":"{{ n_vQYkh.outputs.result.dynamicSchemas[0].instructions }}"
						},
						"source":"{{ n_vQYkh.outputs.result.dynamicSchemas }}"
					},
					"hasCycle":false,
					"nonDynamicSchemas":{
						"source":"{{ n_vQYkh.outputs.result.nonDynamicSchemas }}",
						"ua:type":"mappedArray",
						"items":{
							"context":{
								"appName":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].context.appName }}",
								"resourceName":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].context.resourceName }}",
								"type":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].context.type }}"
							},
							"debug":false,
							"dirty":false,
							"fallbackMode":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].fallbackMode }}",
							"groupId":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].groupId }}",
							"id":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].id }}",
							"inputs":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].inputs }}",
							"skip":false,
							"subTitle":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].subTitle }}",
							"title":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].title }}",
							"type":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].title }}",
							"hidden":false,
							"trigger":{
								"type":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].trigger.type }}"
							},
							"instructions":"{{ n_vQYkh.outputs.result.nonDynamicSchemas[0].instructions }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":166068,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":90
}