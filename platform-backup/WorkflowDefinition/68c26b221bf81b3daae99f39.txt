{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1757961528767,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243572736,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed345e003e08cdeb2f43",
		"status":"DEPLOYED",
		"version":5,
		"workflowVersion":21
	},
	"edges":[
		{
			"fromNodeId":"n_Hit6S",
			"priority":0,
			"skip":false,
			"toNodeId":"n_s6vVQ",
			"type":"next"
		},
		{
			"fromNodeId":"n_s6vVQ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_5GGHR",
			"type":"next"
		},
		{
			"fromNodeId":"n_5GGHR",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2N28D",
			"type":"next"
		},
		{
			"fromNodeId":"n_2N28D",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Ic9t5",
			"type":"next"
		},
		{
			"fromNodeId":"n_Ic9t5",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ckejl",
			"type":"if"
		},
		{
			"fromNodeId":"n_ckejl",
			"priority":0,
			"skip":false,
			"toNodeId":"_tb1PY",
			"type":"next"
		},
		{
			"fromNodeId":"n_Ic9t5",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_tb1PY",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68c26b221bf81b3daae99f39",
	"lastModifiedBy":-1,
	"lcName":"eval | metrics | calculate derived metric score",
	"modifiedTime":1759371893813,
	"name":"Eval | Metrics | Calculate Derived Metric Score",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":447,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISC3E-1",
			"id":"n_Hit6S",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"score":{
							"type":"number",
							"title":"Score"
						},
						"reason":{
							"type":"string",
							"title":"Reason"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"metricId":{
							"type":"string",
							"title":"Metric Id"
						},
						"testcaseId":{
							"type":"string",
							"title":"Testcase Id"
						},
						"runId":{
							"type":"string",
							"title":"Run Id"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":634,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISC3E-1",
			"id":"n_s6vVQ",
			"index":2,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_runId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Hit6S.outputs.runId }}"
							}
						},
						{
							"property":"properties_testCaseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Hit6S.outputs.testcaseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"test_case_runs",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":634,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISC3E-1",
			"id":"n_5GGHR",
			"index":3,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Hit6S.outputs.metricId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_evaluation_metric",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch Derived Metric",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.base_metrics.items",
					"root.parameters.metricScores.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISC3E-1",
			"id":"n_2N28D",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"canCalculateScore":{
							"type":"boolean",
							"title":"Can Calculate Score"
						},
						"metricIdToScoreMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Metric Id To Score Map"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"base_metrics":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Base Metrics"
						},
						"metricScores":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Metric Scores"
						}
					}
				},
				"code":"def base_metrics = binding.hasVariable('base_metrics') ? base_metrics : []\ndef metricScores = binding.hasVariable('metricScores') ? metricScores : []\n\n// Build metricId -> score map\ndef metricIdToScoreMap = metricScores.collectEntries { [(it.metricId): it.score] }\n\n// Check if all base_metrics exist in the map\ndef canCalculateScore = base_metrics.every { metricIdToScoreMap.containsKey(it) }\n\nreturn [\n    canCalculateScore   : canCalculateScore,\n    metricIdToScoreMap  : canCalculateScore ? metricIdToScoreMap : [:]\n]\n",
				"compile_static":false,
				"parameters":{
					"base_metrics":{
						"source":"{{ n_5GGHR.outputs.properties.metricConfig.base_metrics }}",
						"ua:type":"mappedArray",
						"items":"{{ n_5GGHR.outputs.properties.metricConfig.base_metrics[0] }}"
					},
					"metricScores":{
						"source":"{{ n_s6vVQ.outputs.properties.metricScores }}",
						"ua:type":"mappedArray",
						"items":"{{ n_s6vVQ.outputs.properties.metricScores[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISC3E-1",
			"id":"n_Ic9t5",
			"index":5,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_2N28D.outputs.result.canCalculateScore }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_Ic9t5@_ISC3E-1@y",
			"id":"n_ckejl",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"score":{
							"type":"number",
							"title":"Score"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"metricIdToScoreMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Metric Id To Score Map"
						},
						"formula":{
							"type":"string",
							"title":"Formula"
						}
					}
				},
				"code":"class ExpressionParser {\n    String input\n    int pos = 0\n    Map<String, Double> variables = [:]\n\n    ExpressionParser(String input, Map<String, Double> variables = [:]) {\n        // Remove whitespace for easier parsing\n        this.input = input.replaceAll(/\\s+/, \"\")\n        this.variables = variables\n    }\n\n    double parse() {\n        def value = parseExpression()\n        if (pos < input.length()) {\n            throw new RuntimeException(\"Unexpected character at position $pos: '${input.charAt(pos)}'\")\n        }\n        return value\n    }\n\n    private double parseExpression() {\n        double value = parseTerm()\n        while (pos < input.length()) {\n            char op = input.charAt(pos)\n            if (op == '+' || op == '-') {\n                pos++\n                double term = parseTerm()\n                if (op == '+') value += term else value -= term\n            } else break\n        }\n        return value\n    }\n\n    private double parseTerm() {\n        double value = parseFactor()\n        while (pos < input.length()) {\n            char op = input.charAt(pos)\n            if (op == '*' || op == '/') {\n                pos++\n                double factor = parseFactor()\n                if (op == '*') {\n                    value *= factor\n                } else {\n                    if (factor == 0) throw new RuntimeException(\"Division by zero at position $pos\")\n                    value /= factor\n                }\n            } else break\n        }\n        return value\n    }\n\n    private double parseFactor() {\n        double value = parseUnary()\n        while (pos < input.length() && input.charAt(pos) == '^') {\n            pos++\n            double exponent = parseUnary()\n            value = Math.pow(value, exponent)\n        }\n        return value\n    }\n\n    private double parseUnary() {\n        if (pos < input.length()) {\n            char c = input.charAt(pos)\n            if (c == '+') { pos++; return parseUnary() }\n            if (c == '-') { pos++; return -parseUnary() }\n        }\n        return parsePrimary()\n    }\n\n    private double parsePrimary() {\n        if (pos >= input.length()) throw new RuntimeException(\"Unexpected end of expression\")\n\n        char c = input.charAt(pos)\n\n        if (c == '(') {\n            pos++\n            double value = parseExpression()\n            if (pos >= input.length() || input.charAt(pos) != ')') {\n                throw new RuntimeException(\"Missing closing parenthesis at position $pos\")\n            }\n            pos++\n            return value\n        }\n\n        // Handle <<var>> style placeholders\n        if (c == '<' && pos + 1 < input.length() && input.charAt(pos + 1) == '<') {\n            int startVar = pos + 2\n            int endVar = input.indexOf('>>', startVar)\n            if (endVar == -1) throw new RuntimeException(\"Unclosed variable at $pos\")\n            String varName = input.substring(startVar, endVar).trim()\n            pos = endVar + 2\n            if (!variables.containsKey(varName)) throw new RuntimeException(\"Unknown variable: $varName\")\n            return variables[varName]\n        }\n\n        // Parse numbers\n        int startNum = pos\n        boolean dot = false\n        while (pos < input.length()) {\n            char ch = input.charAt(pos)\n            if (ch >= '0' && ch <= '9') {\n                pos++\n            } else if (ch == '.' && !dot) {\n                dot = true\n                pos++\n            } else break\n        }\n        if (startNum == pos) throw new RuntimeException(\"Unexpected char at $pos: '${input.charAt(pos)}'\")\n        return Double.parseDouble(input.substring(startNum, pos))\n    }\n}\n\n// === Score calculation entrypoint ===\ndef formula = binding.hasVariable('formula') ? formula : \"\"\ndef metricIdToScoreMap = binding.hasVariable('metricIdToScoreMap') ? metricIdToScoreMap : [:]\n\nif (!formula || metricIdToScoreMap.isEmpty()) {\n    return [canCalculateScore: false, score: null]\n}\n\n// Remove leading \"=\" if present\nformula = formula.replaceFirst(/^\\=\\s*/, \"\")\n\ntry {\n    def parser = new ExpressionParser(formula, metricIdToScoreMap.collectEntries { k,v -> [(k): v as Double] })\n    def score = parser.parse()\n    return [canCalculateScore: true, score: score]\n} catch (Exception e) {\n    return [canCalculateScore: false, score: null, error: e.message]\n}\n",
				"compile_static":false,
				"parameters":{
					"metricIdToScoreMap":"{{ n_2N28D.outputs.result.metricIdToScoreMap }}",
					"formula":"=SUBSTITUTE(SUBSTITUTE({{ n_5GGHR.outputs.properties.metricConfig.formula }},\"{\",\"<\"),\"}\",\">\")"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_ISC3E-1",
			"id":"_tb1PY",
			"index":7,
			"inputs":{
				"result":{
					"score":"{{ n_ckejl.outputs.result.score }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":45771,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":22
}