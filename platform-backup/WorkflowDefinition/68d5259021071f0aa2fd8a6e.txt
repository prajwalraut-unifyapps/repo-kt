{
	"appsUsed":[
		
	],
	"createdTime":1758799248278,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_NNfvg",
			"priority":0,
			"skip":false,
			"toNodeId":"n_fa14Z",
			"type":"next"
		},
		{
			"fromNodeId":"n_fa14Z",
			"priority":0,
			"skip":false,
			"toNodeId":"n_kRLxK",
			"type":"next"
		},
		{
			"fromNodeId":"n_kRLxK",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LMCf4",
			"type":"next"
		}
	],
	"id":"68d5259021071f0aa2fd8a6e",
	"lastModifiedBy":155341,
	"lcName":"insights | failure percentage of all automations",
	"modifiedTime":1758803467851,
	"name":"INSIGHTS | Failure percentage of all automations",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":875,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_MdNb4-1",
			"id":"n_NNfvg",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"success":{
							"type":"string",
							"title":"Success"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":860,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_MdNb4-1",
			"id":"n_fa14Z",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"startMillis":{
							"type":"number",
							"title":"Start Millis"
						},
						"endMillis":{
							"type":"number",
							"title":"End Millis"
						}
					}
				},
				"code":"import java.time.*\nimport java.time.temporal.ChronoUnit\n\n// Method 1: Using Java 8 Time API (Recommended)\ndef getTodayTimestamps() {\n    // Get current timezone\n    def zoneId = ZoneId.systemDefault()\n    \n    // Get today's date\n    def today = LocalDate.now(zoneId)\n    \n    // Start of today (00:00:00.000)\n    def startOfDay = today.atStartOfDay(zoneId)\n    def startMillis = startOfDay.toInstant().toEpochMilli()\n    \n    // End of today (23:59:59.999)\n    def endOfDay = today.plusDays(1).atStartOfDay(zoneId).minusNanos(1)\n    def endMillis = endOfDay.toInstant().toEpochMilli()\n    \n    return [\n        startMillis: startMillis,\n        endMillis: endMillis\n    ]\n}\n\n// Method 2: Using Calendar (Legacy approach)\ndef getTodayTimestampsCalendar() {\n    def cal = Calendar.getInstance()\n    \n    // Start of today\n    cal.set(Calendar.HOUR_OF_DAY, 0)\n    cal.set(Calendar.MINUTE, 0)\n    cal.set(Calendar.SECOND, 0)\n    cal.set(Calendar.MILLISECOND, 0)\n    def startMillis = cal.getTimeInMillis()\n    \n    // End of today\n    cal.set(Calendar.HOUR_OF_DAY, 23)\n    cal.set(Calendar.MINUTE, 59)\n    cal.set(Calendar.SECOND, 59)\n    cal.set(Calendar.MILLISECOND, 999)\n    def endMillis = cal.getTimeInMillis()\n    \n    return [\n        startMillis: startMillis,\n        endMillis: endMillis\n    ]\n}\n\n// Method 3: Simplified one-liner approach\ndef getToday() {\n    def today = new Date()\n    today.clearTime() // Sets to 00:00:00\n    \n    def startMillis = today.time\n    def endMillis = today.time + (24 * 60 * 60 * 1000) - 1 // Add 24 hours minus 1 millisecond\n    \n    return [startMillis: startMillis, endMillis: endMillis]\n}\n\n// Usage example for workflow filtering\ndef timestamps = getTodayTimestamps()\n\n// Build filter query\ndef workflowFilter = \"\"\"\n    WHERE workflow_status = 'SUCCESS'\n    AND execution_timestamp >= ${timestamps.startMillis}\n    AND execution_timestamp <= ${timestamps.endMillis}\n\"\"\"\n\n// Or as a map for API filters\ndef filterParams = [\n    status: 'SUCCESS',\n    startTime: timestamps.startMillis,\n    endTime: timestamps.endMillis\n]\n\n// If you need specific timezone (e.g., UTC)\ndef getTodayTimestampsUTC() {\n    def zoneId = ZoneId.of(\"UTC\")\n    def today = LocalDate.now(zoneId)\n    \n    def startMillis = today.atStartOfDay(zoneId).toInstant().toEpochMilli()\n    def endMillis = today.plusDays(1).atStartOfDay(zoneId).minusNanos(1).toInstant().toEpochMilli()\n    \n    return [\n        startMillis: startMillis,\n        endMillis: endMillis\n    ]\n}\n\n// For debugging - print human-readable dates\ndef printTimestamps() {\n    def timestamps = getTodayTimestamps()\n    println \"Start: ${new Date(timestamps.startMillis)} (${timestamps.startMillis})\"\n    println \"End: ${new Date(timestamps.endMillis)} (${timestamps.endMillis})\"\n}\n\n// Compact version for your use case\ndef todayStart = LocalDate.now().atStartOfDay(ZoneId.systemDefault()).toInstant().toEpochMilli()\ndef todayEnd = LocalDate.now().plusDays(1).atStartOfDay(ZoneId.systemDefault()).minusNanos(1).toInstant().toEpochMilli()\n\nreturn [\n    startMillis: todayStart,\n    endMillis: todayEnd\n]",
				"compile_static":false,
				"captureStdOutput":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":866,
				"resourceName":"analytics_by_unifyapps_query_reports",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_MdNb4-1",
			"id":"n_kRLxK",
			"index":3,
			"inputs":{
				"projections":[
					{
						"name":"WORKFLOW_ID",
						"aggregationFunction":"COUNT",
						"alias":"count",
						"includePercentageChange":true
					},
					{
						"name":"WORKFLOW_ID",
						"aggregationFunction":"GROUP",
						"alias":"id",
						"includePercentageChange":false
					}
				],
				"filter":{
					"filters":[
						{
							"property":"STATUS",
							"filter":{
								"operator":"EQUAL",
								"value":"COMPLETED"
							}
						}
					],
					"operator":"AND"
				},
				"entityType":"WORKFLOW_EXECUTION",
				"page":{
					"limit":10
				},
				"timeFilter":{
					"since":"{{ n_fa14Z.outputs.result.startMillis }}",
					"until":"{{ n_fa14Z.outputs.result.endMillis }}"
				},
				"group":"PLATFORM",
				"additionalProjections":[]
			},
			"skip":false,
			"subTitle":"Analytics by UnifyApps",
			"title":"Analytics Query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":892,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_MdNb4-1",
			"id":"n_LMCf4",
			"index":4,
			"inputs":{
				"result":{
					"success":"200"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":155341,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":1
}