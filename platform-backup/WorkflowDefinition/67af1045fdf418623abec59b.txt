{
	"appsUsed":[
		"mysql",
		"storage_by_unifyapps"
	],
	"createdTime":1740110513664,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1758655363505,
		"deployedBy":0,
		"deployedDefinitionId":"68d2f38338757c179b123735",
		"status":"DEPLOYED",
		"version":62,
		"workflowVersion":112
	},
	"edges":[
		{
			"fromNodeId":"vc3fr",
			"priority":0,
			"skip":false,
			"toNodeId":"FCCvW",
			"type":"next"
		},
		{
			"fromNodeId":"FCCvW",
			"priority":0,
			"skip":false,
			"toNodeId":"1WPP3",
			"type":"next"
		},
		{
			"fromNodeId":"1WPP3",
			"priority":0,
			"skip":false,
			"toNodeId":"melDp",
			"type":"next"
		},
		{
			"fromNodeId":"melDp",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"135Gi",
			"type":"if"
		},
		{
			"fromNodeId":"135Gi",
			"priority":0,
			"skip":false,
			"toNodeId":"HaN7G",
			"type":"next"
		},
		{
			"fromNodeId":"melDp",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"HaN7G",
			"type":"next"
		},
		{
			"fromNodeId":"HaN7G",
			"priority":0,
			"skip":false,
			"toNodeId":"VB1aZ",
			"type":"next"
		},
		{
			"fromNodeId":"VB1aZ",
			"priority":0,
			"skip":false,
			"toNodeId":"mzr81",
			"type":"next"
		},
		{
			"fromNodeId":"mzr81",
			"priority":0,
			"skip":false,
			"toNodeId":"IwfS7",
			"type":"loop"
		},
		{
			"fromNodeId":"IwfS7",
			"priority":0,
			"skip":false,
			"toNodeId":"iAMRd",
			"type":"next"
		},
		{
			"fromNodeId":"iAMRd",
			"priority":0,
			"skip":false,
			"toNodeId":"mRKnb",
			"type":"next"
		},
		{
			"fromNodeId":"mRKnb",
			"priority":0,
			"skip":false,
			"toNodeId":"N5QVv",
			"type":"next"
		},
		{
			"fromNodeId":"N5QVv",
			"priority":0,
			"skip":false,
			"toNodeId":"BjRjm",
			"type":"next"
		},
		{
			"fromNodeId":"BjRjm",
			"priority":0,
			"skip":false,
			"toNodeId":"_PfuYC",
			"type":"next"
		},
		{
			"fromNodeId":"_PfuYC",
			"priority":0,
			"skip":false,
			"toNodeId":"_CBVIe",
			"type":"loop"
		},
		{
			"fromNodeId":"_CBVIe",
			"priority":0,
			"skip":false,
			"toNodeId":"bdmWs",
			"type":"next"
		},
		{
			"fromNodeId":"bdmWs",
			"priority":0,
			"skip":false,
			"toNodeId":"_9U1tE",
			"type":"next"
		},
		{
			"fromNodeId":"_9U1tE",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_PfuYC",
			"type":"next"
		},
		{
			"fromNodeId":"_PfuYC",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"mzr81",
			"type":"next"
		},
		{
			"fromNodeId":"mzr81",
			"priority":0,
			"skip":false,
			"toNodeId":"vicH0",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"67af1045fdf418623abec59b",
	"lastModifiedBy":-1,
	"lcName":"knowledge indexer | mysql | index connection database ",
	"modifiedTime":1759243549285,
	"name":"Knowledge Indexer | MySQL | Index connection database ",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":57,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"vc3fr",
			"index":0,
			"inputs":{
				"result":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"cursorObject":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"cursorObject"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"lastSyncTime":{
							"type":"string",
							"title":"Last Sync Time"
						}
					},
					"required":[]
				},
				"callableInterfaceId":"674855d2634d220ea5dd2d71",
				"setup":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"knowledgeId":{
							"type":"string",
							"title":"knowledgeId"
						},
						"aiAgentId":{
							"type":"string",
							"title":"aiAgentId"
						},
						"knowledge":{
							"type":"object",
							"properties":{
								"readVersion":{
									"type":"integer",
									"title":"readVersion"
								},
								"lastSyncTime":{
									"type":"integer",
									"title":"lastSyncTime"
								},
								"cursorObject":{
									"type":"object",
									"title":"cursorObject"
								},
								"applicationInfo":{
									"type":"object",
									"properties":{
										"context":{
											"type":"object",
											"properties":{
												"connectionId":{
													"type":"string",
													"title":"Connection Id"
												}
											},
											"additionalProperties":false,
											"title":"Context",
											"required":[]
										}
									},
									"additionalProperties":false,
									"title":"Application Info",
									"required":[]
								}
							},
							"title":"knowledge",
							"additionalProperties":false,
							"required":[]
						},
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":71,
				"resourceName":"standard_entities_get_connection_details",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"FCCvW",
			"index":0,
			"inputs":{
				"connectionIds":"{{ vc3fr.outputs.knowledge.applicationInfo.context.connectionId }}"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Get connection details",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":68,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"1WPP3",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"error":{
							"type":"string",
							"title":"Error"
						},
						"mappedInputs":{
							"type":"object",
							"properties":{
								"databaseName":{
									"type":"string",
									"title":"Database Name"
								},
								"fromDate":{
									"type":"string",
									"title":"From Date"
								},
								"toDate":{
									"type":"string",
									"title":"To Date"
								},
								"tableList":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"Table List"
								}
							},
							"additionalProperties":false,
							"title":"Mapped Inputs",
							"required":[
								"databaseName"
							]
						},
						"errorMessage":{
							"type":"string",
							"title":"Error Message"
						}
					},
					"additionalProperties":false,
					"required":[
						"error",
						"mappedInputs",
						"errorMessage"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"userInput":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"User Input"
						},
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"additionalProperties":false,
					"required":[
						"userInput"
					]
				},
				"compile_static":false,
				"code":"def toReturn = [:]\ntry {\n    if (!binding.hasVariable('userInput') || userInput == null) \n    {\n        toReturn << [\"error\": true, \"errorMessage\": \"User input not found in connection\"]\n    } \n    else\n    {\n        def mappedInputs = [:]\n        \n        if (userInput.databaseName == null) \n        {\n            toReturn << [\"error\": true, \"errorMessage\": \"Database name not found in connection\"]\n            return toReturn\n        }\n\n        mappedInputs[\"databaseName\"] = userInput?.databaseName\n        \n        if(binding.hasVariable('inputs'))\n        {\n            mappedInputs[\"fromDate\"] = inputs?.dateRange?.fromDate\n            mappedInputs[\"toDate\"] = inputs?.dateRange?.toDate\n        }\n\n        if (binding.hasVariable('inputs') && inputs?.table && inputs?.table.size()>0)\n        {\n            mappedInputs[\"tableList\"] = inputs?.table.collect { it.split(\"\\\\.\")[1] }\n        }\n        toReturn << [\"error\": false, \"mappedInputs\": mappedInputs]\n    }\n}\ncatch (Exception e) {\n    toReturn << [\"error\": true, \"errorMessage\": \"Input Extraction Failed\"]\n}\n\nreturn toReturn\n",
				"parameters":{
					"userInput":"{{ FCCvW.outputs.connectionDetails[0].userInput }}",
					"inputs":"{{ vc3fr.outputs.inputs }}"
				}
			},
			"skip":false,
			"subTitle":"Extract Connection",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":105,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"melDp",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 1WPP3.outputs.result.error }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":79,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"melDp@9wI9z-1@y",
			"id":"135Gi",
			"index":0,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"errorMessage":{
							"type":"string",
							"title":"errorMessage"
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{{ 1WPP3.outputs.result.errorMessage }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"mysql",
				"resourceVersion":173,
				"connectionId":"67696d4bf313832270c3f827",
				"resourceName":"mysql_execute_sql",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"HaN7G",
			"index":0,
			"inputs":{
				"objectSourceResourceName":"mysql_execute_sql_metadata",
				"sql":"SHOW TABLES FROM {{ 1WPP3.outputs.result.mappedInputs.databaseName }};"
			},
			"skip":false,
			"subTitle":"List all tables",
			"title":"Execute SQL statement",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":68,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"VB1aZ",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"tableList":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Table List"
						}
					},
					"additionalProperties":false,
					"required":[
						"tableList"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						},
						"databaseName":{
							"type":"string",
							"title":"Database Name"
						}
					},
					"additionalProperties":false,
					"required":[
						"rows",
						"databaseName"
					]
				},
				"compile_static":false,
				"code":"def toReturn = [:]\ntry {\n    if (!binding.hasVariable('rows') || rows == null) {\n        toReturn << [\"error\": true, \"errorMessage\": \"Row array is required\"]\n    } else {\n        def tableNames = []\n        def keyName = \"TABLE_NAME\"\n        rows.each { row ->\n           if (row.containsKey(keyName) && row[keyName] != null) {\n            tableNames << row[keyName]\n            }\n        }\n        toReturn << [\"error\": false, \"tableList\": tableNames]\n    }\n} catch (Exception e) {\n    toReturn << [\"error\": true, \"errorMessage\": \"Table List Extraction Failed\"]\n}\nreturn toReturn",
				"parameters":{
					"rows":{
						"source":"{{ HaN7G.outputs.rows }}",
						"ua:type":"mappedArray",
						"items":"{{ HaN7G.outputs.rows[0] }}"
					},
					"databaseName":"{{ 1WPP3.outputs.result.mappedInputs.databaseName }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":59,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"mzr81",
			"index":0,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ VB1aZ.outputs.result.tableList }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":323,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"mzr81@9wI9z-1@l",
			"id":"IwfS7",
			"index":0,
			"inputs":{
				"loop":"mzr81",
				"conditions":{
					"filters":[
						{
							"property":"{{ 1WPP3.outputs.result.mappedInputs.tableList }}",
							"filter":{
								"operator":"EXISTS"
							}
						},
						{
							"property":"{{ 1WPP3.outputs.result.mappedInputs.tableList }}",
							"filter":{
								"operator":"NOT_CONTAINS",
								"value":"{{ mzr81.outputs.item }}"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"mysql",
				"resourceVersion":148,
				"connectionId":"67696d4bf313832270c3f827",
				"resourceName":"mysql_execute_sql",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"mzr81@9wI9z-1@l",
			"id":"iAMRd",
			"index":0,
			"inputs":{
				"objectSourceResourceName":"mysql_execute_sql_metadata",
				"sql":"SELECT DATE_FORMAT(GREATEST(\n    COALESCE(CREATE_TIME, '0000-00-00 00:00:00'), \n    COALESCE(UPDATE_TIME, '0000-00-00 00:00:00')\n), '%Y-%m-%d') AS last_time\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA = '{{ 1WPP3.outputs.result.mappedInputs.databaseName }}' \nAND TABLE_NAME = '{{ mzr81.outputs.item }}'\nLIMIT 1;\n"
			},
			"skip":false,
			"subTitle":"Extract Table Created Time",
			"title":"Execute SQL statement",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":61,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"mzr81@9wI9z-1@l",
			"id":"mRKnb",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"flag":{
							"type":"boolean",
							"title":"Flag"
						}
					},
					"additionalProperties":false,
					"required":[
						"flag"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						},
						"fromDate":{
							"type":"string",
							"title":"From Date"
						},
						"toDate":{
							"type":"string",
							"title":"To Date"
						}
					},
					"additionalProperties":false,
					"required":[
						"rows"
					]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\n\ndef toReturn = [:]\ndef flag = true  \n\n\n    if (binding.hasVariable('rows') && rows != null && \n    (binding.hasVariable('fromDate') || binding.hasVariable('toDate'))) {\n\n    def dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\")\n    def fromDate = binding.hasVariable('fromDate') && fromDate ? dateFormat.parse(fromDate) : null\n    def toDate = binding.hasVariable('toDate') && toDate ? dateFormat.parse(toDate) : null\n\n    if (fromDate != null && toDate != null && fromDate.after(toDate)) {\n       flag=false\n    }\n    else \n    {\n            rows.each { row ->\n            if (row.containsKey(\"last_time\") && row.last_time != null) {\n                def lastTimeDate = dateFormat.parse(row.last_time)\n\n                if ((fromDate != null && lastTimeDate.before(fromDate)) ||\n                    (toDate != null && lastTimeDate.after(toDate))) {\n                    flag = false\n                }\n            }\n        }\n    } \n}\n\n\n\ntoReturn << [\"flag\": flag]\n\nreturn toReturn\n",
				"parameters":{
					"rows":{
						"source":"{{ iAMRd.outputs.rows }}",
						"ua:type":"mappedArray",
						"items":"{{ iAMRd.outputs.rows[0] }}"
					},
					"fromDate":"{{ 1WPP3.outputs.result.mappedInputs.fromDate }}",
					"toDate":"{{ 1WPP3.outputs.result.mappedInputs.toDate }}"
				}
			},
			"skip":false,
			"subTitle":"Daterange Filter",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":61,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"mzr81@9wI9z-1@l",
			"id":"N5QVv",
			"index":0,
			"inputs":{
				"loop":"mzr81",
				"conditions":{
					"filters":[
						{
							"property":"{{ mRKnb.outputs.result.flag }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"mysql",
				"resourceVersion":172,
				"connectionId":"67696d4bf313832270c3f827",
				"resourceName":"mysql_get_table_schema",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"mzr81@9wI9z-1@l",
			"id":"BjRjm",
			"index":0,
			"inputs":{
				"table":"{{ mzr81.outputs.item }}"
			},
			"skip":false,
			"subTitle":"MySQL",
			"title":"Get table schema",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":148,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"mzr81@9wI9z-1@l",
			"id":"_PfuYC",
			"index":0,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ BjRjm.outputs.columns }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":112,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PfuYC@mzr81@9wI9z-1@l@l",
			"id":"_CBVIe",
			"index":0,
			"inputs":{
				"automationId":"66b3353e1a78c401cb583431",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"userQuery":"{{ _PfuYC.outputs.item.name }}|{{ _PfuYC.outputs.item.type }}",
					"aiAgentId":"{{ vc3fr.outputs.aiAgentId }}"
				}
			},
			"skip":false,
			"subTitle":"Fetch Embeddings",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":142,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PfuYC@mzr81@9wI9z-1@l@l",
			"id":"bdmWs",
			"index":0,
			"inputs":{
				"automationId":"66dfd76eb70dad256986b784",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"type":"text",
					"modelId":"e_67cc1744ba570a154624cd01",
					"content":"Generate a simple description of the table column using the metadata:{ table_name: {{ mzr81.outputs.item }}, metadata: {{ _PfuYC.outputs.item.name }}|{{ _PfuYC.outputs.item.type }}} ONLY GENERATE THE FINAL DESCRIPTION AND NOTHING ELSE"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.embeddings.items"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":580,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PfuYC@mzr81@9wI9z-1@l@l",
			"id":"_9U1tE",
			"index":0,
			"inputs":{
				"object_type":"e_knowledge_metadata_store",
				"record":{
					"embeddings":{
						"ua:type":"mappedArray",
						"source":"{{ _CBVIe.outputs.embeddings }}",
						"items":"{{ _CBVIe.outputs.embeddings[0] }}"
					},
					"type":"{{ _PfuYC.outputs.item.type }}",
					"metadataSource":"mysql_{{ vc3fr.outputs.knowledge.applicationInfo.context.connectionId }}",
					"knowledgeId":"{{ vc3fr.outputs.knowledgeId }}",
					"metadata":"Column name : {{ _PfuYC.outputs.item.name }}, Column type :\n{{ _PfuYC.outputs.item.type }}, Table creation time :\n{{ iAMRd.outputs.rows[0].last_time }}, Database name :\n{{ 1WPP3.outputs.result.mappedInputs.databaseName }}.",
					"columnName":"{{ _PfuYC.outputs.item.name }}",
					"tableName":"{{ mzr81.outputs.item }}",
					"label":"{{ mzr81.outputs.item }}",
					"table_id":"{{ mzr81.outputs.item }}",
					"description":"{{ bdmWs.outputs.llmResponse }}"
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":59,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9wI9z-1",
			"id":"vicH0",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1866,
	"runtimeConnectionAppNames":[
		"mysql"
	],
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":true,
	"version":113
}