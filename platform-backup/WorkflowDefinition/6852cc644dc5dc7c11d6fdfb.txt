{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1750264047585,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243617854,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed6123e6682b9a51ecc4",
		"status":"DEPLOYED",
		"version":40,
		"workflowVersion":48
	},
	"edges":[
		{
			"fromNodeId":"n_7mxHQ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_PbUkk",
			"type":"next"
		},
		{
			"fromNodeId":"n_PbUkk",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2PUB3",
			"type":"next"
		},
		{
			"fromNodeId":"n_2PUB3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_FpEx6",
			"type":"next"
		},
		{
			"fromNodeId":"n_FpEx6",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LCcVd",
			"type":"next"
		},
		{
			"fromNodeId":"n_LCcVd",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LCcVd@1",
			"type":"branch"
		},
		{
			"fromNodeId":"n_LCcVd@1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_uHpD0",
			"type":"next"
		},
		{
			"fromNodeId":"n_uHpD0",
			"priority":0,
			"skip":false,
			"toNodeId":"_ASs40",
			"type":"next"
		},
		{
			"fromNodeId":"_ASs40",
			"priority":0,
			"skip":false,
			"toNodeId":"_6Cl8i",
			"type":"next"
		},
		{
			"fromNodeId":"n_LCcVd",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LCcVd@2",
			"type":"branch"
		},
		{
			"fromNodeId":"n_LCcVd@2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_RRE0J",
			"type":"next"
		},
		{
			"fromNodeId":"n_RRE0J",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zYYbL",
			"type":"next"
		},
		{
			"fromNodeId":"n_zYYbL",
			"priority":0,
			"skip":false,
			"toNodeId":"n_BctYi",
			"type":"next"
		},
		{
			"fromNodeId":"n_BctYi",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_Fgop4",
			"type":"if"
		},
		{
			"fromNodeId":"n_LCcVd",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LCcVd@3",
			"type":"branch"
		},
		{
			"fromNodeId":"n_LCcVd@3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_IpQ8s",
			"type":"next"
		},
		{
			"fromNodeId":"n_IpQ8s",
			"priority":0,
			"skip":false,
			"toNodeId":"_vCf0f",
			"type":"next"
		},
		{
			"fromNodeId":"_vCf0f",
			"priority":0,
			"skip":false,
			"toNodeId":"_YHvu3",
			"type":"next"
		},
		{
			"fromNodeId":"_YHvu3",
			"priority":0,
			"skip":false,
			"toNodeId":"_wBMPX",
			"type":"next"
		},
		{
			"fromNodeId":"_6Cl8i",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qa6rs",
			"type":"next"
		},
		{
			"fromNodeId":"_Fgop4",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qa6rs",
			"type":"next"
		},
		{
			"fromNodeId":"n_BctYi",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qa6rs",
			"type":"next"
		},
		{
			"fromNodeId":"_wBMPX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qa6rs",
			"type":"next"
		},
		{
			"fromNodeId":"n_LCcVd",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qa6rs",
			"type":"branch"
		},
		{
			"fromNodeId":"n_qa6rs",
			"priority":0,
			"skip":false,
			"toNodeId":"n_90CkI",
			"type":"next"
		},
		{
			"fromNodeId":"n_90CkI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_tENox",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6852cc644dc5dc7c11d6fdfb",
	"lastModifiedBy":-1,
	"lcName":"fetch autocomplete query ",
	"modifiedTime":1759371935315,
	"name":"Fetch Autocomplete Query ",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":444,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KHXAd-1",
			"id":"n_7mxHQ",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Data"
									},
									"type":{
										"type":"string",
										"title":"Type"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"objects"
						}
					},
					"additionalProperties":false
				},
				"setup":{
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":458,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"_KHXAd-1",
			"id":"n_PbUkk",
			"index":2,
			"inputs":{
				"automationId":"6856aa8cf4fbf54cd856d9a1",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"aiAgentId":"enterprise_search_agent"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"{{ __RUN__.outputs.userId }}",
					"enabled":true,
					"timeToLive":"333",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Build filter",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":801,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KHXAd-1",
			"id":"n_2PUB3",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(binding.hasVariable('query') && query!=null)\n{\n  return [ 'query' : query ]\n}\nreturn [ 'query' : \"\" ]",
				"parameters":{
					"query":"{{ n_7mxHQ.outputs.query }}"
				}
			},
			"skip":false,
			"subTitle":"Query",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":849,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KHXAd-1",
			"id":"n_FpEx6",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"data":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Data"
										},
										"type":{
											"type":"string",
											"title":"Type"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"response",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"response",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Data"
									},
									"type":{
										"type":"string",
										"title":"Type"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Response generator",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KHXAd-1",
			"id":"n_LCcVd",
			"index":5,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"Chunk metadata"
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"AiAgentQuery"
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"Text"
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_LCcVd@_KHXAd-1@1",
			"id":"n_LCcVd@1",
			"index":6,
			"inputs":{
				"name":"Chunk metadata"
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":3,
				"resourceName":"storage_by_unifyapps_autocomplete_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_LCcVd@_KHXAd-1@1",
			"id":"n_uHpD0",
			"index":7,
			"inputs":{
				"hybridSearch":false,
				"triggerInputCondition":{
					"filters":[
						{
							"resolvedFilter":{
								"filter":"{{ n_PbUkk.outputs.filter }}"
							}
						}
					],
					"operator":"AND"
				},
				"searchField":{
					"op":"MATCH_PHRASE_PREFIX",
					"values":"{{ n_2PUB3.outputs.result.query }}",
					"field":"properties.chunkMetadata.name"
				},
				"object_type":"knowledge_vector_store_open_ai_3072",
				"numberOfRecordsToFetch":100
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Autocomplete chunks",
			"title":"Autocomplete search records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":809,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_LCcVd@_KHXAd-1@1",
			"id":"_ASs40",
			"index":8,
			"inputs":{
				"automationId":"685914facb8d060a8c7b1481",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"chunkIds":{
						"source":"{{ n_uHpD0.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ n_uHpD0.outputs.objects[0].document.id }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Fetch chunks",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.data",
					"root.itemsToAdd.items.type"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_LCcVd@_KHXAd-1@1",
			"id":"_6Cl8i",
			"index":9,
			"inputs":{
				"insertLocation":"START",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"items":{
						"data":"{{ _ASs40.outputs.citationData[0] }}",
						"type":"CITATION"
					},
					"source":"{{ _ASs40.outputs.citationData }}"
				},
				"listName":"{{ n_FpEx6.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Citation",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_LCcVd@_KHXAd-1@2",
			"id":"n_LCcVd@2",
			"index":10,
			"inputs":{
				"name":"AiAgentQuery"
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"storage_by_unifyapps_autocomplete_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_LCcVd@_KHXAd-1@2",
			"id":"n_RRE0J",
			"index":11,
			"inputs":{
				"hybridSearch":false,
				"triggerInputCondition":{
					"filters":[
						{
							"property":"ownerUserId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ __RUN__.outputs.userId }}"
							}
						}
					],
					"operator":"AND"
				},
				"searchField":{
					"op":"MATCH_PHRASE_PREFIX",
					"values":"{{ n_2PUB3.outputs.result.query }}",
					"field":"properties.text"
				},
				"object_type":"ai_agent_user_query",
				"numberOfRecordsToFetch":100
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Autocomplete query",
			"title":"Autocomplete search records",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.response.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_LCcVd@_KHXAd-1@2",
			"id":"n_zYYbL",
			"index":12,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Objects"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"response":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Response"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(binding.hasVariable('response') && response != null)\n{\n  def result = response.collect { str ->\n    [\n       query : str\n    ]\n  }\n  return [ 'objects' : result ]\n}\n",
				"parameters":{
					"response":{
						"source":"{{ n_RRE0J.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ n_RRE0J.outputs.objects[0].document.properties.text }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Fetch query",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":437,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_LCcVd@_KHXAd-1@2",
			"id":"n_BctYi",
			"index":13,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_zYYbL.outputs.result.objects[0] }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"data present",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.data",
					"root.itemsToAdd.items.type"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_BctYi@n_LCcVd@_KHXAd-1@2@y",
			"id":"_Fgop4",
			"index":14,
			"inputs":{
				"insertLocation":"START",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"items":{
						"type":"RECENT_SEARCHES",
						"data":"{{ n_zYYbL.outputs.result.objects[0] }}"
					},
					"source":"{{ n_zYYbL.outputs.result.objects }}"
				},
				"listName":"{{ n_FpEx6.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Query",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_LCcVd@_KHXAd-1@3",
			"id":"n_LCcVd@3",
			"index":15,
			"inputs":{
				"name":"Text"
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":102,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_LCcVd@_KHXAd-1@3",
			"id":"n_IpQ8s",
			"index":16,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"newFilter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"New Filter"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"filter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Filter"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(binding.hasVariable('filter')){\n  def dummyFilter = filter\n  dummyFilter.values.each { condition ->\n      if (condition.field == \"properties.knowledgeId\" && condition.op == \"IN\") {\n          condition.values.removeAll { it == \"people_knowledge\" }\n      }\n  }\n\n  return [\"newFilter\": dummyFilter]\n}\n\nreturn [:]",
				"parameters":{
					"filter":"{{ n_PbUkk.outputs.filter }}"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":3,
				"resourceName":"storage_by_unifyapps_autocomplete_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_LCcVd@_KHXAd-1@3",
			"id":"_vCf0f",
			"index":17,
			"inputs":{
				"hybridSearch":false,
				"triggerInputCondition":{
					"filters":[
						{
							"resolvedFilter":{
								"filter":"{{ n_IpQ8s.outputs.result.newFilter }}"
							}
						}
					],
					"operator":"AND"
				},
				"searchField":{
					"op":"MATCH_PHRASE_PREFIX",
					"values":"{{ n_2PUB3.outputs.result.query }}",
					"field":"properties.chunkMetadata.name"
				},
				"object_type":"knowledge_vector_store_open_ai_3072",
				"numberOfRecordsToFetch":100
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"chunks",
			"title":"Autocomplete search records",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.response.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_LCcVd@_KHXAd-1@3",
			"id":"_YHvu3",
			"index":18,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Objects"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"response":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Response"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(binding.hasVariable('response') && response != null)\n{\n  def result = response.collect { str ->\n    [\n       query : str\n    ]\n  }\n  return [ 'objects' : result ]\n}\n",
				"parameters":{
					"response":{
						"ua:type":"mappedArray",
						"source":"{{ _vCf0f.outputs.objects }}",
						"items":"{{ _vCf0f.outputs.objects[0].document.properties.chunkMetadata.name }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Fetch query",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.data",
					"root.itemsToAdd.items.type"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_LCcVd@_KHXAd-1@3",
			"id":"_wBMPX",
			"index":19,
			"inputs":{
				"insertLocation":"START",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"items":{
						"type":"QUERY",
						"data":"{{ _YHvu3.outputs.result.objects[0] }}"
					},
					"source":"{{ _YHvu3.outputs.result.objects }}"
				},
				"listName":"{{ n_FpEx6.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"ChunkContent",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.input.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"_KHXAd-1",
			"id":"n_qa6rs",
			"index":20,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"response":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"Type"
									},
									"data":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Data"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Response"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"input":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Input"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(binding.hasVariable('input') && input!=null) {\n    def normalizeString = { str ->\n        return str.trim().replaceAll(/\\s+/, ' ') \n    }\n    \n    def trimmedInput = input.collect { item ->\n        def trimmedItem = [:]\n        item.each { key, value ->\n            if (value instanceof String) {\n                trimmedItem[key] = normalizeString(value)\n            } else if (value instanceof Map) {\n                def trimmedNestedItem = [:]\n                value.each { nestedKey, nestedValue ->\n                    if (nestedValue instanceof String) {\n                        trimmedNestedItem[nestedKey] = normalizeString(nestedValue)\n                    } else {\n                        trimmedNestedItem[nestedKey] = nestedValue\n                    }\n                }\n                trimmedItem[key] = trimmedNestedItem\n            } else {\n                trimmedItem[key] = value\n            }\n        }\n        return trimmedItem\n    }\n    \n    def queries = trimmedInput.findAll { it.type == 'QUERY' }\n    def citations = trimmedInput.findAll { it.type == 'CITATION' }\n    def recentSearches = trimmedInput.findAll { it.type == 'RECENT_SEARCHES' }\n\n    def result = [] as LinkedHashSet \n    def categoryCount = [QUERY: 0, CITATION: 0, RECENT_SEARCHES: 0]\n    \n    def compareItems\n    compareItems = { item1, item2 ->\n        if (item1.size() != item2.size()) return false\n        \n        return item1.every { key, value ->\n            if (!item2.containsKey(key)) return false\n            \n            def otherValue = item2[key]\n            \n            if (value instanceof String && otherValue instanceof String) {\n                return value.toLowerCase().equals(otherValue.toLowerCase()) \n            } else if (value instanceof Map && otherValue instanceof Map) {\n                return compareItems(value, otherValue) \n            } else if (value instanceof List && otherValue instanceof List) {\n                if (value.size() != otherValue.size()) return false\n                return value.size() == 0 || value.every { v ->\n                    otherValue.any { ov ->\n                        if (v instanceof Map && ov instanceof Map) {\n                            return compareItems(v, ov)\n                        } else if (v instanceof String && ov instanceof String) {\n                            return v.toLowerCase().equals(ov.toLowerCase())\n                        } else {\n                            return v == ov\n                        }\n                    }\n                }\n            } else {\n                return value == otherValue\n            }\n        }\n    }\n    \n    def isUnique = { newItem ->\n        return !result.any { existingItem ->\n            return compareItems(existingItem, newItem)\n        }\n    }\n    \n    def addWithLimit = { items, categoryType, maxItems = 2 ->\n        items.each { item ->\n            if (result.size() < 6 && \n                categoryCount[categoryType] < maxItems && \n                isUnique(item)) {\n                result.add(item)\n                categoryCount[categoryType]++\n            }\n        }\n    }\n    \n    def addRemainingWithLimit = { allItems ->\n        allItems.each { item ->\n            if (result.size() < 6 && \n                isUnique(item)) {\n                result.add(item)\n                categoryCount[item.type]++\n            }\n        }\n    }\n\n    if (queries.size() >= 2 && citations.size() >= 2 && recentSearches.size() >= 2) {\n        addWithLimit(queries.take(2), 'QUERY', 2)\n        addWithLimit(citations.take(2), 'CITATION', 2)\n        addWithLimit(recentSearches.take(2), 'RECENT_SEARCHES', 2)\n    } else if (queries.size() >= 2 && citations.size() >= 2 && recentSearches.size() < 2) {\n        addWithLimit(queries.take(2), 'QUERY', 2)\n        addWithLimit(citations.take(2), 'CITATION', 2)\n        addWithLimit(recentSearches, 'RECENT_SEARCHES', 2)\n        if (result.size() < 6) {\n            addRemainingWithLimit(queries.drop(2))\n        }\n    } else if (queries.size() >= 2 && citations.size() < 2 && recentSearches.size() >= 2) {\n        addWithLimit(queries.take(2), 'QUERY', 2)\n        addWithLimit(citations, 'CITATION', 2)\n        addWithLimit(recentSearches.take(2), 'RECENT_SEARCHES', 2)\n        if (result.size() < 6) {\n            addRemainingWithLimit(recentSearches.drop(2))\n        }\n    } else if (queries.size() < 2 && citations.size() >= 2 && recentSearches.size() >= 2) {\n        addWithLimit(queries, 'QUERY', 2)\n        addWithLimit(citations.take(2), 'CITATION', 2)\n        addWithLimit(recentSearches.take(2), 'RECENT_SEARCHES', 2)\n        if (result.size() < 6) {\n            addRemainingWithLimit(recentSearches.drop(2))\n        }\n    } else if (queries.size() >= 2 && citations.size() < 2 && recentSearches.size() < 2) {\n        addWithLimit(queries.take(2), 'QUERY', 2)\n        addWithLimit(citations, 'CITATION', 2)\n        addWithLimit(recentSearches, 'RECENT_SEARCHES', 2)\n        if (result.size() < 6) {\n            addRemainingWithLimit(queries.drop(2))\n        }\n    } else if (queries.size() < 2 && citations.size() >= 2 && recentSearches.size() < 2) {\n        addWithLimit(queries, 'QUERY', 2)\n        addWithLimit(citations.take(2), 'CITATION', 2)\n        addWithLimit(recentSearches, 'RECENT_SEARCHES', 2)\n        if (result.size() < 6) {\n            addRemainingWithLimit(citations.drop(2))\n        }\n    } else if (queries.size() < 2 && citations.size() < 2 && recentSearches.size() >= 2) {\n        addWithLimit(queries, 'QUERY', 2)\n        addWithLimit(citations, 'CITATION', 2)\n        addWithLimit(recentSearches.take(2), 'RECENT_SEARCHES', 2)\n        if (result.size() < 6) {\n            addRemainingWithLimit(recentSearches.drop(2))\n        }\n    } else {\n        addWithLimit(queries, 'QUERY', 2)\n        addWithLimit(citations, 'CITATION', 2)\n        addWithLimit(recentSearches, 'RECENT_SEARCHES', 2)\n        if (result.size() < 6) {\n            def remaining = (trimmedInput as Set) - result\n            addRemainingWithLimit(remaining as List)\n        }\n    }\n    \n    return [ \"response\" : result.take(6) as List ] \n}",
				"parameters":{
					"input":{
						"source":"{{ n_FpEx6.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ n_FpEx6.outputs.items[0] }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Return 2 query 2 citation and 2 recentSearches",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.response.items.type",
					"root.parameters.response.items.data"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"_KHXAd-1",
			"id":"n_90CkI",
			"index":21,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"response":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"Type"
									},
									"data":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Data"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Response"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"response":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"Type"
									},
									"data":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Data"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Response"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def cleanText(String input) {\n  if (!input) return \"\"\n\n  def noHtml = input.replaceAll(/<[^>]+>/, '')\n  def noMarkdownLinks = noHtml.replaceAll(/\\[([^\\]]+)\\]\\([^)]+\\)/, '$1')\n  def noMarkdownHeaders = noMarkdownLinks.replaceAll(/#+\\s*/, '')\n  def noFormatting = noMarkdownHeaders\n      .replaceAll(/\\*\\*(.*?)\\*\\*/, '$1') \n      .replaceAll(/\\*(.*?)\\*/, '$1')     \n  def plain = noFormatting.replaceAll(/\\s+/, ' ').trim()\n\n  return plain\n}\n\nif (binding.hasVariable('response')) {\n  response.each { item ->\n    def tData = item.data\n    def tQuery = tData.query\n    tQuery = cleanText(tQuery)\n    item.data.query = tQuery\n  }\n}\n\nreturn [\"response\": response]",
				"parameters":{
					"response":{
						"source":"{{ n_qa6rs.outputs.result.response }}",
						"ua:type":"mappedArray",
						"items":{
							"type":"{{ n_qa6rs.outputs.result.response[0].type }}",
							"data":"{{ n_qa6rs.outputs.result.response[0].data }}"
						}
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KHXAd-1",
			"id":"n_tENox",
			"index":22,
			"inputs":{
				"result":{
					"objects":{
						"ua:type":"mappedArray",
						"items":{
							"data":"{{ n_90CkI.outputs.result.response[0].data }}",
							"type":"{{ n_90CkI.outputs.result.response[0].type }}"
						},
						"source":"{{ n_90CkI.outputs.result.response }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":44109,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":49
}