{
	"appsUsed":[
		
	],
	"createdTime":1747641655141,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1758655387357,
		"deployedBy":0,
		"deployedDefinitionId":"68d2f39b38757c179b123b54",
		"status":"DEPLOYED",
		"version":47,
		"workflowVersion":126
	},
	"edges":[
		{
			"fromNodeId":"JqpwZ",
			"priority":0,
			"skip":false,
			"toNodeId":"YdRPT",
			"type":"next"
		},
		{
			"fromNodeId":"YdRPT",
			"priority":0,
			"skip":false,
			"toNodeId":"35BuH",
			"type":"next"
		},
		{
			"fromNodeId":"35BuH",
			"priority":0,
			"skip":false,
			"toNodeId":"SGNiL",
			"type":"next"
		},
		{
			"fromNodeId":"SGNiL",
			"priority":0,
			"skip":false,
			"toNodeId":"LMjYV",
			"type":"next"
		},
		{
			"fromNodeId":"LMjYV",
			"priority":0,
			"skip":false,
			"toNodeId":"10Pgx",
			"type":"next"
		},
		{
			"fromNodeId":"10Pgx",
			"priority":0,
			"skip":false,
			"toNodeId":"5wuT4",
			"type":"next"
		},
		{
			"fromNodeId":"5wuT4",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"eWs3n",
			"type":"if"
		},
		{
			"fromNodeId":"eWs3n",
			"priority":0,
			"skip":false,
			"toNodeId":"7LjJB",
			"type":"next"
		},
		{
			"fromNodeId":"7LjJB",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"DNBa8",
			"type":"if"
		},
		{
			"fromNodeId":"7LjJB",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"oMc9S",
			"type":"next"
		},
		{
			"fromNodeId":"oMc9S",
			"priority":0,
			"skip":false,
			"toNodeId":"cz6WW",
			"type":"next"
		},
		{
			"fromNodeId":"DNBa8",
			"priority":0,
			"skip":false,
			"toNodeId":"sQc1U",
			"type":"next"
		},
		{
			"fromNodeId":"cz6WW",
			"priority":0,
			"skip":false,
			"toNodeId":"sQc1U",
			"type":"next"
		},
		{
			"fromNodeId":"5wuT4",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"sQc1U",
			"type":"next"
		},
		{
			"fromNodeId":"sQc1U",
			"priority":0,
			"skip":false,
			"toNodeId":"HWU56",
			"type":"next"
		},
		{
			"fromNodeId":"HWU56",
			"priority":0,
			"skip":false,
			"toNodeId":"BZoCw",
			"type":"next"
		},
		{
			"fromNodeId":"BZoCw",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"htDXn",
			"type":"if"
		},
		{
			"fromNodeId":"htDXn",
			"priority":0,
			"skip":false,
			"toNodeId":"qtsyU",
			"type":"loop"
		},
		{
			"fromNodeId":"qtsyU",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"htDXn",
			"type":"next"
		},
		{
			"fromNodeId":"htDXn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_TKQ6T",
			"type":"next"
		},
		{
			"fromNodeId":"BZoCw",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_TKQ6T",
			"type":"next"
		},
		{
			"fromNodeId":"n_TKQ6T",
			"priority":0,
			"skip":false,
			"toNodeId":"s69W2",
			"type":"next"
		},
		{
			"fromNodeId":"s69W2",
			"priority":0,
			"skip":false,
			"toNodeId":"fF8X0",
			"type":"next"
		},
		{
			"fromNodeId":"fF8X0",
			"priority":0,
			"skip":false,
			"toNodeId":"n_pNnPL",
			"type":"next"
		},
		{
			"fromNodeId":"n_pNnPL",
			"priority":0,
			"skip":false,
			"toNodeId":"dYjeA",
			"type":"next"
		},
		{
			"fromNodeId":"dYjeA",
			"priority":0,
			"skip":false,
			"toNodeId":"QqGin",
			"type":"next"
		},
		{
			"fromNodeId":"QqGin",
			"priority":0,
			"skip":false,
			"toNodeId":"Ei77E",
			"type":"next"
		},
		{
			"fromNodeId":"Ei77E",
			"priority":0,
			"skip":false,
			"toNodeId":"04LwR",
			"type":"next"
		},
		{
			"fromNodeId":"04LwR",
			"priority":0,
			"skip":false,
			"toNodeId":"9liih",
			"type":"next"
		},
		{
			"fromNodeId":"9liih",
			"priority":0,
			"skip":false,
			"toNodeId":"SAkLV",
			"type":"next"
		},
		{
			"fromNodeId":"SAkLV",
			"priority":0,
			"skip":false,
			"toNodeId":"02QzQ",
			"type":"next"
		},
		{
			"fromNodeId":"02QzQ",
			"priority":0,
			"skip":false,
			"toNodeId":"Hztfy",
			"type":"next"
		},
		{
			"fromNodeId":"Hztfy",
			"priority":0,
			"skip":false,
			"toNodeId":"dOYmr",
			"type":"next"
		},
		{
			"fromNodeId":"dOYmr",
			"priority":0,
			"skip":false,
			"toNodeId":"vvkbh",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68126b879576f34b4cbd0ae9",
	"lastModifiedBy":-1,
	"lcName":"text to workflow v2 | updateworkflow tool",
	"modifiedTime":1759243568875,
	"name":"Text to Workflow v2 | UpdateWorkflow Tool",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":316,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"JqpwZ",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"output":{
							"type":"string",
							"title":"output"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"insert":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"node_id":{
										"type":"string",
										"title":"node_id"
									},
									"parent_id":{
										"type":"string",
										"title":"parent_id"
									},
									"edge_type":{
										"type":"string",
										"title":"edge_type"
									},
									"action":{
										"type":"string",
										"title":"action",
										"help":"action name for the actions (not the triggers)."
									}
								},
								"additionalProperties":false,
								"required":[
									"node_id",
									"parent_id",
									"edge_type",
									"action"
								]
							},
							"title":"insert",
							"help":"A list of nodes to insert. Make sure that this does not include any Trigger Nodes."
						},
						"delete":{
							"type":"array",
							"items":{
								"type":"string",
								"required":[]
							},
							"title":"delete"
						},
						"updateTrigger":{
							"type":"object",
							"properties":{
								"action":{
									"type":"string",
									"title":"action"
								}
							},
							"additionalProperties":false,
							"title":"updateTrigger",
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":73,
				"resourceName":"variable_by_unifyapps_get_session_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"YdRPT",
			"index":2,
			"inputs":{
				"variableSchema":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Get Session Variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":115,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"35BuH",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"updatedWorkflowJson":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"updatedWorkflowJson"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"caseId":"{{ YdRPT.outputs.caseId }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"updatedWorkflowJson":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"updatedWorkflowJson"
						},
						"_ua_variableDetails":{
							"type":"array",
							"title":"Variable Details",
							"items":{
								"type":"object",
								"properties":{
									"description":{
										"description":"Description of the variable",
										"type":"string"
									},
									"dataType":{
										"description":"Data type of the variable",
										"type":"string"
									},
									"name":{
										"description":"Name of the variable",
										"type":"string"
									}
								}
							}
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"caseId / workflow json",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":116,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"SGNiL",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"errors",
				"ua:list_type":"STRING"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"errors",
							"disableActions":true,
							"items":{
								"type":"string"
							}
						},
						"_ua_variableDetails":{
							"type":"array",
							"title":"Variable Details",
							"items":{
								"type":"object",
								"properties":{
									"description":{
										"description":"Description of the variable",
										"type":"string"
									},
									"dataType":{
										"description":"Data type of the variable",
										"type":"string"
									},
									"name":{
										"description":"Name of the variable",
										"type":"string"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"errors list",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":333,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"LMjYV",
			"index":5,
			"inputs":{
				"automationId":"680f65be0d523f6cdbfe8437",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ 35BuH.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"current_workflow_state",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":116,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"10Pgx",
			"index":6,
			"inputs":{
				"variables":[
					{
						"source":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"value":"{{ LMjYV.outputs.workflowJson }}"
					}
				]
			},
			"skip":false,
			"subTitle":"updatedWorkflowJson",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":112,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"5wuT4",
			"index":7,
			"inputs":{
				"filters":[
					{
						"property":"{{ JqpwZ.outputs.updateTrigger.action }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.insert.source",
					"root.parameters.insert.ua:type",
					"root.parameters.insert.items.action_name",
					"root.parameters.insert.items.node_id",
					"root.parameters.insert.items.parent_id",
					"root.parameters.insert.items.edge_type"
				]
			},
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"5wuT4@kOh0v-1@y",
			"id":"eWs3n",
			"index":8,
			"inputs":{
				"automationId":"681b1f97b460864485848b5d",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"insert":{
						"items":{
							"action_name":"{{ JqpwZ.outputs.updateTrigger.action }}"
						},
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"Get Trigger Action",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":112,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"5wuT4@kOh0v-1@y",
			"id":"7LjJB",
			"index":9,
			"inputs":{
				"filters":[
					{
						"property":"{{ eWs3n.outputs.updatedInsertActions[0].resource_type }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"TRIGGER"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":115,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7LjJB@5wuT4@kOh0v-1@y@y",
			"id":"DNBa8",
			"index":10,
			"inputs":{
				"itemToAdd":"Action {{ JqpwZ.outputs.updateTrigger.action }} is not a valid Trigger. Trigger is not updated.",
				"insertLocation":"END",
				"listName":"{{ SGNiL.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"TRIGGER NOT FOUND",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":118,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7LjJB@5wuT4@kOh0v-1@y@n",
			"id":"oMc9S",
			"index":11,
			"inputs":{
				"automationId":"681b3cd1b46086448584d818",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"workflowJson":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"triggerNode":{
						"action_name":"{{ eWs3n.outputs.updatedInsertActions[0].action_name }}",
						"app_name":"{{ eWs3n.outputs.updatedInsertActions[0].app_name }}",
						"edge_type":"{{ eWs3n.outputs.updatedInsertActions[0].edge_type }}",
						"node_id":"{{ eWs3n.outputs.updatedInsertActions[0].node_id }}",
						"parent_id":"{{ eWs3n.outputs.updatedInsertActions[0].parent_id }}",
						"resource_type":"{{ eWs3n.outputs.updatedInsertActions[0].resource_type }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Update Trigger",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":116,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7LjJB@5wuT4@kOh0v-1@y@n",
			"id":"cz6WW",
			"index":12,
			"inputs":{
				"variables":[
					{
						"source":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"value":"{{ oMc9S.outputs.updatedWorkflowJson }}"
					}
				]
			},
			"skip":false,
			"subTitle":"updatedWorkflowJson",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"sQc1U",
			"index":13,
			"inputs":{
				"automationId":"681b2187b8b7345a42b444e8",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"workflowJson":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"caseId":"{{ 35BuH.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Graph to Adjacency List",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.insert.source",
					"root.parameters.insert.ua:type",
					"root.parameters.insert.items.action_name",
					"root.parameters.insert.items.node_id",
					"root.parameters.insert.items.parent_id",
					"root.parameters.insert.items.edge_type"
				]
			},
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"HWU56",
			"index":14,
			"inputs":{
				"automationId":"681b1f97b460864485848b5d",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"insert":{
						"items":{
							"action_name":"{{ JqpwZ.outputs.insert[0].action }}",
							"node_id":"{{ JqpwZ.outputs.insert[0].node_id }}",
							"parent_id":"{{ JqpwZ.outputs.insert[0].parent_id }}",
							"edge_type":"{{ JqpwZ.outputs.insert[0].edge_type }}"
						},
						"source":"{{ JqpwZ.outputs.insert }}",
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"Updated Insert Actions",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":348,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"BZoCw",
			"index":15,
			"inputs":{
				"filters":[
					{
						"property":"{{ HWU56.outputs }}",
						"filter":{
							"operator":"CONTAINS",
							"value":"updatedActionsWarningList"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Errors present?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":116,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BZoCw@kOh0v-1@y",
			"id":"htDXn",
			"index":16,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ HWU56.outputs.updatedActionsWarningList }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":118,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"htDXn@BZoCw@kOh0v-1@y@l",
			"id":"qtsyU",
			"index":17,
			"inputs":{
				"itemToAdd":"{{ htDXn.outputs.item }}",
				"insertLocation":"END",
				"listName":"{{ SGNiL.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.prevDelete.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"n_TKQ6T",
			"index":18,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalDeleteIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"finalDeleteIds"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"prevDelete":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Prev Delete"
						},
						"isFirstUserMessage":{
							"type":"boolean",
							"title":"Is First User Message"
						},
						"workflowAdjList":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Adj List"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def updatedDelete = []\nif(binding.hasVariable('prevDelete')) {\n    updatedDelete = prevDelete instanceof List ? prevDelete : [prevDelete]\n}\n\nif (!isFirstUserMessage) {\n    return [finalDeleteIds: updatedDelete]\n} else {\n    def placeholderIds = (workflowAdjList?.nodes ?: []).findAll {\n        it.action_name == \"placeholder\" && it.node_name == \"placeholder\"\n    }*.node_id\n\n    // Merge IDs, remove duplicates if necessary\n    def finalDeleteIds = (updatedDelete + (placeholderIds ?: [])).unique()\n\n    return [finalDeleteIds: finalDeleteIds]\n}",
				"parameters":{
					"isFirstUserMessage":"{{ LMjYV.outputs.isFirstUserMessage }}",
					"prevDelete":{
						"source":"{{ JqpwZ.outputs.delete }}",
						"ua:type":"mappedArray",
						"items":"{{ JqpwZ.outputs.delete[0] }}"
					},
					"workflowAdjList":"{{ sQc1U.outputs.workflowAdjList }}"
				}
			},
			"skip":false,
			"subTitle":"Remove placeholders if first user message",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":359,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"s69W2",
			"index":19,
			"inputs":{
				"automationId":"6821cf26d92379633114f772",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"updates":{
						"updatedInsertActions":{
							"source":"{{ HWU56.outputs.updatedInsertActions }}",
							"ua:type":"mappedArray",
							"items":"{{ HWU56.outputs.updatedInsertActions[0] }}"
						},
						"d":"1",
						"deleteNodes":{
							"source":"{{ n_TKQ6T.outputs.result.finalDeleteIds }}",
							"ua:type":"mappedArray",
							"items":"{{ n_TKQ6T.outputs.result.finalDeleteIds[0] }}"
						}
					},
					"workflow_json":"{{ sQc1U.outputs.workflowAdjList }}",
					"caseId":"{{ 35BuH.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Update Adj List",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":359,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"fF8X0",
			"index":20,
			"inputs":{
				"automationId":"68261e32ab2f3a19804cd200",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"previous_workflow_graph":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"current_workflow_adj_list":"{{ s69W2.outputs.output_workflow_json }}",
					"caseId":"{{ 35BuH.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Adj List to Graph",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":460,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"n_pNnPL",
			"index":21,
			"inputs":{
				"automationId":"687496aadc2b39bbc35b863d",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"new_workflow_graph":"{{ fF8X0.outputs.new_workflow_graph }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":358,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"dYjeA",
			"index":22,
			"inputs":{
				"automationId":"68230aa4c6711556195c13b1",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"new_workflow_graph":"{{ n_pNnPL.outputs.new_workflow_graph }}"
				}
			},
			"skip":false,
			"subTitle":"Add connections",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":116,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"QqGin",
			"index":23,
			"inputs":{
				"variables":[
					{
						"source":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"value":"{{ dYjeA.outputs.new_workflow_json }}"
					}
				]
			},
			"skip":false,
			"subTitle":"updatedWorkflowJson",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":96,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"Ei77E",
			"index":24,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"newModifiedWorkflow":{
							"type":"object",
							"title":"newModifiedWorkflow"
						},
						"changedNodeIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"changedNodeIds"
						},
						"replacementNodeIdMap":{
							"type":"object",
							"title":"replacementNodeIdMap"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"newWorkflow":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"newWorkflow"
						},
						"oldWorkflow":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"oldWorkflow"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def changedNodeIds = []\ndef totalNodeIds   = []\ndef triggerKind = null\ndef oldUsedActions = [:]\ndef newUsedActions = [:]\n\ndef replaceNodeMap = [:]\n\nif (newWorkflow == \"{}\" || !newWorkflow?.nodes) {\n    return [\n        newModifiedWorkflow   : oldWorkflow,\n        changedNodeIds        : [],\n        replacementNodeIdMap  : [:]\n    ]\n}\n\n/* ---------- build map for OLD workflow ---------- */\ndef oldNodes = oldWorkflow.nodes\nfor (int i = 0; i < oldNodes.size(); i++) {\n    def node = oldNodes[i]\n\n    /* skip nodes without context / resourceName */\n    if (!node?.context || node.context.resourceName == null) {\n        continue\n    }\n\n    def resource = node.context.resourceName\n    oldUsedActions.computeIfAbsent(resource) { [] }\n    oldUsedActions[resource] << i\n}\n\n/* ---------- build map for NEW workflow ---------- */\ndef newNodes = newWorkflow.nodes\nfor (int i = 0; i < newNodes.size(); i++) {\n    def node = newNodes[i]\n\n    /* skip nodes without context / resourceName */\n    if (!node?.context || node.context.resourceName == null) {\n        continue\n    }\n\n    def resource = node.context.resourceName\n    if (!newUsedActions.containsKey(resource)) {\n        newUsedActions[resource] = []\n        totalNodeIds << node.id          // remember first node with this resource\n    }\n    newUsedActions[resource] << i\n}\n\nint nodeDiff = newWorkflow.nodes.size() - oldWorkflow.nodes.size()\n\n/* ---------- compare / replace when possible ---------- */\nif (nodeDiff <= 1) {\n    newUsedActions.each { key, newIndexesList ->\n        def oldIndexesList = oldUsedActions[key]\n\n        /* identical number of occurrences ⇒ simple replace */\n        if (oldIndexesList?.size() == newIndexesList?.size()) {\n            for (int j = 0; j < oldIndexesList.size(); j++) {\n                def previousNode   = newWorkflow.nodes[newIndexesList[j]]\n                def oldWorkflowNode = oldWorkflow.nodes[oldIndexesList[j]]\n\n                newWorkflow.nodes[newIndexesList[j]] = oldWorkflowNode\n                replaceNodeMap[oldWorkflowNode.id] = previousNode.id\n                newWorkflow.nodes[newIndexesList[j]].id      = previousNode.id\n                newWorkflow.nodes[newIndexesList[j]].groupId = previousNode.groupId\n                // PATCH: Always update branch node's branches to new workflow's\n                if (newWorkflow.nodes[newIndexesList[j]].type == \"BRANCH\" && previousNode.inputs?.branches) {\n                    newWorkflow.nodes[newIndexesList[j]].inputs.branches = previousNode.inputs.branches\n                }\n                changedNodeIds << previousNode.id\n            }\n            return\n        }\n\n        /* different sizes ⇒ try to match by index offset */\n        newIndexesList.each { newIndex ->\n            int convertedIndex = newIndex - nodeDiff\n            if (convertedIndex >= 0 &&\n                convertedIndex < oldNodes.size() &&\n                oldIndexesList?.contains(convertedIndex)) {\n\n                def previousNode    = newWorkflow.nodes[newIndex]\n                def oldWorkflowNode = oldWorkflow.nodes[convertedIndex]\n\n                newWorkflow.nodes[newIndex] = oldWorkflowNode\n                replaceNodeMap[oldWorkflowNode.id] = previousNode.id\n                newWorkflow.nodes[newIndex].id      = previousNode.id\n                newWorkflow.nodes[newIndex].groupId = previousNode.groupId\n                // PATCH: Always update branch node's branches to new workflow's\n                if (newWorkflow.nodes[newIndex].type == \"BRANCH\" && previousNode.inputs?.branches) {\n                    newWorkflow.nodes[newIndex].inputs.branches = previousNode.inputs.branches\n                }\n                changedNodeIds << previousNode.id\n            }\n        }\n    }\n}\n\nString toTitleCase(String input) {\n    if (input == null) {\n        return \"\"\n    }\n    String[] words = input.split('_')\n    return words.collect { word -> word.capitalize() }.join(' ')\n}\n\nString getTitleCasedName(String input, String appName) {\n    if(input == null) {\n        return \"\"\n    }\n    input = input.substring(Math.min(input.length(), appName.length() + 1))\n    return toTitleCase(input)\n}\n\n/* ------------ PATCH newModifiedWorkflow NODE TYPES --------------- */\ndef patchedNodes = newWorkflow.nodes.collect { node ->\n    def patchedNode = node.clone()      // Defensive copy in case shared references; deep clone not needed if fields are shallow\n\n    // Trigger node handling\n    if (patchedNode.trigger != null) {\n        def resourceName = patchedNode?.context?.resourceName\n        if (!patchedNode?.context || resourceName == \"callables_from_automation\") {\n            triggerKind   = \"AUTOMATION\"         \n            resourceName  = \"callables_from_automation\"\n            patchedNode.title = \"Trigger via automation\"\n\n        } else if (resourceName == \"callables_from_api\") {\n            triggerKind   = \"API\"              \n            patchedNode.title = \"Trigger via API\"\n        } else {\n            return patchedNode // Exit if condition does not match any expected resourceName\n        }\n        patchedNode.trigger = [type: \"CALLABLE\"]\n        patchedNode.type = \"START\"\n        patchedNode.remove('height')\n        patchedNode.remove('width')\n        patchedNode.context = [:]\n        patchedNode.context.appName = \"callables\"\n        patchedNode.context.resourceName = resourceName\n    } else {\n        if (patchedNode?.subTitle == null) {\n            patchedNode.subTitle = toTitleCase(patchedNode?.context?.appName)\n        }\n        if (patchedNode?.title == null) {\n            patchedNode.title = getTitleCasedName(patchedNode?.context?.resourceName, patchedNode?.context?.appName)\n        }\n\n        //\n        if (patchedNode?.type == null)\n            patchedNode.type = \"ACTION\"\n\n        // Placeholder node handling (no context)\n        if (patchedNode?.context == null) {\n            patchedNode.subTitle = \"Select an app and action\"\n        }\n\n        // Special nodes handling\n        if (patchedNode.context?.appName == \"loop\") {\n            patchedNode.type = \"LOOP\"\n        } else if (patchedNode.context?.appName == \"if_else\") {\n            patchedNode.type = \"IF_ELSE\"\n        } else if (patchedNode.context?.appName == \"branch_condition\") {\n            patchedNode.type = \"BRANCH_CONDITION\"\n        } else if (patchedNode.context?.appName == \"branch\") {\n            patchedNode.type = \"BRANCH\"\n        } else if (patchedNode.context && patchedNode.context?.appName?.contains(\"csv\")) {\n            patchedNode.context.type = \"APPLICATION\"\n            patchedNode.fallbackMode = \"STOP\"\n        }\n    }\n\n    // Stop node handling\n    stopActions = [\"callables_return_to_automation\", \"callables_return_response_to_api\", \"stop\"]\n    stopActionSubTitles = [\"Callable\", \"Callable\", null]\n    stopActionTitles = [\"Respond to automation\", \"Respond to API request\", null]\n    if (patchedNode.context?.resourceName in stopActions) {\n        patchedNode.type = \"STOP\"\n        def idx = stopActions.indexOf(patchedNode.context?.resourceName)\n        // Hardcode subtitles except for stop nodes\n        if (stopActionSubTitles[idx]) {\n            patchedNode.subTitle = stopActionSubTitles[idx]\n            patchedNode.title = stopActionTitles[idx]\n        }\n        if (patchedNode.context?.appName == \"stop\") {\n            patchedNode.context.remove(\"resourceName\")\n            patchedNode.remove(\"title\")\n            patchedNode.subTitle = \"Stop\"\n        }\n    }\n    return patchedNode\n}\ndef correctedNodes = patchedNodes.collect { node ->\n    if (node.type == \"STOP\") {\n\n        /* ---------- automation callable ----------- */\n        if (triggerKind == \"AUTOMATION\") {\n            if (node.context?.resourceName != \"callables_return_to_automation\") {\n                node.context = [appName: \"callables\",\n                                resourceName: \"callables_return_to_automation\"]\n                node.subTitle = \"Callable\"\n                node.title    = \"Respond to automation\"\n            }\n\n        /* ---------- API callable ----------- */\n        } else if (triggerKind == \"API\") {\n            if (node.context?.resourceName != \"callables_return_response_to_api\") {\n                node.context = [appName: \"callables\",\n                                resourceName: \"callables_return_response_to_api\"]\n                node.subTitle = \"Callable\"\n                node.title    = \"Respond to API request\"\n            }\n\n        /* ---------- plain stop ----------- */\n        } else {\n            if (node.context?.appName != \"stop\") {\n                node.context = [appName: \"stop\"]\n                node.subTitle = \"Stop\"\n                node.remove(\"title\")     \n            }\n        }\n    }\n    return node\n}  \n\ndef finalNodes = correctedNodes.collect { node ->\n    if (node.context?.resourceName == \"branch\") {\n        node.context.remove(\"resourceName\")\n    }\n    return node\n}\nnewWorkflow.nodes = finalNodes\n\n/* ---------- result ---------- */\nreturn [\n    newModifiedWorkflow   : newWorkflow,\n    changedNodeIds        : totalNodeIds,\n    replacementNodeIdMap  : replaceNodeMap\n]",
				"parameters":{
					"oldWorkflow":"{{ LMjYV.outputs.workflowJson }}",
					"newWorkflow":"{{ 35BuH.outputs.updatedWorkflowJson }}"
				}
			},
			"skip":false,
			"subTitle":"Detect Updates & Get final Workflow",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":116,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"04LwR",
			"index":25,
			"inputs":{
				"variables":[
					{
						"source":"{{ 35BuH.outputs.updatedWorkflowJson }}",
						"value":"{{ Ei77E.outputs.result.newModifiedWorkflow }}"
					}
				]
			},
			"skip":false,
			"subTitle":"updatedWorkflowJson",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":118,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"9liih",
			"index":26,
			"inputs":{
				"automationId":"66a69a54f4b4427b7398cefe",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"oldWorkflow":"{{ LMjYV.outputs.workflowJson }}",
					"newWorkflow":"{{ N7GFb.outputs.result.new_workflow_graph }}"
				}
			},
			"skip":true,
			"subTitle":"Detect Node Changes",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":84,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"SAkLV",
			"index":27,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"dummyChangedNodeIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"dummyChangedNodeIds"
						},
						"dummyGraph":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"dummyGraph"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"result = {\n    'dummyChangedNodeIds':[\n        \"vSndz\",\n        \"npTRr\"\n    ],\n    \"dummyGraph\": {\n        \"nodes\": [\n            {\n                \"groupId\": \"vSndz-1\",\n                \"context\": {\n                    \"appName\": \"callables\",\n                    \"resourceName\": \"callables_from_automation\"\n                },\n                \"id\": \"vSndz\",\n                \"trigger\": {\n                    \"type\": \"CALLABLE\"\n                },\n                \"type\": \"START\"\n            },\n            {\n                \"groupId\": \"vSndz-1\",\n                \"context\": {\n                    \"appName\": \"slack\",\n                    \"resourceName\": \"slack_post_message_in_channel\"\n                },\n                \"id\": \"npTRr\",\n                \"type\": \"ACTION\"\n            }\n        ],\n        \"edges\": [\n            {\n                \"toNodeId\": \"npTRr\",\n                \"fromNodeId\": \"vSndz\",\n                \"type\": \"next\"\n            }\n        ]\n    }\n}",
				"isAsync":false
			},
			"skip":true,
			"subTitle":"DUMMY",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"02QzQ",
			"index":28,
			"inputs":{
				"automationId":"681b6a5bb8b7345a42b6159c",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ 35BuH.outputs.caseId }}",
					"updatedWorkflowJson":"{{ 35BuH.outputs.updatedWorkflowJson }}",
					"changedNodeIds":{
						"source":"{{ Ei77E.outputs.result.changedNodeIds }}",
						"ua:type":"mappedArray",
						"items":"{{ Ei77E.outputs.result.changedNodeIds[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Update Workflow State",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"Hztfy",
			"index":29,
			"inputs":{
				"automationId":"681b6a0fb8b7345a42b612ef",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ 35BuH.outputs.caseId }}"
				}
			},
			"skip":true,
			"subTitle":"Send message to UI",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":358,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"dOYmr",
			"index":30,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"response":{
							"type":"string",
							"title":"Response"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"errorList":{
							"type":"string",
							"title":"Error List"
						},
						"workflowGraph":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Graph"
						}
					},
					"additionalProperties":false,
					"required":[
						"workflowGraph"
					]
				},
				"compile_static":false,
				"code":"def response = \"Workflow has been updated. Find the updated workflow in the system message, you can find the updated workflow in the system prompt.\"\n\ndef returnGraph = workflowGraph.toString()\n\n\n\nif (binding.hasVariable('errorList')) {\n    if (errorList && errorList.size() > 0) {\n        response += \"\\n\\nHowever, these are some warnings/errors. Confirm these with the user after calling the `FillInput` tool:\\n\"\n        errorList.eachWithIndex { err, idx ->\n            response += \"${idx + 1}. ${err}\\n\"\n        }\n    }\n}\n\nresult = [\n    \"response\": response + \"\\n\\n It is also here below. \\n\\n\"+ returnGraph\n]",
				"parameters":{
					"errorList":"{{ SGNiL.outputs.items }}",
					"workflowGraph":"{{ 35BuH.outputs.updatedWorkflowJson }}"
				}
			},
			"skip":false,
			"subTitle":"Prepare Response",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":322,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kOh0v-1",
			"id":"vvkbh",
			"index":31,
			"inputs":{
				"result":{
					"output":"{{ dOYmr.outputs.result.response }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":39717,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"Text_to_Workflow_v2"
	],
	"version":127
}