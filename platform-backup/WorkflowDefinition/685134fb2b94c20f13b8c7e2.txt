{
	"appsUsed":[
		
	],
	"createdTime":1750490312663,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243605230,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed555e003e08cdeb300d",
		"status":"DEPLOYED",
		"version":45,
		"workflowVersion":69
	},
	"description":"This automation converts the thinking_agent_without_tools models to agent_system_prompt_without_tools(default) response format.",
	"edges":[
		{
			"fromNodeId":"n_1XNM7",
			"priority":0,
			"skip":false,
			"toNodeId":"_zErEh",
			"type":"next"
		},
		{
			"fromNodeId":"_zErEh",
			"priority":0,
			"skip":false,
			"toNodeId":"n_KF3n3",
			"type":"next"
		},
		{
			"fromNodeId":"n_KF3n3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ly6Uh",
			"type":"next"
		},
		{
			"fromNodeId":"n_ly6Uh",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_nM9QI",
			"type":"if"
		},
		{
			"fromNodeId":"n_ly6Uh",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ggUk3",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"685134fb2b94c20f13b8c7e2",
	"lastModifiedBy":-1,
	"lcName":"agentwithtoolsresponseconverter",
	"modifiedTime":1759371923274,
	"name":"AgentWithToolsResponseConverter",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":444,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_tGkfr-1",
			"id":"n_1XNM7",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"llmResponse":{
							"type":"string",
							"title":"llmResponse"
						},
						"toolsToExecute":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"arguments":{
										"type":"string",
										"title":"arguments"
									}
								},
								"additionalProperties":false
							},
							"title":"toolsToExecute"
						}
					},
					"additionalProperties":false,
					"dynamic":true
				},
				"setup":{
					"type":"object",
					"properties":{
						"llmResponse":{
							"type":"string",
							"title":"llmResponse"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_tGkfr-1",
			"id":"_zErEh",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"thought":{
							"type":"string",
							"title":"thought"
						},
						"finalAnswer":{
							"type":"string",
							"title":"finalAnswer"
						},
						"toolCall":{
							"type":"object",
							"title":"toolCall",
							"properties":{
								"name":{
									"type":"string",
									"title":"name"
								},
								"arguments":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"arguments"
								}
							},
							"required":[]
						},
						"finalLlmResponse":{
							"type":"string",
							"title":"finalLlmResponse"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"llmResponse":{
							"type":"string",
							"title":"llmResponse"
						}
					},
					"additionalProperties":false
				},
				"compile_static":true,
				"code":"import java.util.regex.Pattern\nimport java.util.regex.Matcher\n\nString llmResponse = binding.hasVariable(\"llmResponse\") ? binding.getVariable(\"llmResponse\") as String : \"\"\n\nList<Map<String, Object>> jsonObjects = []\ntry {\n    int startIndex = llmResponse.indexOf('{')\n    int endIndex = llmResponse.lastIndexOf('}')\n    if (startIndex != -1 && endIndex != -1 && endIndex > startIndex) {\n        String jsonStr = llmResponse.substring(startIndex, endIndex + 1).trim()\n        Map<String, Object> jsonObj = com.unifyapps.infra.utils.JsonUtils.fromJson(jsonStr, Map.class) as Map<String, Object>\n        if (jsonObj != null) jsonObjects.add(jsonObj)\n    }\n} catch (Exception e) {}\n\nList<Pattern> blockPatterns = [Pattern.compile(\"(?s)```json(.*?)```\"), Pattern.compile(\"(?s)```(.*?)```\")]\nfor (Pattern pattern : blockPatterns) {\n    Matcher matcher = pattern.matcher(llmResponse)\n    while (matcher.find()) {\n        try {\n            String jsonStr = matcher.group(1).trim()\n            Map<String, Object> jsonObj = com.unifyapps.infra.utils.JsonUtils.fromJson(jsonStr, Map.class) as Map<String, Object>\n            if (jsonObj != null) jsonObjects.add(jsonObj)\n        } catch (Exception e) {}\n    }\n}\n\nList<String> rawJsons = []\nint idx = 0\nwhile (idx < llmResponse.length()) {\n    int openIdx = llmResponse.indexOf('{', idx)\n    if (openIdx == -1) break\n    int closeIdx = -1\n    int depth = 1\n    int i = openIdx + 1\n    boolean inStr = false\n    boolean escaped = false\n    while (i < llmResponse.length() && depth > 0) {\n        char ch = llmResponse.charAt(i)\n        if (escaped) {\n            escaped = false\n        } else if (ch == '\\\\') {\n            escaped = true\n        } else if (ch == '\"') {\n            inStr = !inStr\n        } else if (!inStr) {\n            if (ch == '{') depth++\n            else if (ch == '}') depth--\n        }\n        i++\n    }\n    if (depth == 0) {\n        closeIdx = i - 1\n        rawJsons.add(llmResponse.substring(openIdx, closeIdx + 1))\n        idx = closeIdx + 1\n    } else {\n        idx = openIdx + 1\n    }\n}\n\nfor (String jsonStr : rawJsons) {\n    try {\n        Map<String, Object> jsonObj = com.unifyapps.infra.utils.JsonUtils.fromJson(jsonStr, Map.class) as Map<String, Object>\n        if (jsonObj != null) jsonObjects.add(jsonObj)\n    } catch (Exception e1) {\n        if (jsonStr.contains(\"\\\\\\\"\")) {\n            try {\n                String unescaped = jsonStr.replace(\"\\\\\\\"\", \"\\\"\")\n                if (unescaped.startsWith(\"\\\"\") && unescaped.endsWith(\"\\\"\")) {\n                    unescaped = unescaped.substring(1, unescaped.length() - 1)\n                }\n                Map<String, Object> jsonObj = com.unifyapps.infra.utils.JsonUtils.fromJson(unescaped, Map.class) as Map<String, Object>\n                if (jsonObj != null) jsonObjects.add(jsonObj)\n            } catch (Exception e2) {\n                try {\n                    String fixed = jsonStr.replace(\"\\\\\\\\\\\"\", \"\\\"\").replace(\"\\\\\\\"\", \"\\\"\")\n                    Map<String, Object> jsonObj = com.unifyapps.infra.utils.JsonUtils.fromJson(fixed, Map.class) as Map<String, Object>\n                    if (jsonObj != null) jsonObjects.add(jsonObj)\n                } catch (Exception e3) {}\n            }\n        }\n    }\n}\n\nString thought = null\nint thoughtSize = 0\nfor (Map<String, Object> obj : jsonObjects) {\n    if (obj.containsKey(\"thought\") && obj.get(\"thought\") != null) {\n        String val = obj.get(\"thought\").toString()\n        if (val.length() > thoughtSize) {\n            thought = val\n            thoughtSize = val.length()\n        }\n    }\n}\n\nif (thought == null) {\n    Matcher thoughtMatch = (llmResponse =~ /(?s)thought(.*?)final_answer/)\n    if (thoughtMatch.find()) {\n        thought = thoughtMatch.group(1)?.trim()\n    }\n}\n\nString finalAnswer = null\nint finalAnswerSize = 0\nfor (Map<String, Object> obj : jsonObjects) {\n    if (obj.containsKey(\"final_answer\") && obj.get(\"final_answer\") != null) {\n        String val = obj.get(\"final_answer\").toString()\n        if (val.length() > finalAnswerSize) {\n            finalAnswer = val\n            finalAnswerSize = val.length()\n        }\n    }\n}\n\nif (finalAnswer == null) {\n    Matcher finalMatch = (llmResponse =~ /(?s)final_answer(.*)/)\n    if (finalMatch.find()) {\n        finalAnswer = finalMatch.group(1)?.trim()\n    }\n}\n\nMap<String, Object> toolCall = [name: \"\", arguments: [:]]\nint toolSize = 0\nfor (Map<String, Object> obj : jsonObjects) {\n    Object callData = obj.containsKey(\"tool_call\") ? obj.get(\"tool_call\") : (obj.containsKey(\"tool_calls\") ? obj.get(\"tool_calls\") : null)\n    if (callData != null) {\n        Map<String, Object> callParsed = [name: \"\", arguments: [:]]\n        if (callData instanceof Map) {\n            Map callMap = (Map) callData\n            callParsed[\"name\"] = callMap.get(\"name\")?.toString() ?: \"\"\n            callParsed[\"arguments\"] = callMap.get(\"arguments\") instanceof Map ? (Map) callMap.get(\"arguments\") : [:]\n        } else if (callData instanceof String) {\n            try {\n                Map parsed = com.unifyapps.infra.utils.JsonUtils.fromJson(callData.toString(), Map.class) as Map\n                if (parsed != null) {\n                    callParsed[\"name\"] = parsed.get(\"name\")?.toString() ?: \"\"\n                    callParsed[\"arguments\"] = parsed.get(\"arguments\") instanceof Map ? (Map) parsed.get(\"arguments\") : [:]\n                }\n            } catch (Exception e) {}\n        }\n        int size = callParsed.toString().length()\n        if (size > toolSize) {\n            toolSize = size\n            toolCall = callParsed\n        }\n    }\n}\n\nString finalLlmResponse = \"\"\nif (thought != null && thought.length() > 0) {\n    finalLlmResponse += \"Thought: \" + thought\n}\nif (finalAnswer != null && finalAnswer.length() > 0) {\n    finalLlmResponse += \"\\nFinalAnswer: \" + finalAnswer\n}\n\nreturn [\n    thought: thought,\n    finalAnswer: finalAnswer,\n    toolCall: toolCall,\n    finalLlmResponse: finalLlmResponse\n]\n",
				"parameters":{
					"llmResponse":"{{ n_1XNM7.outputs.llmResponse }}"
				}
			},
			"skip":false,
			"subTitle":"parse",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":445,
				"resourceName":"utility_by_unifyapps_to_json_string",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_tGkfr-1",
			"id":"n_KF3n3",
			"index":0,
			"inputs":{
				"object":"{{ _zErEh.outputs.result.toolCall.arguments }}"
			},
			"skip":false,
			"subTitle":"toolInputs",
			"title":"Serialise object to JSON string",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":438,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_tGkfr-1",
			"id":"n_ly6Uh",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ _zErEh.outputs.result.toolCall.name }}",
						"filter":{
							"operator":"MISSING"
						}
					},
					{
						"property":"=LEN({{ _zErEh.outputs.result.toolCall.name }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"tool?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ly6Uh@_tGkfr-1@y",
			"id":"_nM9QI",
			"index":0,
			"inputs":{
				"result":{
					"toolsToExecute":[
						null
					],
					"llmResponse":"{{ _zErEh.outputs.result.finalLlmResponse }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ly6Uh@_tGkfr-1@n",
			"id":"n_ggUk3",
			"index":0,
			"inputs":{
				"result":{
					"toolsToExecute":[
						{
							"arguments":"{{ n_KF3n3.outputs.result }}",
							"name":"{{ _zErEh.outputs.result.toolCall.name }}"
						}
					],
					"llmResponse":"{{ _zErEh.outputs.result.finalLlmResponse }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1728,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":70
}