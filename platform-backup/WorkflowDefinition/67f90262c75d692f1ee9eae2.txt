{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1745474397015,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1758655340077,
		"deployedBy":0,
		"deployedDefinitionId":"68d2f36c38757c179b12333b",
		"status":"DEPLOYED",
		"version":63,
		"workflowVersion":107
	},
	"edges":[
		{
			"fromNodeId":"8XOsz",
			"priority":0,
			"skip":false,
			"toNodeId":"qn1cB",
			"type":"next"
		},
		{
			"fromNodeId":"qn1cB",
			"priority":0,
			"skip":false,
			"toNodeId":"3672B",
			"type":"next"
		},
		{
			"fromNodeId":"3672B",
			"priority":0,
			"skip":false,
			"toNodeId":"nab9H",
			"type":"next"
		},
		{
			"fromNodeId":"nab9H",
			"priority":0,
			"skip":false,
			"toNodeId":"1OTM7",
			"type":"next"
		},
		{
			"fromNodeId":"1OTM7",
			"priority":0,
			"skip":false,
			"toNodeId":"67U1C",
			"type":"next"
		},
		{
			"fromNodeId":"67U1C",
			"priority":0,
			"skip":false,
			"toNodeId":"ULtar",
			"type":"next"
		},
		{
			"fromNodeId":"ULtar",
			"priority":0,
			"skip":false,
			"toNodeId":"WCs1g",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"67f90262c75d692f1ee9eae2",
	"lastModifiedBy":-1,
	"lcName":"eval | dataset | fetch tools used for session",
	"modifiedTime":1759243528287,
	"name":"Eval | Dataset | Fetch tools used for session",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":189,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"8XOsz",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"hasContent":{
							"type":"boolean",
							"title":"Has Content"
						},
						"toolDetails":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Tool Details"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						}
					},
					"additionalProperties":false,
					"required":[
						"caseId"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"qn1cB",
			"index":2,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ 8XOsz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"ASC"
					}
				],
				"page":{
					"paginateBy":"OFFSET",
					"limit":2000
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.messages.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"3672B",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"startTime":{
							"type":"number",
							"title":"Start Time"
						},
						"endTime":{
							"type":"number",
							"title":"End Time"
						}
					},
					"additionalProperties":false,
					"required":[
						"startTime"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Messages"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if (!binding.hasVariable(\"messages\") || messages.size() == 0){\n  return [:]\n}\nreturn [\"startTime\": messages[0].createdTime,\"endTime\":messages[-1].createdTime]",
				"parameters":{
					"messages":{
						"source":"{{ qn1cB.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ qn1cB.outputs.objects[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":70,
				"resourceName":"analytics_by_unifyapps_query_reports",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"nab9H",
			"index":4,
			"inputs":{
				"projections":[
					{
						"aggregationFunction":"GROUP",
						"includePercentageChange":false,
						"name":"WORKFLOW_EXECUTION=::=CASE_ID",
						"alias":"caseId"
					},
					{
						"aggregationFunction":"GROUP",
						"includePercentageChange":false,
						"name":"ID",
						"alias":"executionId"
					},
					{
						"aggregationFunction":"GROUP",
						"includePercentageChange":false,
						"name":"START_TIME",
						"alias":"startTime"
					},
					{
						"aggregationFunction":"GROUP",
						"includePercentageChange":false,
						"name":"END_TIME",
						"alias":"endTime"
					},
					{
						"aggregationFunction":"GROUP",
						"includePercentageChange":false,
						"name":"ROOT_EXECUTION_INSTANCE_ID",
						"alias":"rootExecutionInstanceId"
					}
				],
				"filter":{
					"filters":[
						{
							"property":"WORKFLOW_ID",
							"filter":{
								"operator":"EQUAL",
								"value":"67df12719fa26d792211be4f"
							}
						},
						{
							"property":"WORKFLOW_EXECUTION=::=CASE_ID",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ 8XOsz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"entityType":"WORKFLOW_EXECUTION",
				"page":{
					"offset":0,
					"limit":100
				},
				"sorts":[
					{
						"field":"startTime",
						"order":"ASC"
					}
				],
				"timeFilter":{
					"since":"{{ 3672B.outputs.result.startTime }}",
					"until":"{{ 3672B.outputs.result.endTime }}"
				},
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Analytics by UnifyApps",
			"title":"Analytics Query",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.workflowExecution.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"1OTM7",
			"index":5,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"workflowExecution":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Workflow Execution"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"\nif (!binding.hasVariable(\"workflowExecution\")) {\n  return [:]\n}\n\ndef workflowVariableIds = []\nworkflowExecution.forEach { execution ->\n  String rootExecutionInstanceId = execution.rootExecutionInstanceId ?: execution.executionId\n  String executionId = execution.executionId  \n\n  workflowVariableIds << executionId\n}\n\n// Build a comma-separated list of quoted varIds for the SQL IN clause\nString varIds = workflowVariableIds.collect { \"'$it'\" }.join(',')\n\n// Construct the query string using the generated varIds and the timestamp range\nreturn [\n  \"query\": \"select inputs, outputs from WORKFLOW_NODE_EXECUTION WHERE executionInstanceId IN (\" + varIds + \")\" + \" and currentNodeId = '8aRmT';\"\n]\n",
				"parameters":{
					"workflowExecution":{
						"source":"{{ nab9H.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ nab9H.outputs.objects[0].columns }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":80,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"67U1C",
			"index":6,
			"inputs":{
				"outputSchema":{
					"type":"object",
					"properties":{
						"columns":{
							"type":"object",
							"properties":{
								"payload":{
									"type":"string",
									"title":"Payload"
								}
							},
							"additionalProperties":false,
							"title":"Columns",
							"required":[
								"payload"
							]
						}
					},
					"additionalProperties":false,
					"required":[
						"columns"
					]
				},
				"query":"{{ 1OTM7.outputs.result.query }}",
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Fetch tool input and name",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.nodeExecution.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":82,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"ULtar",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"toolDetailsList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"messageId":{
										"type":"string",
										"title":"Message Id"
									},
									"output":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Output"
									},
									"name":{
										"type":"string",
										"title":"Tool Name"
									},
									"input":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Tool Input"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Tool Details List"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"nodeExecution":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Node Execution"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import com.unifyapps.infra.utils.JsonUtils\n\nif (!binding.hasVariable('nodeExecution')) {\n    return null\n}\n\ndef toolDetailsList = []\n\nnodeExecution.eachWithIndex { entry, idx ->\n    if (!entry.inputs) {\n        return\n    }\n    def inputMsg = JsonUtils.fromJson(entry.inputs, Map.class)\n    def params   = inputMsg.parameters ?: [:]\n\n    // Normalize output\n    def toolOutput = [:]\n    if (entry.outputs) {\n        def outputMsg = JsonUtils.fromJson(entry.outputs, Map.class)\n        def rawOutput = (outputMsg.success ? outputMsg.toolOutput : outputMsg.message)\n\n        try {\n            toolOutput = JsonUtils.fromJson(rawOutput, Map.class)\n        } catch (Exception e) {\n            toolOutput = [value: rawOutput]   // wrap string in a map\n        }\n    }\n\n    // Normalize input (ensure it's always a map)\n    def toolInput = params.toolInputs\n    if (!(toolInput instanceof Map)) {\n        try {\n            toolInput = JsonUtils.fromJson(toolInput.toString(), Map.class)\n        } catch (Exception e) {\n            toolInput = [value: toolInput]\n        }\n    }\n\n    def toolId    = params.toolId\n    def toolName  = params.toolName\n    def messageId = params.agentResponseMessageId\n\n    toolDetailsList << [\n        id       : toolId,       // toolId → id\n        name     : toolName,     // toolName → name\n        input    : toolInput,\n        output   : toolOutput,\n        messageId: messageId\n    ]\n}\n\nreturn [ toolDetailsList: toolDetailsList ]\n",
				"parameters":{
					"nodeExecution":{
						"source":"{{ 67U1C.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ 67U1C.outputs.objects[0].columns }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Extract tool use details",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":82,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TsfJt-1",
			"id":"WCs1g",
			"index":8,
			"inputs":{
				"result":{
					"hasContent":"=(LEN({{ ULtar.outputs.result.toolDetailsList }})>0)",
					"toolDetails":{
						"source":"{{ ULtar.outputs.result.toolDetailsList }}",
						"ua:type":"mappedArray",
						"items":"{{ ULtar.outputs.result.toolDetailsList[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":-1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":108
}