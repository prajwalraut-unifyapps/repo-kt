{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1736593633738,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759243615047,
		"deployedBy":-1,
		"deployedDefinitionId":"68dbed5f9213d707c2d27494",
		"status":"DEPLOYED",
		"version":77,
		"workflowVersion":116
	},
	"edges":[
		{
			"fromNodeId":"wFCqc",
			"priority":0,
			"skip":false,
			"toNodeId":"kXY3H",
			"type":"next"
		},
		{
			"fromNodeId":"kXY3H",
			"priority":0,
			"skip":false,
			"toNodeId":"RQI00",
			"type":"next"
		},
		{
			"fromNodeId":"RQI00",
			"priority":0,
			"skip":false,
			"toNodeId":"M2nB3",
			"type":"next"
		},
		{
			"fromNodeId":"M2nB3",
			"priority":0,
			"skip":false,
			"toNodeId":"FnElN",
			"type":"next"
		},
		{
			"fromNodeId":"FnElN",
			"priority":0,
			"skip":false,
			"toNodeId":"jzEWM",
			"type":"next"
		},
		{
			"fromNodeId":"jzEWM",
			"priority":0,
			"skip":false,
			"toNodeId":"0LwLs",
			"type":"next"
		},
		{
			"fromNodeId":"0LwLs",
			"priority":0,
			"skip":false,
			"toNodeId":"n_kJS00",
			"type":"loop"
		},
		{
			"fromNodeId":"n_kJS00",
			"priority":0,
			"skip":false,
			"toNodeId":"FORDc",
			"type":"next"
		},
		{
			"fromNodeId":"FORDc",
			"priority":0,
			"skip":false,
			"toNodeId":"VWsXW",
			"type":"next"
		},
		{
			"fromNodeId":"VWsXW",
			"priority":0,
			"skip":false,
			"toNodeId":"vaF59",
			"type":"next"
		},
		{
			"fromNodeId":"vaF59",
			"priority":0,
			"skip":false,
			"toNodeId":"Qn8Io",
			"type":"next"
		},
		{
			"fromNodeId":"Qn8Io",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"0LwLs",
			"type":"next"
		},
		{
			"fromNodeId":"0LwLs",
			"priority":0,
			"skip":false,
			"toNodeId":"n_EdeJI",
			"type":"next"
		},
		{
			"fromNodeId":"n_EdeJI",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_FRPLK",
			"type":"if"
		},
		{
			"fromNodeId":"n_FRPLK",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vz49k",
			"type":"next"
		},
		{
			"fromNodeId":"n_EdeJI",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vz49k",
			"type":"next"
		},
		{
			"fromNodeId":"n_vz49k",
			"priority":0,
			"skip":false,
			"toNodeId":"ZNYwD",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"678250e12148d4074fe86a2a",
	"lastModifiedBy":-1,
	"lcName":"generic_co_pilot_fetch_profile_messages",
	"modifiedTime":1759371932666,
	"name":"GENERIC_CO_PILOT_Fetch_Profile_Messages",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":46,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"wFCqc",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"message":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Message"
									},
									"messageType":{
										"type":"string",
										"title":"Message Type"
									},
									"messageContent":{
										"type":"string",
										"title":"Message Content"
									},
									"createdTime":{
										"type":"number",
										"title":"Created Time"
									},
									"messageId":{
										"type":"string",
										"title":"Message Id"
									},
									"caseId":{
										"type":"string",
										"title":"Case Id"
									},
									"hasAttachments":{
										"type":"boolean",
										"title":"Has Attachments",
										"default":false
									},
									"feedback":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Feedback"
									},
									"contextMessageId":{
										"type":"string",
										"title":"Context Message Id"
									},
									"attachments":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Attachments"
									},
									"interfaceDetails":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Interface Details"
									},
									"additional":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Additional"
									},
									"fromCustomerUserId":{
										"type":"string",
										"foreignKey":{
											"reference":"APPLICATION_BY_NAME"
										},
										"title":"From Customer User Id"
									}
								},
								"additionalProperties":false,
								"required":[
									"additional"
								]
							},
							"title":"Messages",
							"required":[]
						},
						"assignmentDetails":{
							"type":"object",
							"properties":{
								"assigneeId":{
									"type":"string",
									"title":"Assignee Id"
								},
								"assigneeType":{
									"type":"string",
									"title":"Assignee Type"
								}
							},
							"additionalProperties":false,
							"title":"Assignment Details",
							"required":[
								"assigneeId",
								"assigneeType"
							]
						},
						"additional":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Additional"
						}
					},
					"additionalProperties":false,
					"required":[
						"assignmentDetails"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"since":{
							"type":"string",
							"title":"Since"
						},
						"until":{
							"type":"string",
							"title":"Until"
						},
						"copilotType":{
							"type":"string",
							"title":"Copilot Type"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						},
						"caseId":{
							"type":"string",
							"title":"Active Case Id"
						}
					},
					"additionalProperties":false,
					"required":[
						"copilotType",
						"aiAgentId"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger from automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":245,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"kXY3H",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"userIdWithCopilot":{
							"type":"string",
							"title":"User Id With Copilot"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"caseId":"{{ wFCqc.outputs.caseId }}",
				"userIdWithCopilot":"{{ __RUN__.outputs.userId }}#{{ wFCqc.outputs.copilotType }}#{{ wFCqc.outputs.aiAgentId }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"userIdWithCopilot":{
							"type":"string",
							"title":"User Id With Copilot"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":204,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"RQI00",
			"index":3,
			"inputs":{
				"automationId":"66eaeecb5dd77636e1fcc1f9",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"channelName":"AI_AGENT",
					"channelSpecificId":"{{ kXY3H.outputs.userIdWithCopilot }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"{{ kXY3H.outputs.userIdWithCopilot }}",
					"enabled":true,
					"timeToLive":"86400",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"g/c customerProfile",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"M2nB3",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"filter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Filter"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"since":{
							"type":"string",
							"title":"Since"
						},
						"until":{
							"type":"string",
							"title":"Until"
						},
						"customerProfileId":{
							"type":"string",
							"title":"Customer Profile Id"
						}
					},
					"additionalProperties":false,
					"required":[
						"customerProfileId"
					]
				},
				"compile_static":false,
				"code":"def childFilters = []\ndef userFilters = []\ndef formCustomerFilter = [\n        field: 'properties.fromCustomerUserId',\n        op: 'IN',\n        values: [customerProfileId]\n    ] \nuserFilters.add(formCustomerFilter)    \n\ndef toCustomerFilter = [\n        field: 'properties.toCustomerUserId',\n        op: 'IN',\n        values: [customerProfileId]\n    ] \nuserFilters.add(toCustomerFilter)    \n\nchildFilters.add([\n        op: 'OR',\n        values : userFilters\n    ])\n//since\nif(binding.hasVariable('since')) {\ndef sinceFilter = [\n        field: 'cTm',\n        op: 'GT',\n        values: [since]\n    ] \n    childFilters.add(sinceFilter)\n} \n\n//until\nif(binding.hasVariable('until')) {\ndef untilFilter = [\n        field: 'cTm',\n        op: 'LT',\n        values: [until]\n    ] \n    childFilters.add(untilFilter)\n}  \n\nreturn [\"filter\":[\n        op: 'AND',\n        values : childFilters\n    ]]\n",
				"isAsync":false,
				"parameters":{
					"since":"{{ wFCqc.outputs.since }}",
					"until":"{{ wFCqc.outputs.until }}",
					"customerProfileId":"{{ RQI00.outputs.customerProfileId }}"
				}
			},
			"skip":false,
			"subTitle":"create filter",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1065,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"FnElN",
			"index":5,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"resolvedFilter":{
								"filter":"{{ M2nB3.outputs.result.filter }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"DESC"
					}
				],
				"page":{
					"paginateBy":"OFFSET",
					"limit":30,
					"offset":0
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Messages",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":115,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"jzEWM",
			"index":6,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"messageType":{
											"type":"string",
											"title":"messageType"
										},
										"caseId":{
											"type":"string",
											"title":"caseId"
										},
										"createdTime":{
											"type":"integer",
											"title":"createdTime"
										},
										"messageId":{
											"type":"string",
											"title":"messageId"
										},
										"message":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{
													"data":{
														"type":"object",
														"properties":{},
														"title":"data",
														"additionalProperties":false,
														"required":[]
													},
													"blockType":{
														"type":"string",
														"title":"blockType"
													},
													"appearance":{
														"type":"object",
														"properties":{},
														"additionalProperties":false,
														"title":"Appearance"
													}
												},
												"additionalProperties":false
											},
											"title":"message",
											"required":[]
										},
										"feedback":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Feedback"
										},
										"contextMessageId":{
											"type":"string",
											"title":"Context Message Id"
										},
										"attachments":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{},
												"additionalProperties":false
											},
											"title":"Attachments"
										},
										"hasAttachments":{
											"type":"boolean",
											"title":"Has Attachments"
										},
										"interfaceDetails":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Interface Details"
										},
										"additional":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Additional"
										},
										"fromCustomerUserId":{
											"type":"string",
											"title":"From Customer User Id"
										}
									},
									"additionalProperties":false,
									"required":[
										"additional"
									]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"messagesList",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"messagesList",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"messageType":{
										"type":"string",
										"title":"messageType"
									},
									"caseId":{
										"type":"string",
										"title":"caseId"
									},
									"createdTime":{
										"type":"integer",
										"title":"createdTime"
									},
									"messageId":{
										"type":"string",
										"title":"messageId"
									},
									"message":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"data":{
													"type":"object",
													"properties":{},
													"title":"data",
													"additionalProperties":false,
													"required":[]
												},
												"blockType":{
													"type":"string",
													"title":"blockType"
												},
												"appearance":{
													"type":"object",
													"properties":{},
													"additionalProperties":false,
													"title":"Appearance"
												}
											},
											"additionalProperties":false
										},
										"title":"message",
										"required":[]
									},
									"feedback":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Feedback"
									},
									"contextMessageId":{
										"type":"string",
										"title":"Context Message Id"
									},
									"attachments":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Attachments"
									},
									"hasAttachments":{
										"type":"boolean",
										"title":"Has Attachments"
									},
									"interfaceDetails":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Interface Details"
									},
									"additional":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Additional"
									},
									"fromCustomerUserId":{
										"type":"string",
										"title":"From Customer User Id"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"messagesList",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":87,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"0LwLs",
			"index":7,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ FnElN.outputs.objects }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":439,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"0LwLs@9jp6m-1@l",
			"id":"n_kJS00",
			"index":8,
			"inputs":{
				"loop":"0LwLs",
				"conditions":{
					"filters":[
						{
							"property":"{{ 0LwLs.outputs.item.properties.additional.internalMessageType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"AGENT_INTERNAL_RESPONSE"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1989,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"0LwLs@9jp6m-1@l",
			"id":"FORDc",
			"index":9,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_messageId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ 0LwLs.outputs.item.id }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_user_feedback",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"limit":20,
					"offset":0
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Feedback",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":54,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"0LwLs@9jp6m-1@l",
			"id":"VWsXW",
			"index":10,
			"inputs":{
				"automationId":"66e598f208d0f101e7cd4734",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"base64":false,
					"messageId":"{{ 0LwLs.outputs.item.properties.messageId }}",
					"hasAttachments":"{{ 0LwLs.outputs.item.properties.hasAttachments }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.chunkMetadata.items",
					"root.parameters.answer.items",
					"root.parameters.formattedMessages.items",
					"root.parameters.attachments.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":52,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"0LwLs@9jp6m-1@l",
			"id":"vaF59",
			"index":11,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"additional",
						"fromCustomerUserId"
					],
					"properties":{
						"messageType":{
							"type":"string",
							"title":"messageType"
						},
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"createdTime":{
							"type":"integer",
							"title":"createdTime"
						},
						"messageId":{
							"type":"string",
							"title":"messageId"
						},
						"message":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{},
										"title":"data",
										"additionalProperties":false,
										"required":[]
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									},
									"appearance":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Appearance"
									}
								},
								"additionalProperties":false
							},
							"title":"message",
							"required":[]
						},
						"feedback":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Feedback"
						},
						"contextMessageId":{
							"type":"string",
							"title":"Context Message Id"
						},
						"attachments":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Attachments"
						},
						"hasAttachments":{
							"type":"boolean",
							"title":"Has Attachments"
						},
						"interfaceDetails":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Interface Details"
						},
						"additional":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Additional"
						},
						"fromCustomerUserId":{
							"type":"string",
							"title":"From Customer User Id"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"msg":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Msg"
						},
						"chunkMetadata":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Chunk Metadata"
						},
						"answer":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Answer"
						},
						"formattedMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Formatted Messages"
						},
						"feedback":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Feedback"
						},
						"attachments":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Attachments"
						}
					}
				},
				"code":"import org.jsoup.Jsoup\nimport org.jsoup.nodes.Document\n\n    def messageDTO = [\"caseId\": msg.properties.caseId, \"createdTime\": msg.get(\"createdTime\"), \"messageId\": msg.get(\"id\")]\n    if(msg.properties.additional !=null) {\n        messageDTO.put(\"contextMessageId\", msg.properties.additional.contextMessageId)\n        messageDTO.put(\"additional\", msg.properties.additional)\n    }\n    def messageStruct = [\"blockType\":\"Typography\", \"data\":[\"text\":msg.properties.content?.text]]\n     if (msg.properties.type == 'bot') {\n        def type = detectHtmlContent(msg.properties.content?.text) ? \"HTML\" : \"MARKDOWN\"\n    messageStruct = [\"blockType\":\"Typography\", \"data\":[\"type\": type,\"text\":msg.properties.content?.text]]\n     } else {\n            messageStruct = [\"blockType\":\"Typography\", \"data\":[\"type\": msg.properties.content?.type,\"text\":msg.properties.content?.text]]\n     }\n    def messages = []\n    messages.add(messageStruct)\n    if(binding.hasVariable('chunkMetadata')) {\n        messages.add([\"blockType\": \"Citation\", \"data\" : [\"citations\": getCitations(chunkMetadata)]])\n    }\n    if(msg.properties.content?.choiceList != null) {\n        messages.add(getChoicesContent(msg.properties.content?.choiceList))\n    }\n    def counter = 1\n    def hasAttachment = false\n    def attachmentList = []\n    if(binding.hasVariable(\"attachments\") && attachments) {\n        if (msg.properties.type == 'fan') {\n            hasAttachment = true\n            attachmentList.addAll(getFanAttachments(attachments))\n        } else {\n            messages.addAll(getBrandAttachments(attachments))\n        }        \n    }\n\n    messageDTO.put(\"message\", messages)\n    if(binding.hasVariable('formattedMessages')){\n        messageDTO.put('message', formattedMessages)\n    }\n      if(msg.properties.content?.coPilotBlocks != null && msg.properties.content?.coPilotBlocks.size() > 0){\n         messageDTO.put('message', msg.properties.content?.coPilotBlocks.blocks)\n    }\n    messageDTO.put(\"messageContent\", msg.properties.content?.text)\n    messageDTO.put(\"interfaceDetails\", msg.properties.content?.interfaceDetails)\n    messageDTO.put(\"messageType\", msg.properties.type.capitalize())\n    if(msg.properties.additional?.temporaryMessage){\n        def additional = messageDTO.additional;\n        if(additional == null) {\n            additional = [:]\n        }\n        additional.put(\"internalMessageType\", \"THOUGHT\")\n        messageDTO.put(\"additional\", additional)\n    }\n    messageDTO.put(\"hasAttachments\", hasAttachment)\n    messageDTO.put(\"fromCustomerUserId\", msg.properties.get(\"fromCustomerUserId\"))\n    messageDTO.put(\"attachments\", attachmentList)\n\n    if(binding.hasVariable('feedback')) {\n    if(feedback!=null) {\n    messageDTO.put(\"feedback\", feedback)\n    }\n    }\n    return messageDTO;\n\n\ndef getCitations(def chunkMetadata) {\n    def citations = []\n    for(chunk in chunkMetadata) {\n        def citation = [:]\n        if(chunk.get(\"channelName\")!= null) {\n            citation = [\"appName\": \"slack\", \"referenceUrl\": chunk.get(\"referenceUrl\"), \"knowledgeSourceType\": \"APPLICATION\", \"title\": chunk.get(\"channelName\")]\n        } else if(chunk.get(\"websiteUrl\") != null){\n citation = [ \"referenceUrl\":chunk.get(\"websiteUrl\"), \"knowledgeSourceType\": \"WEBSITE\", \"title\": chunk.get(\"title\")]\n        } else if(chunk.get(\"webViewUrl\") != null){\n            citation = [ \"referenceUrl\":chunk.get(\"webViewUrl\"), \"knowledgeSourceType\": \"APPLICATION\", \"appName\": \"gdrive\"]\n        } else if(chunk.get(\"appName\") != null){\n            citation = [ \"knowledgeSourceType\": \"APPLICATION\", \"referenceUrl\":chunk.get(\"referenceUrl\"), \"name\" : chunk.get(\"name\"), \"appName\": chunk.get(\"appName\")]\n        }\n        else if(chunk.get(\"kind\") != null){\n            citation = [ \"knowledgeSourceType\": \"APPLICATION\", \"referenceUrl\":chunk.get(\"referenceUrl\"), \"name\" : chunk.get(\"name\"), \"appName\": \"gdrive\"]\n        }\n        else {\n            citation = [ \"knowledgeSourceType\": \"FILE\", \"referenceUrl\":chunk.get(\"url\"), \"name\" : chunk.get(\"name\"), \"source\": chunk.get(\"source\")]\n        }\n        citation[\"chunkContents\"] = chunk[\"chunkContents\"]\n        citation[\"id\"] = chunk[\"id\"]\n        citation[\"author\"] = chunk[\"author\"]\n        citation[\"date\"] = chunk[\"date\"]\n\n        citations << citation\n    }\n\n    return citations\n}\n\ndef getFanAttachments(def attachments) {\n    def attachmentData = []\n    attachments.each { attachment -> \n            attachmentData <<  [id: attachment.id, 'name': attachment.name, url: attachment.data, fileType: attachment.fileType, mimeType: attachment.mimeType]\n    }\n    return attachmentData\n}\n\ndef getBrandAttachments(def attachments) {\n    def imageOrVideoData = []\n    def otherData = []\n    attachments.each { attachment -> \n        if (attachment.mimeType.contains(\"image\")) {\n            def imageOrVideo = [id: attachment.id, 'name': attachment.name, url: attachment.data, fileType: attachment.fileType, mimeType: attachment.mimeType]\n            if (attachment.caption != null && attachment.caption != \"\") {\n                imageOrVideo['caption'] = attachment.caption\n                imageOrVideo['showCaption'] = true\n            } else {\n                imageOrVideo['showCaption'] = false\n            }\n            imageOrVideoData << imageOrVideo\n        } else {\n            otherData <<  [id: attachment.id, 'name': attachment.name, url: attachment.data, fileType: attachment.fileType, mimeType: attachment.mimeType]\n        } \n    }\n    def returnData = []\n    if (imageOrVideoData) {\n        returnData.add([\"blockType\":\"Media\", \"data\":imageOrVideoData])\n    }\n    if (otherData) {\n        returnData.add([\"blockType\":\"Media\", \"data\":otherData])\n    }\n    return returnData\n}\n\n\ndef getChoicesContent(def choices) {\n    def data = [:]\n    int i=0\n    for (choice in choices) {\n        data.put(\"\"+i,getChoice(choice))\n        i++;\n    }\n    def result = [\n        \"blockType\":\"Stack\",\n        \"appearance\":[\n            \"alignItems\":\"flex-start\",\n            \"wrapContent\":true,\n            \"styles\":[\n                \"gap\":[\"all\":\"gap-md\"],\n                \"width\":\"w-full\" \n            ],\n            \"justifyContent\":\"flex-start\",\n            \"direction\":\"row\"\n        ],\n        \"data\":data\n    ]\n return result\n}\n\ndef detectHtmlContent(String text) {\n    try {\n        // Parse the text with Jsoup\n        Document document = Jsoup.parse(text)\n\n        // Check if the body contains any HTML elements\n        return !document.body().children().isEmpty()\n    } catch (Exception e) {\n        // If parsing fails, consider it not HTML\n        return false\n    }\n}\n\nreturn [\"html\": detectHtmlContent(text)]\n\ndef getChoice(def option) {\n    def optionId = option.id\n    if (!optionId) {\n        optionId = option.title\n    }\n    def events = []\n    if (option.url) {\n        def event = [\n            \"action\": [\n                \"actionType\": \"navigate\",\n                \"payload\": [\n                    \"path\": option.url,\n                    \"history\": \"push\",\n                    \"preserveSearchParams\": false,\n                    \"target\": \"_blank\"\n                ]\n            ],\n            \"id\": option.id,\n            \"eventType\": \"onClick\"\n        ]\n        events << event\n    }\n\n    def resp = [\n        \"content\":[\n            \"value\":option.title\n        ],\n        \"appearance\":[\n            \"color\":\"neutral\",\n            \"size\":\"sm\",\n            \"variant\":\"outline\",\n            /*\"styles\": [\n                \"width\":\"w-full\"\n            ]*/\n        ],\n        \"blockType\":\"Button\"\n    ]\n\n    if(option.url) {\n        resp.put('events', events)\n    }\n    return resp\n}\n",
				"compile_static":false,
				"parameters":{
					"msg":"{{ 0LwLs.outputs.item }}",
					"feedback":"{{ FORDc.outputs.properties }}",
					"attachments":{
						"source":"{{ VWsXW.outputs.attachments }}",
						"ua:type":"mappedArray",
						"items":"{{ VWsXW.outputs.attachments[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.message.items.data",
					"root.itemToAdd.message.items.blockType",
					"root.itemToAdd.message.items.appearance",
					"root.itemToAdd.attachments.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":62,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"0LwLs@9jp6m-1@l",
			"id":"Qn8Io",
			"index":12,
			"inputs":{
				"itemToAdd":{
					"messageType":"{{ vaF59.outputs.result.messageType }}",
					"caseId":"{{ vaF59.outputs.result.caseId }}",
					"createdTime":"{{ vaF59.outputs.result.createdTime }}",
					"messageId":"{{ vaF59.outputs.result.messageId }}",
					"message":{
						"source":"{{ vaF59.outputs.result.message }}",
						"ua:type":"mappedArray",
						"items":{
							"data":"{{ vaF59.outputs.result.message[0].data }}",
							"blockType":"{{ vaF59.outputs.result.message[0].blockType }}",
							"appearance":"{{ vaF59.outputs.result.message[0].appearance }}"
						}
					},
					"feedback":"{{ vaF59.outputs.result.feedback }}",
					"contextMessageId":"{{ vaF59.outputs.result.contextMessageId }}",
					"attachments":{
						"source":"{{ vaF59.outputs.result.attachments }}",
						"ua:type":"mappedArray",
						"items":"{{ vaF59.outputs.result.attachments[0] }}"
					},
					"hasAttachments":"{{ vaF59.outputs.result.hasAttachments }}",
					"interfaceDetails":"{{ vaF59.outputs.result.interfaceDetails }}",
					"additional":"{{ vaF59.outputs.result.additional }}",
					"fromCustomerUserId":"{{ vaF59.outputs.result.fromCustomerUserId }}"
				},
				"insertLocation":"END",
				"listName":"{{ jzEWM.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"n_EdeJI",
			"index":13,
			"inputs":{
				"filters":[
					{
						"property":"{{ jzEWM.outputs.items[0].caseId }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"messages > 0",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":447,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_EdeJI@9jp6m-1@y",
			"id":"n_FRPLK",
			"index":14,
			"inputs":{
				"variables":[
					{
						"source":"{{ kXY3H.outputs.caseId }}",
						"value":"{{ jzEWM.outputs.items[0].caseId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":77,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"n_vz49k",
			"index":15,
			"inputs":{
				"object_type":"service_hub_case",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"id":"{{ kXY3H.outputs.caseId }}",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"case",
			"title":"Fetch record by ID",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":48,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9jp6m-1",
			"id":"ZNYwD",
			"index":16,
			"inputs":{
				"result":{
					"messages":{
						"source":"{{ jzEWM.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"message":"{{ jzEWM.outputs.items[0].message }}",
							"messageType":"{{ jzEWM.outputs.items[0].messageType }}",
							"createdTime":"{{ jzEWM.outputs.items[0].createdTime }}",
							"caseId":"{{ jzEWM.outputs.items[0].caseId }}",
							"messageId":"{{ jzEWM.outputs.items[0].messageId }}",
							"hasAttachments":"{{ jzEWM.outputs.items[0].hasAttachments }}",
							"feedback":"{{ jzEWM.outputs.items[0].feedback }}",
							"contextMessageId":"{{ jzEWM.outputs.items[0].contextMessageId }}",
							"attachments":{
								"source":"{{ jzEWM.outputs.items[0].attachments }}",
								"ua:type":"mappedArray",
								"items":"{{ jzEWM.outputs.items[0].attachments[0] }}"
							},
							"interfaceDetails":"{{ jzEWM.outputs.items[0].interfaceDetails }}",
							"additional":"{{ jzEWM.outputs.items[0].additional }}",
							"fromCustomerUserId":"{{ jzEWM.outputs.items[0].fromCustomerUserId }}"
						}
					},
					"assignmentDetails":{
						"assigneeId":"{{ NRNeT.outputs.properties.assignmentDetails.assigneeId }}",
						"assigneeType":"{{ NRNeT.outputs.properties.assignmentDetails.assigneeType }}"
					},
					"additional":"{{ n_vz49k.outputs.properties.additional }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":520,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":false,
		"enableRunLogging":false,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent",
		"Team"
	],
	"version":117
}